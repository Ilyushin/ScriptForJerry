// function f(a,b){return a+2}f(2);f(3,5);
  0:                 meta   12  255          // [to be rewritten]
// 
  0:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp255;
// function f(a,b){return a+2}f(2);f(3,5);
// 
// function f(a,b){return a+2}f(2);f(3,5);
  0:          func_decl_n  254               // 
  1:                 meta    2  254          // 
  2:                 meta    2  254          // 
  0:          func_decl_n  254               //  // REWRITE
  3:                 meta    7  255          // function end: 65538;
  4:                 meta   12  255          // [to be rewritten]
  4:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  5:         reg_var_decl  128               // var tmp128 .. tmp255;
  6:           assignment  130    6          // tmp130 = a : TYPEOF(a);
  7:           assignment  131    1          // tmp131 = 2: SMALLINT;
  8:             addition  132  130          // tmp132 = tmp130 + tmp131;
  9:               retval                    // return tmp132;
  5:         reg_var_decl  128               // var tmp128 .. tmp132; // REWRITE
 10:                  ret                    // ret;
  3:                 meta    7    0          // function end: 11; // REWRITE
  2:               call_n  255  254          // 
  3:           assignment  130    1          // tmp130 = 2: SMALLINT;
  4:                 meta    2  130          // 
  2:               call_n  130  254          //  // REWRITE
  5:               call_n  255  254          // 
  6:           assignment  130    1          // tmp130 = 3: SMALLINT;
  7:                 meta    2  130          // 
  8:           assignment  130    1          // tmp130 = 5: SMALLINT;
  9:                 meta    2  130          // 
  5:               call_n  130  254          //  // REWRITE
// 
  1:         reg_var_decl  128               // var tmp128 .. tmp130; // REWRITE
 10:                  ret                    // ret;
LITERALS:
0x84ec54 [  8] f : STRING
0x84ec5c [  8] a : STRING
0x84ec64 [  8] b : STRING
0x84ec6c [ 20]  : EMPTY RECORD
  0:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  1:         reg_var_decl  128               // var tmp128 .. tmp130;
  2:          func_decl_n    0               // 
  3:                 meta    2    1          // 
  4:                 meta    2    2          // function f (a, b);
  5:                 meta    7    0          // function end: 13;
  6:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  7:         reg_var_decl  128               // var tmp128 .. tmp132;
  8:           assignment  130    6          // tmp130 = a : TYPEOF(a);
  9:           assignment  131    1          // tmp131 = 2: SMALLINT;
 10:             addition  132  130          // tmp132 = tmp130 + tmp131;
 11:               retval                    // return tmp132;
 12:                  ret                    // ret;
 13:               call_n  130    0          // 
 14:           assignment  130    1          // tmp130 = 2: SMALLINT;
 15:                 meta    2  130          // tmp130 = f (tmp130);
 16:               call_n  130    0          // 
 17:           assignment  130    1          // tmp130 = 3: SMALLINT;
 18:                 meta    2  130          // 
 19:           assignment  130    1          // tmp130 = 5: SMALLINT;
 20:                 meta    2  130          // tmp130 = f (tmp130, tmp130);
 21:                  ret                    // ret;
