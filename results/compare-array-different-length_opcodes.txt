// // Copyright (C) 2015 the V8 project authors. All rights reserved.
// 
// // This code is governed by the BSD license found in the LICENSE file.
// 
// /*---
// 
// if (compareArray([], [undefined]) !== false) {
  0:                 meta   12  255          // [to be rewritten]
//   $ERROR('Arrays of differing lengths are not equivalent.');
// }
// if (compareArray([undefined], []) !== false) {
//   $ERROR('Arrays of differing lengths are not equivalent.');
// }
// 
  0:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp255;
//   $ERROR('Arrays of differing lengths are not equivalent.');
// }
// if (compareArray([undefined], []) !== false) {
//   $ERROR('Arrays of differing lengths are not equivalent.');
// }
// 
  2:               call_n  255  254          // 
  3:           array_decl  255               // 
  3:           array_decl  130               // tmp130 = []; // REWRITE
  4:                 meta    2  130          // 
  5:           array_decl  255               // 
  6:                 meta    2  254          // 
  5:           array_decl  130               //  // REWRITE
  7:                 meta    2  130          // tmp130 = [hz, tmp130];
  2:               call_n  130  254          //  // REWRITE
  8:           assignment  131    0          // tmp131 = false: SIMPLE;
  9: not_equal_value_type  132  130          // tmp132 = tmp130 !== tmp131;
 10:    is_false_jmp_down  132  255          // if (tmp132 == false) goto 65545;
//   $ERROR('Arrays of differing lengths are not equivalent.');
 11:               call_n  255  254          // 
 12:           assignment  130    5          // tmp130 = 'Arrays of differing lengths are not equivalent.': STRING;
 13:                 meta    2  130          // 
 11:               call_n  130  254          //  // REWRITE
// }
// if (compareArray([undefined], []) !== false) {
 10:    is_false_jmp_down  132    0          // if (tmp132 == false) goto 14; // REWRITE
 14:               call_n  255  254          // 
 15:           array_decl  255               // 
 16:                 meta    2  254          // 
 15:           array_decl  130               //  // REWRITE
 17:                 meta    2  130          // tmp130 = [hz, tmp130];
 18:           array_decl  255               // 
 18:           array_decl  130               // tmp130 = []; // REWRITE
 19:                 meta    2  130          // 
 14:               call_n  130  254          //  // REWRITE
 20:           assignment  131    0          // tmp131 = false: SIMPLE;
 21: not_equal_value_type  132  130          // tmp132 = tmp130 !== tmp131;
 22:    is_false_jmp_down  132  255          // if (tmp132 == false) goto 65557;
//   $ERROR('Arrays of differing lengths are not equivalent.');
 23:               call_n  255  254          // 
 24:           assignment  130    5          // tmp130 = 'Arrays of differing lengths are not equivalent.': STRING;
 25:                 meta    2  130          // 
 23:               call_n  130  254          //  // REWRITE
// }
// 
 22:    is_false_jmp_down  132    0          // if (tmp132 == false) goto 26; // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp132; // REWRITE
 26:                  ret                    // ret;
LITERALS:
0x84ec54 [ 20] compareArray : STRING
0x84ec68 [  4] undefined : MAGIC STRING [id=6] 
0x84ec6c [ 12] $ERROR : STRING
0x84ec78 [ 56] Arrays of differing lengths are not equivalent. : STRING
0x84ecd8 [ 40]  : EMPTY RECORD
  0:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  1:         reg_var_decl  128               // var tmp128 .. tmp132;
  2:               call_n  130    0          // 
  3:           array_decl  130               // tmp130 = [];
  4:                 meta    2  130          // 
  5:           array_decl  130               // 
  6:                 meta    2    1          // tmp130 = [undefined];
  7:                 meta    2  130          // 
  8:           assignment  131    0          // tmp131 = false: SIMPLE;
  9: not_equal_value_type  132  130          // tmp132 = tmp130 !== tmp131;
 10:    is_false_jmp_down  132    0          // if (tmp132 == false) goto 14;
 11:               call_n  130    2          // 
 12:           assignment  130    5          // tmp130 = 'Arrays of differing lengths are not equivalent.': STRING;
 13:                 meta    2  130          // tmp130 = $ERROR (tmp130);
 14:               call_n  130    0          // 
 15:           array_decl  130               // 
 16:                 meta    2    1          // tmp130 = [undefined];
 17:                 meta    2  130          // 
 18:           array_decl  130               // tmp130 = [];
 19:                 meta    2  130          // 
 20:           assignment  131    0          // tmp131 = false: SIMPLE;
 21: not_equal_value_type  132  130          // tmp132 = tmp130 !== tmp131;
 22:    is_false_jmp_down  132    0          // if (tmp132 == false) goto 26;
 23:               call_n  130    2          // 
 24:           assignment  130    5          // tmp130 = 'Arrays of differing lengths are not equivalent.': STRING;
 25:                 meta    2  130          // tmp130 = $ERROR (tmp130);
 26:                  ret                    // ret;
