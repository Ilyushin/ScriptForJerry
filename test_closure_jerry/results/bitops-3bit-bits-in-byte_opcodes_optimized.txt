// var a,b,c=0;for(a=0;500>a;a++)for(b=0;256>b;b++)var d=c,e=b,f=void 0,f=3&59796>>(e<<1&14),f=f+(3&59796>>(e>>2&14)),f=f+(3&59796>>(e>>5&6)),c=d+f;sum=c;if(512E3!=sum)throw"ERROR: bad result: expected 512000 but got "+sum;
  0:                 meta   12  255          // [to be rewritten]
// 
  0:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp255;
// var a,b,c=0;for(a=0;500>a;a++)for(b=0;256>b;b++)var d=c,e=b,f=void 0,f=3&59796>>(e<<1&14),f=f+(3&59796>>(e>>2&14)),f=f+(3&59796>>(e>>5&6)),c=d+f;sum=c;if(512E3!=sum)throw"ERROR: bad result: expected 512000 but got "+sum;
  2:             var_decl                    // var a;
  3:             var_decl                    // var b;
  4:             var_decl                    // var c;
  5:             var_decl                    // var d;
  6:             var_decl                    // var e;
  7:             var_decl                    // var f;
// 
// var a,b,c=0;for(a=0;500>a;a++)for(b=0;256>b;b++)var d=c,e=b,f=void 0,f=3&59796>>(e<<1&14),f=f+(3&59796>>(e>>2&14)),f=f+(3&59796>>(e>>5&6)),c=d+f;sum=c;if(512E3!=sum)throw"ERROR: bad result: expected 512000 but got "+sum;
  8:           assignment  130    1          // tmp130 = 0: SMALLINT;
  9:           assignment  254    6          // c = tmp130 : TYPEOF(tmp130);
 10:           assignment  130    1          // tmp130 = 0: SMALLINT;
 11:           assignment  254    6          // a = tmp130 : TYPEOF(tmp130);
 12:             jmp_down  255               // goto 65547;
 13:           assignment  130    1          // tmp130 = 0: SMALLINT;
 14:           assignment  254    6          // b = tmp130 : TYPEOF(tmp130);
 15:             jmp_down  255               // goto 65550;
 16:           assignment  254    6          // d = c : TYPEOF(c);
 17:           assignment  254    6          // e = b : TYPEOF(b);
 18:           assignment  130    1          // tmp130 = 0: SMALLINT;
 19:           assignment  131    6          // tmp131 = tmp130 : TYPEOF(tmp130);
 20:           assignment  131    0          // tmp131 = undefined: SIMPLE;
 21:           assignment  254    6          // f = tmp131 : TYPEOF(tmp131);
 22:           assignment  132    1          // tmp132 = 3: SMALLINT;
 23:           assignment  133    3          // tmp133 = 59796: NUMBER;
 24:           assignment  134    6          // tmp134 = e : TYPEOF(e);
 25:           assignment  135    1          // tmp135 = 1: SMALLINT;
 26:         b_shift_left  136  134          // tmp136 = tmp134 << tmp135;
 27:           assignment  137    1          // tmp137 = 14: SMALLINT;
 28:                b_and  138  136          // tmp138 = tmp136 & tmp137;
 29:        b_shift_right  139  133          // tmp139 = tmp133 >> tmp138;
 30:                b_and  140  132          // tmp140 = tmp132 & tmp139;
 31:           assignment  254    6          // f = tmp140 : TYPEOF(tmp140);
 32:           assignment  141    6          // tmp141 = f : TYPEOF(f);
 33:           assignment  142    1          // tmp142 = 3: SMALLINT;
 34:           assignment  143    3          // tmp143 = 59796: NUMBER;
 35:           assignment  144    6          // tmp144 = e : TYPEOF(e);
 36:           assignment  145    1          // tmp145 = 2: SMALLINT;
 37:        b_shift_right  146  144          // tmp146 = tmp144 >> tmp145;
 38:           assignment  147    1          // tmp147 = 14: SMALLINT;
 39:                b_and  148  146          // tmp148 = tmp146 & tmp147;
 40:        b_shift_right  149  143          // tmp149 = tmp143 >> tmp148;
 41:                b_and  150  142          // tmp150 = tmp142 & tmp149;
 42:             addition  151  141          // tmp151 = tmp141 + tmp150;
 43:           assignment  254    6          // f = tmp151 : TYPEOF(tmp151);
 44:           assignment  152    6          // tmp152 = f : TYPEOF(f);
 45:           assignment  153    1          // tmp153 = 3: SMALLINT;
 46:           assignment  154    3          // tmp154 = 59796: NUMBER;
 47:           assignment  155    6          // tmp155 = e : TYPEOF(e);
 48:           assignment  156    1          // tmp156 = 5: SMALLINT;
 49:        b_shift_right  157  155          // tmp157 = tmp155 >> tmp156;
 50:           assignment  158    1          // tmp158 = 6: SMALLINT;
 51:                b_and  159  157          // tmp159 = tmp157 & tmp158;
 52:        b_shift_right  160  154          // tmp160 = tmp154 >> tmp159;
 53:                b_and  161  153          // tmp161 = tmp153 & tmp160;
 54:             addition  162  152          // tmp162 = tmp152 + tmp161;
 55:           assignment  254    6          // f = tmp162 : TYPEOF(tmp162);
 56:           assignment  163    6          // tmp163 = d : TYPEOF(d);
 57:             addition  164  163          // tmp164 = tmp163 + f;
 58:           assignment  254    6          // c = tmp164 : TYPEOF(tmp164);
 59:            post_incr  165               // tmp165 = b++;
 15:             jmp_down    0               // goto 60; // REWRITE
 60:           assignment  166    3          // tmp166 = 256: NUMBER;
 61:         greater_than  167  166          // tmp167 = tmp166 > b;
 62:       is_true_jmp_up  167    0          // if (tmp167) goto 16;
 63:            post_incr  168               // tmp168 = a++;
 12:             jmp_down    0               // goto 64; // REWRITE
 64:           assignment  169    3          // tmp169 = 500: NUMBER;
 65:         greater_than  170  169          // tmp170 = tmp169 > a;
 66:       is_true_jmp_up  170    0          // if (tmp170) goto 13;
 67:           assignment  254    6          // sum = c : TYPEOF(c);
 68:           assignment  130    6          // tmp130 = c : TYPEOF(c);
 69:           assignment  130    3          // tmp130 = 512000: NUMBER;
 70:      not_equal_value  131  130          // tmp131 = tmp130 != sum;
 71:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65606;
 72:           assignment  130    5          // tmp130 = 'ERROR: bad result: expected 512000 but got ': STRING;
 73:             addition  131  130          // tmp131 = tmp130 + sum;
 74:          throw_value                    // throw tmp131;
// 
 71:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 75; // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp170; // REWRITE
 75:                  ret                    // ret;
LITERALS:
0x84ec54 [  8] a : STRING
0x84ec5c [  8] b : STRING
0x84ec64 [  8] c : STRING
0x84ec6c [ 12] 500 : NUMBER
0x84ec78 [ 12] 256 : NUMBER
0x84ec98 [  8] d : STRING
0x84eca0 [  8] e : STRING
0x84eca8 [  8] f : STRING
0x84ecb0 [ 12] 59796 : NUMBER
0x84ecbc [ 12] sum : STRING
0x84ecdc [ 12] 512000 : NUMBER
0x84ece8 [ 52] ERROR: bad result: expected 512000 but got  : STRING
0x84ed30 [ 16]  : EMPTY RECORD
  0:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  1:         reg_var_decl  128               // var tmp128 .. tmp170;
  2:             var_decl                    // var a;
  3:             var_decl                    // var b;
  4:             var_decl                    // var c;
  5:             var_decl                    // var d;
  6:             var_decl                    // var e;
  7:             var_decl                    // var f;
  8:           assignment  130    1          // tmp130 = 0: SMALLINT;
  9:           assignment    2    6          // c = tmp130 : TYPEOF(tmp130);
 10:           assignment  130    1          // tmp130 = 0: SMALLINT;
 11:           assignment    0    6          // a = tmp130 : TYPEOF(tmp130);
 12:             jmp_down    0               // goto 64;
 13:           assignment  130    1          // tmp130 = 0: SMALLINT;
 14:           assignment    1    6          // b = tmp130 : TYPEOF(tmp130);
 15:             jmp_down    0               // goto 60;
 16:           assignment    3    6          // d = c : TYPEOF(c);
 17:           assignment    4    6          // e = b : TYPEOF(b);
 18:           assignment  130    1          // tmp130 = 0: SMALLINT;
 19:           assignment  131    6          // tmp131 = tmp130 : TYPEOF(tmp130);
 20:           assignment  131    0          // tmp131 = undefined: SIMPLE;
 21:           assignment    5    6          // f = tmp131 : TYPEOF(tmp131);
 22:           assignment  132    1          // tmp132 = 3: SMALLINT;
 23:           assignment  133    3          // tmp133 = 59796: NUMBER;
 24:           assignment  134    6          // tmp134 = e : TYPEOF(e);
 25:           assignment  135    1          // tmp135 = 1: SMALLINT;
 26:         b_shift_left  136  134          // tmp136 = tmp134 << tmp135;
 27:           assignment  137    1          // tmp137 = 14: SMALLINT;
 28:                b_and  138  136          // tmp138 = tmp136 & tmp137;
 29:        b_shift_right  139  133          // tmp139 = tmp133 >> tmp138;
 30:                b_and  140  132          // tmp140 = tmp132 & tmp139;
 31:           assignment    5    6          // f = tmp140 : TYPEOF(tmp140);
 32:           assignment  141    6          // tmp141 = f : TYPEOF(f);
 33:           assignment  142    1          // tmp142 = 3: SMALLINT;
 34:           assignment  143    3          // tmp143 = 59796: NUMBER;
 35:           assignment  144    6          // tmp144 = e : TYPEOF(e);
 36:           assignment  145    1          // tmp145 = 2: SMALLINT;
 37:        b_shift_right  146  144          // tmp146 = tmp144 >> tmp145;
 38:           assignment  147    1          // tmp147 = 14: SMALLINT;
 39:                b_and  148  146          // tmp148 = tmp146 & tmp147;
 40:        b_shift_right  149  143          // tmp149 = tmp143 >> tmp148;
 41:                b_and  150  142          // tmp150 = tmp142 & tmp149;
 42:             addition  151  141          // tmp151 = tmp141 + tmp150;
 43:           assignment    5    6          // f = tmp151 : TYPEOF(tmp151);
 44:           assignment  152    6          // tmp152 = f : TYPEOF(f);
 45:           assignment  153    1          // tmp153 = 3: SMALLINT;
 46:           assignment  154    3          // tmp154 = 59796: NUMBER;
 47:           assignment  155    6          // tmp155 = e : TYPEOF(e);
 48:           assignment  156    1          // tmp156 = 5: SMALLINT;
 49:        b_shift_right  157  155          // tmp157 = tmp155 >> tmp156;
 50:           assignment  158    1          // tmp158 = 6: SMALLINT;
 51:                b_and  159  157          // tmp159 = tmp157 & tmp158;
 52:        b_shift_right  160  154          // tmp160 = tmp154 >> tmp159;
 53:                b_and  161  153          // tmp161 = tmp153 & tmp160;
 54:             addition  162  152          // tmp162 = tmp152 + tmp161;
 55:           assignment    5    6          // f = tmp162 : TYPEOF(tmp162);
 56:           assignment  163    6          // tmp163 = d : TYPEOF(d);
 57:             addition  164  163          // tmp164 = tmp163 + f;
 58:           assignment    2    6          // c = tmp164 : TYPEOF(tmp164);
 59:            post_incr  165               // tmp165 = b++;
 60:           assignment  166    3          // tmp166 = 256: NUMBER;
 61:         greater_than  167  166          // tmp167 = tmp166 > b;
 62:       is_true_jmp_up  167    0          // if (tmp167) goto 16;
 63:            post_incr  168               // tmp168 = a++;
 64:           assignment  169    3          // tmp169 = 500: NUMBER;
 65:         greater_than  170  169          // tmp170 = tmp169 > a;
 66:       is_true_jmp_up  170    0          // if (tmp170) goto 13;
 67:           assignment    2    6          // sum = c : TYPEOF(c);
 68:           assignment  130    6          // tmp130 = c : TYPEOF(c);
 69:           assignment  130    3          // tmp130 = 512000: NUMBER;
 70:      not_equal_value  131  130          // tmp131 = tmp130 != sum;
 71:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 75;
 72:           assignment  130    5          // tmp130 = 'ERROR: bad result: expected 512000 but got ': STRING;
 73:             addition  131  130          // tmp131 = tmp130 + sum;
 74:          throw_value                    // throw tmp131;
 75:                  ret                    // ret;
