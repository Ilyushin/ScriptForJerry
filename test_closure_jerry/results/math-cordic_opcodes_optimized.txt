// for(var a=[2949120,1740963.84,919876.4032,466945.31072,234378.36288,117303.54176,58666.123264,29334.831104,14667.677696,7333.871616,3666.935808,1833.500672],b=0,c=0;25E3>c;c++){for(var d=void 0,e=void 0,f=void 0,g=void 0,h=void 0,d=39796.92834816,e=0,f=1836777.472,h=g=0;12>h;h++){var k;f>g?(k=d-(e>>h),e=(d>>h)+e,d=k,g+=a[h]):(k=d+(e>>h),e=-(d>>h)+e,d=k,g-=a[h])}b+=d/65536*(e/65536)}if(10362.570468755888!=b)throw"ERROR: bad result: expected 10362.570468755888 but got "+b;
  0:                 meta   12  253  255     // [to be rewritten]
  1:         reg_var_decl  128  253  253     // var tmp128 .. tmp253;
  2:           array_decl  253  253  255     // 
  3:           assignment  130    3  254     // tmp130 = 2949120: NUMBER;
  4:                 meta    2  130  255     // 
  5:           assignment  130    3  254     // tmp130 = 1740963.84: NUMBER;
  6:                 meta    2  130  255     // 
  7:           assignment  130    3  254     // tmp130 = 919876.4032: NUMBER;
  8:                 meta    2  130  255     // 
  9:           assignment  130    3  254     // tmp130 = 466945.31072: NUMBER;
 10:                 meta    2  130  255     // 
 11:           assignment  130    3  254     // tmp130 = 234378.36288: NUMBER;
 12:                 meta    2  130  255     // 
 13:           assignment  130    3  254     // tmp130 = 117303.54176: NUMBER;
 14:                 meta    2  130  255     // 
 15:           assignment  130    3  254     // tmp130 = 58666.123264: NUMBER;
 16:                 meta    2  130  255     // 
 17:           assignment  130    3  254     // tmp130 = 29334.831104: NUMBER;
 18:                 meta    2  130  255     // 
 19:           assignment  130    3  254     // tmp130 = 14667.677696: NUMBER;
 20:                 meta    2  130  255     // 
 21:           assignment  130    3  254     // tmp130 = 7333.871616: NUMBER;
 22:                 meta    2  130  255     // 
 23:           assignment  130    3  254     // tmp130 = 3666.935808: NUMBER;
 24:                 meta    2  130  255     // 
 25:           assignment  130    3  254     // tmp130 = 1833.500672: NUMBER;
 26:                 meta    2  130  255     // 
  2:           array_decl  130    0   12     //  // REWRITE
 27:           assignment  254    6  130     // a = tmp130 : TYPEOF(tmp130);
 28:           assignment  131    1    0     // tmp131 = 0: SMALLINT;
 29:           assignment  254    6  131     // b = tmp131 : TYPEOF(tmp131);
 30:           assignment  132    1    0     // tmp132 = 0: SMALLINT;
 31:           assignment  254    6  132     // c = tmp132 : TYPEOF(tmp132);
 32:             jmp_down  253  253          // goto 65053;
 33:           assignment  130    1    0     // tmp130 = 0: SMALLINT;
 34:           assignment  131    6  130     // tmp131 = tmp130 : TYPEOF(tmp130);
 35:           assignment  131    0    1     // tmp131 = undefined: SIMPLE;
 36:           assignment  254    6  131     // d = tmp131 : TYPEOF(tmp131);
 37:           assignment  132    1    0     // tmp132 = 0: SMALLINT;
 38:           assignment  133    6  132     // tmp133 = tmp132 : TYPEOF(tmp132);
 39:           assignment  133    0    1     // tmp133 = undefined: SIMPLE;
 40:           assignment  254    6  133     // e = tmp133 : TYPEOF(tmp133);
 41:           assignment  134    1    0     // tmp134 = 0: SMALLINT;
 42:           assignment  135    6  134     // tmp135 = tmp134 : TYPEOF(tmp134);
 43:           assignment  135    0    1     // tmp135 = undefined: SIMPLE;
 44:           assignment  254    6  135     // f = tmp135 : TYPEOF(tmp135);
 45:           assignment  136    1    0     // tmp136 = 0: SMALLINT;
 46:           assignment  137    6  136     // tmp137 = tmp136 : TYPEOF(tmp136);
 47:           assignment  137    0    1     // tmp137 = undefined: SIMPLE;
 48:           assignment  254    6  137     // g = tmp137 : TYPEOF(tmp137);
 49:           assignment  138    1    0     // tmp138 = 0: SMALLINT;
 50:           assignment  139    6  138     // tmp139 = tmp138 : TYPEOF(tmp138);
 51:           assignment  139    0    1     // tmp139 = undefined: SIMPLE;
 52:           assignment  254    6  139     // h = tmp139 : TYPEOF(tmp139);
 53:           assignment  140    3  254     // tmp140 = 39796.92834816: NUMBER;
 54:           assignment  254    6  140     // d = tmp140 : TYPEOF(tmp140);
 55:           assignment  141    1    0     // tmp141 = 0: SMALLINT;
 56:           assignment  254    6  141     // e = tmp141 : TYPEOF(tmp141);
 57:           assignment  142    3  254     // tmp142 = 1836777.472: NUMBER;
 58:           assignment  254    6  142     // f = tmp142 : TYPEOF(tmp142);
 59:           assignment  143    1    0     // tmp143 = 0: SMALLINT;
 60:           assignment  254    6  143     // g = tmp143 : TYPEOF(tmp143);
 61:           assignment  254    6  143     // h = tmp143 : TYPEOF(tmp143);
 62:             jmp_down  253  253          // goto 65083;
 63:           assignment  130    6  254     // tmp130 = f : TYPEOF(f);
 64:         greater_than  131  130  254     // tmp131 = tmp130 > g;
 65:    is_false_jmp_down  131  253  253     // if (tmp131 == false) goto 65086;
 66:           assignment  132    6  254     // tmp132 = d : TYPEOF(d);
 67:           assignment  133    6  254     // tmp133 = e : TYPEOF(e);
 68:        b_shift_right  134  133  254     // tmp134 = tmp133 >> h;
 69:         substraction  135  132  134     // tmp135 = tmp132 - tmp134;
 70:           assignment  254    6  135     // k = tmp135 : TYPEOF(tmp135);
 71:           assignment  136    6  254     // tmp136 = d : TYPEOF(d);
 72:        b_shift_right  137  136  254     // tmp137 = tmp136 >> h;
 73:             addition  138  137  254     // tmp138 = tmp137 + e;
 74:           assignment  254    6  138     // e = tmp138 : TYPEOF(tmp138);
 75:           assignment  254    6  254     // d = k : TYPEOF(k);
 76:           assignment  139    6  254     // tmp139 = k : TYPEOF(k);
 77:          prop_getter  140  254  254     // tmp140 = a[h];
 78:             addition  254  254  140     // g = g + tmp140;
 79:           assignment  141    6  254     // tmp141 = g : TYPEOF(g);
 80:             jmp_down  253  253          // goto 65101;
 65:    is_false_jmp_down  131    0   16     // if (tmp131 == false) goto 81; // REWRITE
 81:           assignment  142    6  254     // tmp142 = d : TYPEOF(d);
 82:           assignment  143    6  254     // tmp143 = e : TYPEOF(e);
 83:        b_shift_right  144  143  254     // tmp144 = tmp143 >> h;
 84:             addition  145  142  144     // tmp145 = tmp142 + tmp144;
 85:           assignment  254    6  145     // k = tmp145 : TYPEOF(tmp145);
 86:           assignment  146    6  254     // tmp146 = d : TYPEOF(d);
 87:        b_shift_right  147  146  254     // tmp147 = tmp146 >> h;
 88:          unary_minus  148  147          // tmp148 = -tmp147;
 89:             addition  149  148  254     // tmp149 = tmp148 + e;
 90:           assignment  254    6  149     // e = tmp149 : TYPEOF(tmp149);
 91:           assignment  254    6  254     // d = k : TYPEOF(k);
 92:           assignment  150    6  254     // tmp150 = k : TYPEOF(k);
 93:          prop_getter  151  254  254     // tmp151 = a[h];
 94:         substraction  254  254  151     // g = g - tmp151;
 95:           assignment  141    6  254     // tmp141 = g : TYPEOF(g);
 80:             jmp_down    0   16          // goto 96; // REWRITE
 96:            post_incr  152  254          // tmp152 = h++;
 62:             jmp_down    0   35          // goto 97; // REWRITE
 97:           assignment  153    1   12     // tmp153 = 12: SMALLINT;
 98:         greater_than  154  153  254     // tmp154 = tmp153 > h;
 99:       is_true_jmp_up  154    0   36     // if (tmp154) goto 63;
100:           assignment  130    6  254     // tmp130 = d : TYPEOF(d);
101:           assignment  131    3  254     // tmp131 = 65536: NUMBER;
102:             division  132  130  131     // tmp132 = tmp130 / tmp131;
103:           assignment  133    6  254     // tmp133 = e : TYPEOF(e);
104:           assignment  134    3  254     // tmp134 = 65536: NUMBER;
105:             division  135  133  134     // tmp135 = tmp133 / tmp134;
106:       multiplication  136  132  135     // tmp136 = tmp132 * tmp135;
107:             addition  254  254  136     // b = b + tmp136;
108:           assignment  137    6  254     // tmp137 = b : TYPEOF(b);
109:            post_incr  138  254          // tmp138 = c++;
 32:             jmp_down    0   78          // goto 110; // REWRITE
110:           assignment  139    3  254     // tmp139 = 25000: NUMBER;
111:         greater_than  140  139  254     // tmp140 = tmp139 > c;
112:       is_true_jmp_up  140    0   79     // if (tmp140) goto 33;
113:           assignment  130    3  254     // tmp130 = 10362.570468755888: NUMBER;
114:      not_equal_value  131  130  254     // tmp131 = tmp130 != b;
115:    is_false_jmp_down  131  253  253     // if (tmp131 == false) goto 65136;
116:           assignment  130    5  254     // tmp130 = 'ERROR: bad result: expected 10362.570468755888 but got ': STRING;
117:             addition  131  130  254     // tmp131 = tmp130 + b;
118:          throw_value  131               // throw tmp131;
// 
115:    is_false_jmp_down  131    0    4     // if (tmp131 == false) goto 119; // REWRITE
  0:                 meta   12    6  255     // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128  154    0     // var tmp128 .. tmp154; // REWRITE
119:                  ret                    // ret;
LITERALS:
0x8a54c4 [  8] a : STRING
0x8a54cc [ 12] 2949120 : NUMBER
0x8a54d8 [ 12] 1740963.84 : NUMBER
0x8a54e4 [ 12] 919876.4032 : NUMBER
0x8a54f0 [ 12] 466945.31072 : NUMBER
0x8a54fc [ 12] 234378.36288 : NUMBER
0x8a550c [ 12] 117303.54176 : NUMBER
0x8a5518 [ 12] 58666.123264 : NUMBER
0x8a5524 [ 12] 29334.831104 : NUMBER
0x8a5530 [ 12] 14667.677696 : NUMBER
0x8a553c [ 12] 7333.871616 : NUMBER
0x8a554c [ 12] 3666.935808 : NUMBER
0x8a5558 [ 12] 1833.500672 : NUMBER
0x8a5564 [  8] b : STRING
0x8a556c [  8] c : STRING
0x8a5574 [ 12] 25000 : NUMBER
0x8a5584 [  8] d : STRING
0x8a558c [  8] e : STRING
0x8a5594 [  8] f : STRING
0x8a559c [  4] g : MAGIC STRING [id=206] 
0x8a55a0 [  8] h : STRING
0x8a55a8 [ 12] 39796.92834816 : NUMBER
0x8a55b4 [ 12] 1836777.472 : NUMBER
0x8a55c4 [  8] k : STRING
0x8a55cc [ 12] 65536 : NUMBER
0x8a55d8 [ 12] 10362.570468755888 : NUMBER
0x8a55e4 [ 64] ERROR: bad result: expected 10362.570468755888 but got  : STRING
0x8a5628 [ 24]  : EMPTY RECORD
  0:                 meta   12    6  255     // [no 'arguments'] [no 'eval'] 
  1:         reg_var_decl  128  154    0     // var tmp128 .. tmp154;
  2:             var_decl    0               // var a;
  3:             var_decl    1               // var b;
  4:             var_decl    2               // var c;
  5:             var_decl    3               // var d;
  6:             var_decl    4               // var e;
  7:             var_decl    5               // var f;
  8:             var_decl    6               // var g;
  9:             var_decl    7               // var h;
 10:             var_decl    8               // var k;
 11:           array_decl  130    0   12     // 
 12:           assignment  130    3    9     // tmp130 = 2949120: NUMBER;
 13:                 meta    2  130  255     // 
 14:           assignment  130    3   10     // tmp130 = 1740963.84: NUMBER;
 15:                 meta    2  130  255     // 
 16:           assignment  130    3   11     // tmp130 = 919876.4032: NUMBER;
 17:                 meta    2  130  255     // 
 18:           assignment  130    3   12     // tmp130 = 466945.31072: NUMBER;
 19:                 meta    2  130  255     // 
 20:           assignment  130    3   13     // tmp130 = 234378.36288: NUMBER;
 21:                 meta    2  130  255     // 
 22:           assignment  130    3   14     // tmp130 = 117303.54176: NUMBER;
 23:                 meta    2  130  255     // 
 24:           assignment  130    3   15     // tmp130 = 58666.123264: NUMBER;
 25:                 meta    2  130  255     // 
 26:           assignment  130    3   16     // tmp130 = 29334.831104: NUMBER;
 27:                 meta    2  130  255     // 
 28:           assignment  130    3   17     // tmp130 = 14667.677696: NUMBER;
 29:                 meta    2  130  255     // 
 30:           assignment  130    3   18     // tmp130 = 7333.871616: NUMBER;
 31:                 meta    2  130  255     // 
 32:           assignment  130    3   19     // tmp130 = 3666.935808: NUMBER;
 33:                 meta    2  130  255     // 
 34:           assignment  130    3   20     // tmp130 = 1833.500672: NUMBER;
 35:                 meta    2  130  255     // tmp130 = [tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130, tmp130];
 36:           assignment    0    6  130     // a = tmp130 : TYPEOF(tmp130);
 37:           assignment  131    1    0     // tmp131 = 0: SMALLINT;
 38:           assignment    1    6  131     // b = tmp131 : TYPEOF(tmp131);
 39:           assignment  132    1    0     // tmp132 = 0: SMALLINT;
 40:           assignment    2    6  132     // c = tmp132 : TYPEOF(tmp132);
 41:             jmp_down    0   78          // goto 119;
 42:           assignment  130    1    0     // tmp130 = 0: SMALLINT;
 43:           assignment  131    6  130     // tmp131 = tmp130 : TYPEOF(tmp130);
 44:           assignment  131    0    1     // tmp131 = undefined: SIMPLE;
 45:           assignment    3    6  131     // d = tmp131 : TYPEOF(tmp131);
 46:           assignment  132    1    0     // tmp132 = 0: SMALLINT;
 47:           assignment  133    6  132     // tmp133 = tmp132 : TYPEOF(tmp132);
 48:           assignment  133    0    1     // tmp133 = undefined: SIMPLE;
 49:           assignment    4    6  133     // e = tmp133 : TYPEOF(tmp133);
 50:           assignment  134    1    0     // tmp134 = 0: SMALLINT;
 51:           assignment  135    6  134     // tmp135 = tmp134 : TYPEOF(tmp134);
 52:           assignment  135    0    1     // tmp135 = undefined: SIMPLE;
 53:           assignment    5    6  135     // f = tmp135 : TYPEOF(tmp135);
 54:           assignment  136    1    0     // tmp136 = 0: SMALLINT;
 55:           assignment  137    6  136     // tmp137 = tmp136 : TYPEOF(tmp136);
 56:           assignment  137    0    1     // tmp137 = undefined: SIMPLE;
 57:           assignment    6    6  137     // g = tmp137 : TYPEOF(tmp137);
 58:           assignment  138    1    0     // tmp138 = 0: SMALLINT;
 59:           assignment  139    6  138     // tmp139 = tmp138 : TYPEOF(tmp138);
 60:           assignment  139    0    1     // tmp139 = undefined: SIMPLE;
 61:           assignment    7    6  139     // h = tmp139 : TYPEOF(tmp139);
 62:           assignment  140    3   21     // tmp140 = 39796.92834816: NUMBER;
 63:           assignment    3    6  140     // d = tmp140 : TYPEOF(tmp140);
 64:           assignment  141    1    0     // tmp141 = 0: SMALLINT;
 65:           assignment    0    6  141     // e = tmp141 : TYPEOF(tmp141);
 66:           assignment  142    3    1     // tmp142 = 1836777.472: NUMBER;
 67:           assignment    2    6  142     // f = tmp142 : TYPEOF(tmp142);
 68:           assignment  143    1    0     // tmp143 = 0: SMALLINT;
 69:           assignment    3    6  143     // g = tmp143 : TYPEOF(tmp143);
 70:           assignment    4    6  143     // h = tmp143 : TYPEOF(tmp143);
 71:             jmp_down    0   35          // goto 106;
 72:           assignment  130    6    2     // tmp130 = f : TYPEOF(f);
 73:         greater_than  131  130    3     // tmp131 = tmp130 > g;
 74:    is_false_jmp_down  131    0   16     // if (tmp131 == false) goto 90;
 75:           assignment  132    6    5     // tmp132 = d : TYPEOF(d);
 76:           assignment  133    6    0     // tmp133 = e : TYPEOF(e);
 77:        b_shift_right  134  133    4     // tmp134 = tmp133 >> h;
 78:         substraction  135  132  134     // tmp135 = tmp132 - tmp134;
 79:           assignment    6    6  135     // k = tmp135 : TYPEOF(tmp135);
 80:           assignment  136    6    5     // tmp136 = d : TYPEOF(d);
 81:        b_shift_right  137  136    4     // tmp137 = tmp136 >> h;
 82:             addition  138  137    0     // tmp138 = tmp137 + e;
 83:           assignment    0    6  138     // e = tmp138 : TYPEOF(tmp138);
 84:           assignment    5    6    6     // d = k : TYPEOF(k);
 85:           assignment  139    6    6     // tmp139 = k : TYPEOF(k);
 86:          prop_getter  140    7    4     // tmp140 = a[h];
 87:             addition    3    3  140     // g = g + tmp140;
 88:           assignment  141    6    3     // tmp141 = g : TYPEOF(g);
 89:             jmp_down    0   16          // goto 105;
 90:           assignment  142    6    5     // tmp142 = d : TYPEOF(d);
 91:           assignment  143    6    0     // tmp143 = e : TYPEOF(e);
 92:        b_shift_right  144  143    4     // tmp144 = tmp143 >> h;
 93:             addition  145  142  144     // tmp145 = tmp142 + tmp144;
 94:           assignment    6    6  145     // k = tmp145 : TYPEOF(tmp145);
 95:           assignment  146    6    5     // tmp146 = d : TYPEOF(d);
 96:        b_shift_right  147  146    4     // tmp147 = tmp146 >> h;
 97:          unary_minus  148  147          // tmp148 = -tmp147;
 98:             addition  149  148    0     // tmp149 = tmp148 + e;
 99:           assignment    0    6  149     // e = tmp149 : TYPEOF(tmp149);
100:           assignment    5    6    6     // d = k : TYPEOF(k);
101:           assignment  150    6    6     // tmp150 = k : TYPEOF(k);
102:          prop_getter  151    7    4     // tmp151 = a[h];
103:         substraction    3    3  151     // g = g - tmp151;
104:           assignment  141    6    3     // tmp141 = g : TYPEOF(g);
105:            post_incr  152    4          // tmp152 = h++;
106:           assignment  153    1   12     // tmp153 = 12: SMALLINT;
107:         greater_than  154  153    4     // tmp154 = tmp153 > h;
108:       is_true_jmp_up  154    0   36     // if (tmp154) goto 72;
109:           assignment  130    6    5     // tmp130 = d : TYPEOF(d);
110:           assignment  131    3    8     // tmp131 = 65536: NUMBER;
111:             division  132  130  131     // tmp132 = tmp130 / tmp131;
112:           assignment  133    6    0     // tmp133 = e : TYPEOF(e);
113:           assignment  134    3    8     // tmp134 = 65536: NUMBER;
114:             division  135  133  134     // tmp135 = tmp133 / tmp134;
115:       multiplication  136  132  135     // tmp136 = tmp132 * tmp135;
116:             addition    9    9  136     // b = b + tmp136;
117:           assignment  137    6    9     // tmp137 = b : TYPEOF(b);
118:            post_incr  138   10          // tmp138 = c++;
119:           assignment  139    3   11     // tmp139 = 25000: NUMBER;
120:         greater_than  140  139   10     // tmp140 = tmp139 > c;
121:       is_true_jmp_up  140    0   79     // if (tmp140) goto 42;
122:           assignment  130    3   12     // tmp130 = 10362.570468755888: NUMBER;
123:      not_equal_value  131  130    9     // tmp131 = tmp130 != b;
124:    is_false_jmp_down  131    0    4     // if (tmp131 == false) goto 128;
125:           assignment  130    5   13     // tmp130 = 'ERROR: bad result: expected 10362.570468755888 but got ': STRING;
126:             addition  131  130    9     // tmp131 = tmp130 + b;
127:          throw_value  131               // throw tmp131;
128:                  ret                    // ret;
