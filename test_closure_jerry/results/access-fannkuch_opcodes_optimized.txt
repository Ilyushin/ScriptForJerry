// var a;a:{for(var b=0,c=Array(8),d=Array(8),e=Array(8),f=Array(8),g=0,h=0;8>h;h++)d[h]=h;for(var k=8;;){if(30>b){for(h=0;8>h;h++);b++}for(;1!=k;)e[k-1]=k,k--;if(0!=d[0]&&7!=d[7]){for(h=0;8>h;h++)c[h]=d[h];for(var l=0,m;0!=(m=c[0]);){for(var n=m+1>>1,h=0;h<n;h++){var p=c[h];c[h]=c[m-h];c[m-h]=p}l++}if(l>g)for(g=l,h=0;8>h;h++)f[h]=d[h]}for(;;){if(8==k){a=g;break a}for(var q=d[0],h=0;h<k;){var r=h+1;d[h]=d[r];h=r}d[k]=q;--e[k];if(0<e[k])break;k++}}}
  0:                 meta   12  255          // [to be rewritten]
// if(22!=a)throw"ERROR: bad result: expected 22 but got "+a;
// 
  0:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp255;
// var a;a:{for(var b=0,c=Array(8),d=Array(8),e=Array(8),f=Array(8),g=0,h=0;8>h;h++)d[h]=h;for(var k=8;;){if(30>b){for(h=0;8>h;h++);b++}for(;1!=k;)e[k-1]=k,k--;if(0!=d[0]&&7!=d[7]){for(h=0;8>h;h++)c[h]=d[h];for(var l=0,m;0!=(m=c[0]);){for(var n=m+1>>1,h=0;h<n;h++){var p=c[h];c[h]=c[m-h];c[m-h]=p}l++}if(l>g)for(g=l,h=0;8>h;h++)f[h]=d[h]}for(;;){if(8==k){a=g;break a}for(var q=d[0],h=0;h<k;){var r=h+1;d[h]=d[r];h=r}d[k]=q;--e[k];if(0<e[k])break;k++}}}
  2:             var_decl                    // var a;
  3:             var_decl                    // var b;
  4:             var_decl                    // var c;
  5:             var_decl                    // var d;
  6:             var_decl                    // var e;
  7:             var_decl                    // var f;
  8:             var_decl                    // var g;
  9:             var_decl                    // var h;
 10:             var_decl                    // var k;
 11:             var_decl                    // var l;
 12:             var_decl                    // var m;
 13:             var_decl                    // var n;
 14:             var_decl                    // var p;
 15:             var_decl                    // var q;
 16:             var_decl                    // var r;
// if(22!=a)throw"ERROR: bad result: expected 22 but got "+a;
// 
// var a;a:{for(var b=0,c=Array(8),d=Array(8),e=Array(8),f=Array(8),g=0,h=0;8>h;h++)d[h]=h;for(var k=8;;){if(30>b){for(h=0;8>h;h++);b++}for(;1!=k;)e[k-1]=k,k--;if(0!=d[0]&&7!=d[7]){for(h=0;8>h;h++)c[h]=d[h];for(var l=0,m;0!=(m=c[0]);){for(var n=m+1>>1,h=0;h<n;h++){var p=c[h];c[h]=c[m-h];c[m-h]=p}l++}if(l>g)for(g=l,h=0;8>h;h++)f[h]=d[h]}for(;;){if(8==k){a=g;break a}for(var q=d[0],h=0;h<k;){var r=h+1;d[h]=d[r];h=r}d[k]=q;--e[k];if(0<e[k])break;k++}}}
 17:           assignment  130    1          // tmp130 = 0: SMALLINT;
 18:           assignment  254    6          // b = tmp130 : TYPEOF(tmp130);
 19:               call_n  255  254          // 
 20:           assignment  131    1          // tmp131 = 8: SMALLINT;
 21:                 meta    2  131          // 
 19:               call_n  131  254          //  // REWRITE
 22:           assignment  254    6          // c = tmp131 : TYPEOF(tmp131);
 23:               call_n  255  254          // 
 24:           assignment  132    1          // tmp132 = 8: SMALLINT;
 25:                 meta    2  132          // 
 23:               call_n  132  254          //  // REWRITE
 26:           assignment  254    6          // d = tmp132 : TYPEOF(tmp132);
 27:               call_n  255  254          // 
 28:           assignment  133    1          // tmp133 = 8: SMALLINT;
 29:                 meta    2  133          // 
 27:               call_n  133  254          //  // REWRITE
 30:           assignment  254    6          // e = tmp133 : TYPEOF(tmp133);
 31:               call_n  255  254          // 
 32:           assignment  134    1          // tmp134 = 8: SMALLINT;
 33:                 meta    2  134          // 
 31:               call_n  134  254          //  // REWRITE
 34:           assignment  254    6          // f = tmp134 : TYPEOF(tmp134);
 35:           assignment  135    1          // tmp135 = 0: SMALLINT;
 36:           assignment  254    6          // g = tmp135 : TYPEOF(tmp135);
 37:           assignment  136    1          // tmp136 = 0: SMALLINT;
 38:           assignment  254    6          // h = tmp136 : TYPEOF(tmp136);
 39:             jmp_down  255               // goto 65574;
 40:          prop_getter  130  254          // tmp130 = d[h];
 40:          prop_setter  254  254          // d[h] = h;
 41:           assignment  131    6          // tmp131 = h : TYPEOF(h);
 42:            post_incr  132               // tmp132 = h++;
 39:             jmp_down    0               // goto 43; // REWRITE
 43:           assignment  133    1          // tmp133 = 8: SMALLINT;
 44:         greater_than  134  133          // tmp134 = tmp133 > h;
 45:       is_true_jmp_up  134    0          // if (tmp134) goto 40;
 46:           assignment  130    1          // tmp130 = 8: SMALLINT;
 47:           assignment  254    6          // k = tmp130 : TYPEOF(tmp130);
 48:             jmp_down  255               // goto 65583;
 49:           assignment  130    1          // tmp130 = 30: SMALLINT;
 50:         greater_than  131  130          // tmp131 = tmp130 > b;
 51:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65586;
 52:           assignment  130    1          // tmp130 = 0: SMALLINT;
 53:           assignment  254    6          // h = tmp130 : TYPEOF(tmp130);
 54:             jmp_down  255               // goto 65589;
 55:            post_incr  130               // tmp130 = h++;
 54:             jmp_down    0               // goto 56; // REWRITE
 56:           assignment  131    1          // tmp131 = 8: SMALLINT;
 57:         greater_than  132  131          // tmp132 = tmp131 > h;
 58:       is_true_jmp_up  132    0          // if (tmp132) goto 55;
 59:            post_incr  130               // tmp130 = b++;
 51:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 60; // REWRITE
 60:             jmp_down  255               // goto 65595;
 61:           assignment  130    6          // tmp130 = k : TYPEOF(k);
 62:           assignment  131    1          // tmp131 = 1: SMALLINT;
 63:         substraction  132  130          // tmp132 = tmp130 - tmp131;
 64:          prop_getter  133  254          // tmp133 = e[tmp132];
 64:          prop_setter  254  132          // e[tmp132] = k;
 65:           assignment  134    6          // tmp134 = k : TYPEOF(k);
 66:            post_decr  135               // tmp135 = k--;
 60:             jmp_down    0               // goto 67; // REWRITE
 67:           assignment  136    1          // tmp136 = 1: SMALLINT;
 68:      not_equal_value  137  136          // tmp137 = tmp136 != k;
 69:       is_true_jmp_up  137    0          // if (tmp137) goto 61;
 70:           assignment  130    1          // tmp130 = 0: SMALLINT;
 71:           assignment  131    1          // tmp131 = 0: SMALLINT;
 72:          prop_getter  132  254          // tmp132 = d[tmp131];
 73:      not_equal_value  133  130          // tmp133 = tmp130 != tmp132;
 74:           assignment  134    6          // tmp134 = tmp133 : TYPEOF(tmp133);
 75:    is_false_jmp_down  134  255          // if (tmp134 == false) goto 65610;
 76:           assignment  135    1          // tmp135 = 7: SMALLINT;
 77:           assignment  136    1          // tmp136 = 7: SMALLINT;
 78:          prop_getter  137  254          // tmp137 = d[tmp136];
 79:      not_equal_value  138  135          // tmp138 = tmp135 != tmp137;
 80:           assignment  134    6          // tmp134 = tmp138 : TYPEOF(tmp138);
 75:    is_false_jmp_down  134    0          // if (tmp134 == false) goto 81; // REWRITE
 81:    is_false_jmp_down  134  255          // if (tmp134 == false) goto 65616;
 82:           assignment  130    1          // tmp130 = 0: SMALLINT;
 83:           assignment  254    6          // h = tmp130 : TYPEOF(tmp130);
 84:             jmp_down  255               // goto 65619;
 85:          prop_getter  130  254          // tmp130 = c[h];
 85:          prop_getter  131  254          // tmp131 = d[h];
 86:          prop_setter  254  254          // c[h] = tmp131;
 87:            post_incr  132               // tmp132 = h++;
 84:             jmp_down    0               // goto 88; // REWRITE
 88:           assignment  133    1          // tmp133 = 8: SMALLINT;
 89:         greater_than  134  133          // tmp134 = tmp133 > h;
 90:       is_true_jmp_up  134    0          // if (tmp134) goto 85;
 91:           assignment  130    1          // tmp130 = 0: SMALLINT;
 92:           assignment  254    6          // l = tmp130 : TYPEOF(tmp130);
 93:             jmp_down  255               // goto 65628;
 94:           assignment  130    6          // tmp130 = m : TYPEOF(m);
 95:           assignment  131    1          // tmp131 = 1: SMALLINT;
 96:             addition  132  130          // tmp132 = tmp130 + tmp131;
 97:           assignment  133    1          // tmp133 = 1: SMALLINT;
 98:        b_shift_right  134  132          // tmp134 = tmp132 >> tmp133;
 99:           assignment  254    6          // n = tmp134 : TYPEOF(tmp134);
100:           assignment  135    1          // tmp135 = 0: SMALLINT;
101:           assignment  254    6          // h = tmp135 : TYPEOF(tmp135);
102:             jmp_down  255               // goto 65637;
103:          prop_getter  130  254          // tmp130 = c[h];
104:           assignment  254    6          // p = tmp130 : TYPEOF(tmp130);
105:          prop_getter  130  254          // tmp130 = c[h];
105:           assignment  131    6          // tmp131 = m : TYPEOF(m);
106:         substraction  132  131          // tmp132 = tmp131 - h;
107:          prop_getter  133  254          // tmp133 = c[tmp132];
108:          prop_setter  254  254          // c[h] = tmp133;
109:           assignment  130    6          // tmp130 = m : TYPEOF(m);
110:         substraction  131  130          // tmp131 = tmp130 - h;
111:          prop_getter  132  254          // tmp132 = c[tmp131];
111:          prop_setter  254  131          // c[tmp131] = p;
112:           assignment  133    6          // tmp133 = p : TYPEOF(p);
113:            post_incr  134               // tmp134 = h++;
102:             jmp_down    0               // goto 114; // REWRITE
114:           assignment  135    6          // tmp135 = h : TYPEOF(h);
115:            less_than  136  135          // tmp136 = tmp135 < n;
116:       is_true_jmp_up  136    0          // if (tmp136) goto 103;
117:            post_incr  130               // tmp130 = l++;
 93:             jmp_down    0               // goto 118; // REWRITE
118:           assignment  131    1          // tmp131 = 0: SMALLINT;
119:           assignment  132    1          // tmp132 = 0: SMALLINT;
120:          prop_getter  133  254          // tmp133 = c[tmp132];
121:           assignment  254    6          // m = tmp133 : TYPEOF(tmp133);
122:      not_equal_value  134  131          // tmp134 = tmp131 != tmp133;
123:       is_true_jmp_up  134    0          // if (tmp134) goto 94;
124:           assignment  130    6          // tmp130 = l : TYPEOF(l);
125:         greater_than  131  130          // tmp131 = tmp130 > g;
126:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65661;
127:           assignment  254    6          // g = l : TYPEOF(l);
128:           assignment  130    6          // tmp130 = l : TYPEOF(l);
129:           assignment  131    1          // tmp131 = 0: SMALLINT;
130:           assignment  254    6          // h = tmp131 : TYPEOF(tmp131);
131:             jmp_down  255               // goto 65666;
132:          prop_getter  130  254          // tmp130 = f[h];
132:          prop_getter  131  254          // tmp131 = d[h];
133:          prop_setter  254  254          // f[h] = tmp131;
134:            post_incr  132               // tmp132 = h++;
131:             jmp_down    0               // goto 135; // REWRITE
135:           assignment  133    1          // tmp133 = 8: SMALLINT;
136:         greater_than  134  133          // tmp134 = tmp133 > h;
137:       is_true_jmp_up  134    0          // if (tmp134) goto 132;
126:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 138; // REWRITE
138:             jmp_down  255               // goto 65673;
139:           assignment  130    1          // tmp130 = 8: SMALLINT;
140:          equal_value  131  130          // tmp131 = tmp130 == k;
141:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65676;
142:           assignment  254    6          // a = g : TYPEOF(g);
143:           assignment  130    6          // tmp130 = g : TYPEOF(g);
144:             jmp_down  255               // goto 65679;
141:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 145; // REWRITE
145:           assignment  130    1          // tmp130 = 0: SMALLINT;
146:          prop_getter  131  254          // tmp131 = d[tmp130];
147:           assignment  254    6          // q = tmp131 : TYPEOF(tmp131);
148:           assignment  132    1          // tmp132 = 0: SMALLINT;
149:           assignment  254    6          // h = tmp132 : TYPEOF(tmp132);
150:             jmp_down  255               // goto 65685;
151:           assignment  130    6          // tmp130 = h : TYPEOF(h);
152:           assignment  131    1          // tmp131 = 1: SMALLINT;
153:             addition  132  130          // tmp132 = tmp130 + tmp131;
154:           assignment  254    6          // r = tmp132 : TYPEOF(tmp132);
155:          prop_getter  130  254          // tmp130 = d[h];
155:          prop_getter  131  254          // tmp131 = d[r];
156:          prop_setter  254  254          // d[h] = tmp131;
157:           assignment  254    6          // h = r : TYPEOF(r);
158:           assignment  130    6          // tmp130 = r : TYPEOF(r);
150:             jmp_down    0               // goto 159; // REWRITE
159:           assignment  131    6          // tmp131 = h : TYPEOF(h);
160:            less_than  132  131          // tmp132 = tmp131 < k;
161:       is_true_jmp_up  132    0          // if (tmp132) goto 151;
162:          prop_getter  130  254          // tmp130 = d[k];
162:          prop_setter  254  254          // d[k] = q;
163:           assignment  131    6          // tmp131 = q : TYPEOF(q);
164:          prop_getter  130  254          // tmp130 = e[k];
165:             pre_decr  131               // tmp131 = --tmp130;
166:          prop_setter  254  254          // e[k] = tmp131;
167:           assignment  130    1          // tmp130 = 0: SMALLINT;
168:          prop_getter  131  254          // tmp131 = e[k];
169:            less_than  132  130          // tmp132 = tmp130 < tmp131;
170:    is_false_jmp_down  132  255          // if (tmp132 == false) goto 65705;
171:             jmp_down  255               // goto 65706;
170:    is_false_jmp_down  132    0          // if (tmp132 == false) goto 172; // REWRITE
172:            post_incr  130               // tmp130 = k++;
138:             jmp_down    0               // goto 173; // REWRITE
173:               jmp_up    0               // goto 139;
171:             jmp_down    0               // goto 174; // REWRITE
 81:    is_false_jmp_down  134    0          // if (tmp134 == false) goto 174; // REWRITE
 48:             jmp_down    0               // goto 174; // REWRITE
174:               jmp_up    0               // goto 49;
// if(22!=a)throw"ERROR: bad result: expected 22 but got "+a;
175:           assignment  130    1          // tmp130 = 22: SMALLINT;
176:      not_equal_value  131  130          // tmp131 = tmp130 != a;
177:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65712;
178:           assignment  130    5          // tmp130 = 'ERROR: bad result: expected 22 but got ': STRING;
179:             addition  131  130          // tmp131 = tmp130 + a;
180:          throw_value                    // throw tmp131;
// 
177:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 181; // REWRITE

^
ERROR: Ln 3, Col 1: Unknown token End of file
