// Object.prototype.a||(Array.prototype.a=function(a){var b=[],d,e=this.length,c;for(d=0;d<e;d+=1)switch(c=this[d],typeof c){case "object":c&&"function"===typeof c.a?b.push(c.a(a)):b.push("null");break;case "string":case "number":case "boolean":b.push(c.a());break;default:b.push("null")}return"["+b.join(",")+"]"},Boolean.prototype.a=function(){return String(this)},Date.prototype.a=function(){function a(b){return 10>b?"0"+b:b}return'"'+this.getUTCFullYear()+"-"+a(this.getUTCMonth()+1)+"-"+a(this.getUTCDate())+
  0:                 meta   12  253  255     // [to be rewritten]
  1:         reg_var_decl  128  253  253     // var tmp128 .. tmp253;
  2:           assignment  130    5  254     // tmp130 = 'prototype': STRING;
  3:          prop_getter  131  254  130     // tmp131 = Object[tmp130];
  4:           assignment  132    5  254     // tmp132 = 'a': STRING;
  5:          prop_getter  133  131  132     // tmp133 = tmp131[tmp132];
  6:           assignment  134    6  133     // tmp134 = tmp133 : TYPEOF(tmp133);
  7:     is_true_jmp_down  134  253  253     // if (tmp134) goto 65028;
  8:           assignment  135    5  254     // tmp135 = 'prototype': STRING;
  9:          prop_getter  136  254  135     // tmp136 = Array[tmp135];
 10:           assignment  137    5  254     // tmp137 = 'a': STRING;
 11:          prop_getter  138  136  137     // tmp138 = tmp136[tmp137];
  0:          func_expr_n  253  255  253     // 
  1:                 meta    2  254  255     // 
  0:          func_expr_n  139  255    1     //  // REWRITE
  2:                 meta    7  253  253     // function end: 65023;
  3:                 meta   12  253  255     // [to be rewritten]
  4:         reg_var_decl  128  253  253     // var tmp128 .. tmp253;
  5:           array_decl  253  253  255     // 
  5:           array_decl  130    0    0     // tmp130 = []; // REWRITE
  6:           assignment  254    6  130     // b = tmp130 : TYPEOF(tmp130);
  7:         this_binding  131               // tmp131 = this;
  8:           assignment  132    5  254     // tmp132 = 'length': STRING;
  9:          prop_getter  133  131  132     // tmp133 = tmp131[tmp132];
 10:           assignment  254    6  133     // e = tmp133 : TYPEOF(tmp133);
 11:           assignment  130    1    0     // tmp130 = 0: SMALLINT;
 12:           assignment  254    6  130     // d = tmp130 : TYPEOF(tmp130);
 13:             jmp_down  253  253          // goto 65034;
 14:         this_binding  130               // tmp130 = this;
 15:          prop_getter  131  130  254     // tmp131 = tmp130[d];
 16:           assignment  254    6  131     // c = tmp131 : TYPEOF(tmp131);
 17:               typeof  132  254          // tmp132 = typeof c;
 18:           assignment  133    5  254     // tmp133 = 'object': STRING;
 19:     equal_value_type  134  132  133     // tmp134 = tmp132 === tmp133;
 20:     is_true_jmp_down  134  253  253     // if (tmp134) goto 65041;
 21:           assignment  135    5  254     // tmp135 = 'string': STRING;
 22:     equal_value_type  136  132  135     // tmp136 = tmp132 === tmp135;
 23:     is_true_jmp_down  136  253  253     // if (tmp136) goto 65044;
 24:           assignment  137    5  254     // tmp137 = 'number': STRING;
 25:     equal_value_type  138  132  137     // tmp138 = tmp132 === tmp137;
 26:     is_true_jmp_down  138  253  253     // if (tmp138) goto 65047;
 27:           assignment  139    5  254     // tmp139 = 'boolean': STRING;
 28:     equal_value_type  140  132  139     // tmp140 = tmp132 === tmp139;
 29:     is_true_jmp_down  140  253  253     // if (tmp140) goto 65050;
 30:             jmp_down  253  253          // goto 65051;
 20:     is_true_jmp_down  134    0   11     // if (tmp134) goto 31; // REWRITE
 31:           assignment  130    6  254     // tmp130 = c : TYPEOF(c);
 32:    is_false_jmp_down  130  253  253     // if (tmp130 == false) goto 65053;
 33:           assignment  131    5  254     // tmp131 = 'function': STRING;
 34:           assignment  132    5  254     // tmp132 = 'a': STRING;
 35:          prop_getter  133  254  132     // tmp133 = c[tmp132];
 36:               typeof  134  133          // tmp134 = typeof tmp133;
 37:     equal_value_type  135  131  134     // tmp135 = tmp131 === tmp134;
 38:           assignment  130    6  135     // tmp130 = tmp135 : TYPEOF(tmp135);
 32:    is_false_jmp_down  130    0    7     // if (tmp130 == false) goto 39; // REWRITE
 39:    is_false_jmp_down  130  253  253     // if (tmp130 == false) goto 65060;
 40:           assignment  136    5  254     // tmp136 = 'push': STRING;
 41:          prop_getter  137  254  136     // tmp137 = b[tmp136];
 42:           assignment  138    6  254     // tmp138 = b : TYPEOF(b);
 43:               call_n  253  137  253     // 
 44:                 meta    1    1  138     // 
 45:           assignment  139    5  254     // tmp139 = 'a': STRING;
 46:          prop_getter  140  254  139     // tmp140 = c[tmp139];
 47:           assignment  141    6  254     // tmp141 = c : TYPEOF(c);
 48:               call_n  253  140  253     // 
 49:                 meta    1    1  141     // 
 50:                 meta    2  254  255     // 
 48:               call_n  142  140    1     //  // REWRITE
 51:                 meta    2  142  255     // tmp142 = tmp140 (this_arg = tmp141, ICE: Assertion 'lit_ids != NULL' failed at /home/john/git/jerry/jerry-core/vm/pretty-printer.cpp(var_to_str):102.
Error: ERR_FAILED_INTERNAL_ASSERTION
