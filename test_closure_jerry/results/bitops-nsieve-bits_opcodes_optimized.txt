// for(var a,b=4;4>=b;b++){for(var c=Array((1E4<<b)+31>>5),d=c,e=void 0,f=0,g=1E4<<b,h=g+31>>5,e=0;e<h;e++)d[e]=4294967295;for(e=2;e<g;e++)if(d[e>>5]&1<<(e&31)){for(var k=e+e;k<g;k+=e)d[k>>5]&=~(1<<(k&31));f++}}a=c;for(var l=0,m=0;m<a.length;++m)l+=a[m];if(-1286749544853!=l)throw"ERROR: bad result: expected -1286749544853 but got "+l;
  0:                 meta   12  253  255     // [to be rewritten]
  1:         reg_var_decl  128  253  253     // var tmp128 .. tmp253;
  2:           assignment  130    1    4     // tmp130 = 4: SMALLINT;
  3:           assignment  254    6  130     // b = tmp130 : TYPEOF(tmp130);
  4:             jmp_down  253  253          // goto 65025;
  5:               call_n  253  254  253     // 
  6:           assignment  130    3  254     // tmp130 = 10000: NUMBER;
  7:         b_shift_left  131  130  254     // tmp131 = tmp130 << b;
  8:           assignment  132    1   31     // tmp132 = 31: SMALLINT;
  9:             addition  133  131  132     // tmp133 = tmp131 + tmp132;
 10:           assignment  134    1    5     // tmp134 = 5: SMALLINT;
 11:        b_shift_right  135  133  134     // tmp135 = tmp133 >> tmp134;
 12:                 meta    2  135  255     // 
  5:               call_n  130  254    1     //  // REWRITE
 13:           assignment  254    6  130     // c = tmp130 : TYPEOF(tmp130);
 14:           assignment  254    6  254     // d = c : TYPEOF(c);
 15:           assignment  131    1    0     // tmp131 = 0: SMALLINT;
 16:           assignment  132    6  131     // tmp132 = tmp131 : TYPEOF(tmp131);
 17:           assignment  132    0    1     // tmp132 = undefined: SIMPLE;
 18:           assignment  254    6  132     // e = tmp132 : TYPEOF(tmp132);
 19:           assignment  133    1    0     // tmp133 = 0: SMALLINT;
 20:           assignment  254    6  133     // f = tmp133 : TYPEOF(tmp133);
 21:           assignment  134    3  254     // tmp134 = 10000: NUMBER;
 22:         b_shift_left  135  134  254     // tmp135 = tmp134 << b;
 23:           assignment  254    6  135     // g = tmp135 : TYPEOF(tmp135);
 24:           assignment  136    6  254     // tmp136 = g : TYPEOF(g);
 25:           assignment  137    1   31     // tmp137 = 31: SMALLINT;
 26:             addition  138  136  137     // tmp138 = tmp136 + tmp137;
 27:           assignment  139    1    5     // tmp139 = 5: SMALLINT;
 28:        b_shift_right  140  138  139     // tmp140 = tmp138 >> tmp139;
 29:           assignment  254    6  140     // h = tmp140 : TYPEOF(tmp140);
 30:           assignment  141    1    0     // tmp141 = 0: SMALLINT;
 31:           assignment  254    6  141     // e = tmp141 : TYPEOF(tmp141);
 32:             jmp_down  253  253          // goto 65053;
 33:          prop_getter  130  254  254     // tmp130 = d[e];
 33:           assignment  131    3  254     // tmp131 = 4294967295: NUMBER;
 34:          prop_setter  254  254  131     // d[e] = tmp131;
 35:            post_incr  132  254          // tmp132 = e++;
 32:             jmp_down    0    4          // goto 36; // REWRITE
 36:           assignment  133    6  254     // tmp133 = e : TYPEOF(e);
 37:            less_than  134  133  254     // tmp134 = tmp133 < h;
 38:       is_true_jmp_up  134    0    5     // if (tmp134) goto 33;
 39:           assignment  130    1    2     // tmp130 = 2: SMALLINT;
 40:           assignment  254    6  130     // e = tmp130 : TYPEOF(tmp130);
 41:             jmp_down  253  253          // goto 65062;
 42:           assignment  130    6  254     // tmp130 = e : TYPEOF(e);
 43:           assignment  131    1    5     // tmp131 = 5: SMALLINT;
 44:        b_shift_right  132  130  131     // tmp132 = tmp130 >> tmp131;
 45:          prop_getter  133  254  132     // tmp133 = d[tmp132];
 46:           assignment  134    1    1     // tmp134 = 1: SMALLINT;
 47:           assignment  135    6  254     // tmp135 = e : TYPEOF(e);
 48:           assignment  136    1   31     // tmp136 = 31: SMALLINT;
 49:                b_and  137  135  136     // tmp137 = tmp135 & tmp136;
 50:         b_shift_left  138  134  137     // tmp138 = tmp134 << tmp137;
 51:                b_and  139  133  138     // tmp139 = tmp133 & tmp138;
 52:    is_false_jmp_down  139  253  253     // if (tmp139 == false) goto 65073;
 53:           assignment  130    6  254     // tmp130 = e : TYPEOF(e);
 54:             addition  131  130  254     // tmp131 = tmp130 + e;
 55:           assignment  254    6  131     // k = tmp131 : TYPEOF(tmp131);
 56:             jmp_down  253  253          // goto 65077;
 57:           assignment  130    6  254     // tmp130 = k : TYPEOF(k);
 58:           assignment  131    1    5     // tmp131 = 5: SMALLINT;
 59:        b_shift_right  132  130  131     // tmp132 = tmp130 >> tmp131;
 60:          prop_getter  133  254  132     // tmp133 = d[tmp132];
 60:           assignment  134    1    1     // tmp134 = 1: SMALLINT;
 61:           assignment  135    6  254     // tmp135 = k : TYPEOF(k);
 62:           assignment  136    1   31     // tmp136 = 31: SMALLINT;
 63:                b_and  137  135  136     // tmp137 = tmp135 & tmp136;
 64:         b_shift_left  138  134  137     // tmp138 = tmp134 << tmp137;
 65:                b_not  139  138          // tmp139 = ~ tmp138;
 66:          prop_getter  140  254  132     // tmp140 = d[tmp132];
 67:                b_and  140  140  139     // tmp140 = tmp140 & tmp139;
 68:          prop_setter  254  132  140     // d[tmp132] = tmp140;
 69:             addition  254  254  254     // k = k + e;
 56:             jmp_down    0   14          // goto 70; // REWRITE
 70:           assignment  141    6  254     // tmp141 = k : TYPEOF(k);
 71:            less_than  142  141  254     // tmp142 = tmp141 < g;
 72:       is_true_jmp_up  142    0   15     // if (tmp142) goto 57;
 73:            post_incr  130  254          // tmp130 = f++;
 52:    is_false_jmp_down  139    0   22     // if (tmp139 == false) goto 74; // REWRITE
 74:            post_incr  131  254          // tmp131 = e++;
 41:             jmp_down    0   34          // goto 75; // REWRITE
 75:           assignment  132    6  254     // tmp132 = e : TYPEOF(e);
 76:            less_than  133  132  254     // tmp133 = tmp132 < g;
 77:       is_true_jmp_up  133    0   35     // if (tmp133) goto 42;
 78:           assignment  254    6  254     // a = c : TYPEOF(c);
 79:           assignment  130    6  254     // tmp130 = c : TYPEOF(c);
 80:           assignment  130    1    0     // tmp130 = 0: SMALLINT;
 81:           assignment  254    6  130     // l = tmp130 : TYPEOF(tmp130);
 82:           assignment  131    1    0     // tmp131 = 0: SMALLINT;
 83:           assignment  254    6  131     // m = tmp131 : TYPEOF(tmp131);
 84:             jmp_down  253  253          // goto 65105;
 85:          prop_getter  130  254  254     // tmp130 = a[m];
 86:             addition  254  254  130     // l = l + tmp130;
 87:           assignment  131    6  254     // tmp131 = l : TYPEOF(l);
 88:             pre_incr  132  254          // tmp132 = ++m;
 84:             jmp_down    0    5          // goto 89; // REWRITE
 89:           assignment  133    6  254     // tmp133 = m : TYPEOF(m);
 90:           assignment  134    5  254     // tmp134 = 'length': STRING;
 91:          prop_getter  135  254  134     // tmp135 = a[tmp134];
 92:            less_than  136  133  135     // tmp136 = tmp133 < tmp135;
 93:       is_true_jmp_up  136    0    8     // if (tmp136) goto 85;
 94:           assignment  130    3  254     // tmp130 = 1286749544853: NUMBER;
 95:          unary_minus  131  130          // tmp131 = -tmp130;
 96:      not_equal_value  132  131  254     // tmp132 = tmp131 != l;
 97:    is_false_jmp_down  132  253  253     // if (tmp132 == false) goto 65118;
 98:           assignment  130    5  254     // tmp130 = 'ERROR: bad result: expected -1286749544853 but got ': STRING;
 99:             addition  131  130  254     // tmp131 = tmp130 + l;
100:          throw_value  131               // throw tmp131;
// 
 97:    is_false_jmp_down  132    0    4     // if (tmp132 == false) goto 101; // REWRITE

^
ERROR: Ln 2, Col 1: Unknown token End of file
