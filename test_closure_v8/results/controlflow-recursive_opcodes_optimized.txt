// function c(a,b){return 0==a?b+1:0==b?c(a-1,1):c(a-1,c(a,b-1))}function d(a){return 2>a?1:d(a-2)+d(a-1)}function e(a,b,g){return b>=a?g:e(e(a-1,b,g),e(b-1,g,a),e(g-1,a,b))}for(var f=0,h=3;5>=h;h++)f+=c(3,h),f+=d(17+h),f+=e(3*h+3,2*h+2,h+1);if(57775!=f)throw"ERROR: bad result: expected 57775 but got "+f;
  0:                 meta   12  255          // [to be rewritten]
// 
  0:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp255;
// function c(a,b){return 0==a?b+1:0==b?c(a-1,1):c(a-1,c(a,b-1))}function d(a){return 2>a?1:d(a-2)+d(a-1)}function e(a,b,g){return b>=a?g:e(e(a-1,b,g),e(b-1,g,a),e(g-1,a,b))}for(var f=0,h=3;5>=h;h++)f+=c(3,h),f+=d(17+h),f+=e(3*h+3,2*h+2,h+1);if(57775!=f)throw"ERROR: bad result: expected 57775 but got "+f;
  2:             var_decl                    // var f;
  3:             var_decl                    // var h;
// 
// function c(a,b){return 0==a?b+1:0==b?c(a-1,1):c(a-1,c(a,b-1))}function d(a){return 2>a?1:d(a-2)+d(a-1)}function e(a,b,g){return b>=a?g:e(e(a-1,b,g),e(b-1,g,a),e(g-1,a,b))}for(var f=0,h=3;5>=h;h++)f+=c(3,h),f+=d(17+h),f+=e(3*h+3,2*h+2,h+1);if(57775!=f)throw"ERROR: bad result: expected 57775 but got "+f;
  0:          func_decl_n  254               // 
  1:                 meta    2  254          // 
  2:                 meta    2  254          // 
  0:          func_decl_n  254               //  // REWRITE
  3:                 meta    7  255          // function end: 65538;
  4:                 meta   12  255          // [to be rewritten]
  4:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  5:         reg_var_decl  128               // var tmp128 .. tmp255;
  6:           assignment  130    1          // tmp130 = 0: SMALLINT;
  7:          equal_value  131  130          // tmp131 = tmp130 == a;
  8:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65543;
  9:           assignment  132    6          // tmp132 = b : TYPEOF(b);
 10:           assignment  133    1          // tmp133 = 1: SMALLINT;
 11:             addition  134  132          // tmp134 = tmp132 + tmp133;
 12:           assignment  135    6          // tmp135 = tmp134 : TYPEOF(tmp134);
 13:             jmp_down  255               // goto 65548;
  8:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 14; // REWRITE
 14:           assignment  136    1          // tmp136 = 0: SMALLINT;
 15:          equal_value  137  136          // tmp137 = tmp136 == b;
 16:    is_false_jmp_down  137  255          // if (tmp137 == false) goto 65551;
 17:               call_n  255  254          // 
 18:           assignment  138    6          // tmp138 = a : TYPEOF(a);
 19:           assignment  139    1          // tmp139 = 1: SMALLINT;
 20:         substraction  140  138          // tmp140 = tmp138 - tmp139;
 21:                 meta    2  140          // 
 22:           assignment  138    1          // tmp138 = 1: SMALLINT;
 23:                 meta    2  138          // 
 17:               call_n  138  254          //  // REWRITE
 24:           assignment  139    6          // tmp139 = tmp138 : TYPEOF(tmp138);
 25:             jmp_down  255               // goto 65560;
 16:    is_false_jmp_down  137    0          // if (tmp137 == false) goto 26; // REWRITE
 26:               call_n  255  254          // 
 27:           assignment  140    6          // tmp140 = a : TYPEOF(a);
 28:           assignment  141    1          // tmp141 = 1: SMALLINT;
 29:         substraction  142  140          // tmp142 = tmp140 - tmp141;
 30:                 meta    2  142          // 
 31:               call_n  255  254          // 
 32:                 meta    2  254          // 
 33:           assignment  140    6          // tmp140 = b : TYPEOF(b);
 34:           assignment  141    1          // tmp141 = 1: SMALLINT;
 35:         substraction  142  140          // tmp142 = tmp140 - tmp141;
 36:                 meta    2  142          // 
 31:               call_n  140  254          //  // REWRITE
 37:                 meta    2  140          // 
 26:               call_n  140  254          //  // REWRITE
 38:           assignment  139    6          // tmp139 = tmp140 : TYPEOF(tmp140);
 25:             jmp_down    0               // goto 39; // REWRITE
 39:           assignment  135    6          // tmp135 = tmp139 : TYPEOF(tmp139);
 13:             jmp_down    0               // goto 40; // REWRITE
 40:               retval                    // return tmp135;
  5:         reg_var_decl  128               // var tmp128 .. tmp142; // REWRITE
 41:                  ret                    // ret;
  3:                 meta    7    0          // function end: 42; // REWRITE
  0:          func_decl_n  254               // 
  1:                 meta    2  254          // 
  0:          func_decl_n  254               //  // REWRITE
  2:                 meta    7  255          // function end: 65537;
  3:                 meta   12  255          // [to be rewritten]
  3:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  4:         reg_var_decl  128               // var tmp128 .. tmp255;
  5:           assignment  130    1          // tmp130 = 2: SMALLINT;
  6:         greater_than  131  130          // tmp131 = tmp130 > a;
  7:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65542;
  8:           assignment  132    1          // tmp132 = 1: SMALLINT;
  9:           assignment  133    6          // tmp133 = tmp132 : TYPEOF(tmp132);
 10:             jmp_down  255               // goto 65545;
  7:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 11; // REWRITE
 11:               call_n  255  254          // 
 12:           assignment  134    6          // tmp134 = a : TYPEOF(a);
 13:           assignment  135    1          // tmp135 = 2: SMALLINT;
 14:         substraction  136  134          // tmp136 = tmp134 - tmp135;
 15:                 meta    2  136          // 
 11:               call_n  134  254          //  // REWRITE
 16:               call_n  255  254          // 
 17:           assignment  135    6          // tmp135 = a : TYPEOF(a);
 18:           assignment  136    1          // tmp136 = 1: SMALLINT;
 19:         substraction  137  135          // tmp137 = tmp135 - tmp136;
 20:                 meta    2  137          // 
 16:               call_n  135  254          //  // REWRITE
 21:             addition  136  134          // tmp136 = tmp134 + tmp135;
 22:           assignment  133    6          // tmp133 = tmp136 : TYPEOF(tmp136);
 10:             jmp_down    0               // goto 23; // REWRITE
 23:               retval                    // return tmp133;
  4:         reg_var_decl  128               // var tmp128 .. tmp137; // REWRITE
 24:                  ret                    // ret;
  2:                 meta    7    0          // function end: 25; // REWRITE
  0:          func_decl_n  254               // 
  1:                 meta    2  254          // 
  2:                 meta    2  254          // 
  3:                 meta    2  254          // 
  0:          func_decl_n  254               //  // REWRITE
  4:                 meta    7  255          // function end: 65539;
  5:                 meta   12  255          // [to be rewritten]
  5:                 meta   12    6          // [no 'arguments'] [no 'eval']  // REWRITE
  6:         reg_var_decl  128               // var tmp128 .. tmp255;
  7:           assignment  130    6          // tmp130 = b : TYPEOF(b);
  8: greater_or_equal_than  131  130          // tmp131 = tmp130 >= a;
  9:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65544;
 10:           assignment  132    6          // tmp132 = g : TYPEOF(g);
 11:             jmp_down  255               // goto 65546;
  9:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 12; // REWRITE
 12:               call_n  255  254          // 
 13:               call_n  255  254          // 
 14:           assignment  133    6          // tmp133 = a : TYPEOF(a);
 15:           assignment  134    1          // tmp134 = 1: SMALLINT;
 16:         substraction  135  133          // tmp135 = tmp133 - tmp134;
 17:                 meta    2  135          // 
 18:                 meta    2  254          // 
 19:                 meta    2  254          // 
 13:               call_n  133  254          //  // REWRITE
 20:                 meta    2  133          // 
 21:               call_n  255  254          // 
 22:           assignment  133    6          // tmp133 = b : TYPEOF(b);
 23:           assignment  134    1          // tmp134 = 1: SMALLINT;
 24:         substraction  135  133          // tmp135 = tmp133 - tmp134;
 25:                 meta    2  135          // 
 26:                 meta    2  254          // 
 27:                 meta    2  254          // 
 21:               call_n  133  254          //  // REWRITE
 28:                 meta    2  133          // 
 29:               call_n  255  254          // 
 30:           assignment  133    6          // tmp133 = g : TYPEOF(g);
 31:           assignment  134    1          // tmp134 = 1: SMALLINT;
 32:         substraction  135  133          // tmp135 = tmp133 - tmp134;
 33:                 meta    2  135          // 
 34:                 meta    2  254          // 
 35:                 meta    2  254          // 
 29:               call_n  133  254          //  // REWRITE
 36:                 meta    2  133          // 
 12:               call_n  133  254          //  // REWRITE
 37:           assignment  132    6          // tmp132 = tmp133 : TYPEOF(tmp133);
 11:             jmp_down    0               // goto 38; // REWRITE
 38:               retval                    // return tmp132;
  6:         reg_var_decl  128               // var tmp128 .. tmp135; // REWRITE
 39:                  ret                    // ret;
  4:                 meta    7    0          // function end: 40; // REWRITE
  4:           assignment  130    1          // tmp130 = 0: SMALLINT;
  5:           assignment  254    6          // f = tmp130 : TYPEOF(tmp130);
  6:           assignment  131    1          // tmp131 = 3: SMALLINT;
  7:           assignment  254    6          // h = tmp131 : TYPEOF(tmp131);
  8:             jmp_down  255               // goto 65543;
  9:               call_n  255  254          // 
 10:           assignment  130    1          // tmp130 = 3: SMALLINT;
 11:                 meta    2  130          // 
 12:                 meta    2  254          // 
  9:               call_n  130  254          //  // REWRITE
 13:             addition  254  254          // f = f + tmp130;
 14:           assignment  131    6          // tmp131 = f : TYPEOF(f);
 15:               call_n  255  254          // 
 16:           assignment  132    1          // tmp132 = 17: SMALLINT;
 17:             addition  133  132          // tmp133 = tmp132 + h;
 18:                 meta    2  133          // 
 15:               call_n  132  254          //  // REWRITE
 19:             addition  254  254          // f = f + tmp132;
 20:           assignment  133    6          // tmp133 = f : TYPEOF(f);
 21:               call_n  255  254          // 
 22:           assignment  134    1          // tmp134 = 3: SMALLINT;
 23:       multiplication  135  134          // tmp135 = tmp134 * h;
 24:           assignment  136    1          // tmp136 = 3: SMALLINT;
 25:             addition  137  135          // tmp137 = tmp135 + tmp136;
 26:                 meta    2  137          // 
 27:           assignment  134    1          // tmp134 = 2: SMALLINT;
 28:       multiplication  135  134          // tmp135 = tmp134 * h;
 29:           assignment  136    1          // tmp136 = 2: SMALLINT;
 30:             addition  137  135          // tmp137 = tmp135 + tmp136;
 31:                 meta    2  137          // 
 32:           assignment  134    6          // tmp134 = h : TYPEOF(h);
 33:           assignment  135    1          // tmp135 = 1: SMALLINT;
 34:             addition  136  134          // tmp136 = tmp134 + tmp135;
 35:                 meta    2  136          // 
 21:               call_n  134  254          //  // REWRITE
 36:             addition  254  254          // f = f + tmp134;
 37:           assignment  135    6          // tmp135 = f : TYPEOF(f);
 38:            post_incr  136               // tmp136 = h++;
  8:             jmp_down    0               // goto 39; // REWRITE
 39:           assignment  137    1          // tmp137 = 5: SMALLINT;
 40: greater_or_equal_than  138  137          // tmp138 = tmp137 >= h;
 41:       is_true_jmp_up  138    0          // if (tmp138) goto 9;
 42:           assignment  130    3          // tmp130 = 57775: NUMBER;
 43:      not_equal_value  131  130          // tmp131 = tmp130 != f;
 44:    is_false_jmp_down  131  255          // if (tmp131 == false) goto 65579;
 45:           assignment  130    5          // tmp130 = 'ERROR: bad result: expected 57775 but got ': STRING;
 46:             addition  131  130          // tmp131 = tmp130 + f;
 47:          throw_value                    // throw tmp131;
// 
 44:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 48; // REWRITE
  1:         reg_var_decl  128               // var tmp128 .. tmp138; // REWRITE
 48:                  ret                    // ret;
LITERALS:
0x84ec54 [  8] c : STRING
0x84ec5c [  8] a : STRING
0x84ec64 [  8] b : STRING
0x84ec6c [  8] d : STRING
0x84ec74 [  8] e : STRING
0x84ec7c [  4] g : MAGIC STRING [id=199] 
0x84ec94 [  8] f : STRING
0x84ec9c [  8] h : STRING
0x84eca4 [ 12] 57775 : NUMBER
0x84ecb0 [ 48] ERROR: bad result: expected 57775 but got  : STRING
0x84ecf4 [ 12]  : EMPTY RECORD
  0:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  1:         reg_var_decl  128               // var tmp128 .. tmp138;
  2:             var_decl                    // var f;
  3:             var_decl                    // var h;
  4:          func_decl_n    2               // 
  5:                 meta    2    3          // 
  6:                 meta    2    4          // function c (a, b);
  7:                 meta    7    0          // function end: 46;
  8:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
  9:         reg_var_decl  128               // var tmp128 .. tmp142;
 10:           assignment  130    1          // tmp130 = 0: SMALLINT;
 11:          equal_value  131  130          // tmp131 = tmp130 == a;
 12:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 18;
 13:           assignment  132    6          // tmp132 = b : TYPEOF(b);
 14:           assignment  133    1          // tmp133 = 1: SMALLINT;
 15:             addition  134  132          // tmp134 = tmp132 + tmp133;
 16:           assignment  135    6          // tmp135 = tmp134 : TYPEOF(tmp134);
 17:             jmp_down    0               // goto 44;
 18:           assignment  136    1          // tmp136 = 0: SMALLINT;
 19:          equal_value  137  136          // tmp137 = tmp136 == b;
 20:    is_false_jmp_down  137    0          // if (tmp137 == false) goto 30;
 21:               call_n  138    2          // 
 22:           assignment  138    6          // tmp138 = a : TYPEOF(a);
 23:           assignment  139    1          // tmp139 = 1: SMALLINT;
 24:         substraction  140  138          // tmp140 = tmp138 - tmp139;
 25:                 meta    2  140          // 
 26:           assignment  138    1          // tmp138 = 1: SMALLINT;
 27:                 meta    2  138          // tmp138 = c (tmp140, tmp138);
 28:           assignment  139    6          // tmp139 = tmp138 : TYPEOF(tmp138);
 29:             jmp_down    0               // goto 43;
 30:               call_n  140    2          // 
 31:           assignment  140    6          // tmp140 = a : TYPEOF(a);
 32:           assignment  141    1          // tmp141 = 1: SMALLINT;
 33:         substraction  142  140          // tmp142 = tmp140 - tmp141;
 34:                 meta    2  142          // 
 35:               call_n  140    2          // 
 36:                 meta    2    3          // 
 37:           assignment  140    6          // tmp140 = b : TYPEOF(b);
 38:           assignment  141    1          // tmp141 = 1: SMALLINT;
 39:         substraction  142  140          // tmp142 = tmp140 - tmp141;
 40:                 meta    2  142          // tmp140 = c (a, tmp142);
 41:                 meta    2  140          // 
 42:           assignment  139    6          // tmp139 = tmp140 : TYPEOF(tmp140);
 43:           assignment  135    6          // tmp135 = tmp139 : TYPEOF(tmp139);
 44:               retval                    // return tmp135;
 45:                  ret                    // ret;
 46:          func_decl_n    5               // 
 47:                 meta    2    3          // function d (a);
 48:                 meta    7    0          // function end: 71;
 49:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
 50:         reg_var_decl  128               // var tmp128 .. tmp137;
 51:           assignment  130    1          // tmp130 = 2: SMALLINT;
 52:         greater_than  131  130          // tmp131 = tmp130 > a;
 53:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 57;
 54:           assignment  132    1          // tmp132 = 1: SMALLINT;
 55:           assignment  133    6          // tmp133 = tmp132 : TYPEOF(tmp132);
 56:             jmp_down    0               // goto 69;
 57:               call_n  134    5          // 
 58:           assignment  134    6          // tmp134 = a : TYPEOF(a);
 59:           assignment  135    1          // tmp135 = 2: SMALLINT;
 60:         substraction  136  134          // tmp136 = tmp134 - tmp135;
 61:                 meta    2  136          // tmp134 = d (tmp136);
 62:               call_n  135    5          // 
 63:           assignment  135    6          // tmp135 = a : TYPEOF(a);
 64:           assignment  136    1          // tmp136 = 1: SMALLINT;
 65:         substraction  137  135          // tmp137 = tmp135 - tmp136;
 66:                 meta    2  137          // tmp135 = d (tmp137);
 67:             addition  136  134          // tmp136 = tmp134 + tmp135;
 68:           assignment  133    6          // tmp133 = tmp136 : TYPEOF(tmp136);
 69:               retval                    // return tmp133;
 70:                  ret                    // ret;
 71:          func_decl_n    0               // 
 72:                 meta    2    1          // 
 73:                 meta    2    2          // 
 74:                 meta    2    3          // function e (a, b, g);
 75:                 meta    7    0          // function end: 111;
 76:                 meta   12    6          // [no 'arguments'] [no 'eval'] 
 77:         reg_var_decl  128               // var tmp128 .. tmp135;
 78:           assignment  130    6          // tmp130 = b : TYPEOF(b);
 79: greater_or_equal_than  131  130          // tmp131 = tmp130 >= a;
 80:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 83;
 81:           assignment  132    6          // tmp132 = g : TYPEOF(g);
 82:             jmp_down    0               // goto 109;
 83:               call_n  133    0          // 
 84:               call_n  133    0          // 
 85:           assignment  133    6          // tmp133 = a : TYPEOF(a);
 86:           assignment  134    1          // tmp134 = 1: SMALLINT;
 87:         substraction  135  133          // tmp135 = tmp133 - tmp134;
 88:                 meta    2  135          // 
 89:                 meta    2    2          // 
 90:                 meta    2    3          // tmp133 = e (tmp135, b, g);
 91:                 meta    2  133          // 
 92:               call_n  133    0          // 
 93:           assignment  133    6          // tmp133 = b : TYPEOF(b);
 94:           assignment  134    1          // tmp134 = 1: SMALLINT;
 95:         substraction  135  133          // tmp135 = tmp133 - tmp134;
 96:                 meta    2  135          // 
 97:                 meta    2    3          // 
 98:                 meta    2    1          // tmp133 = e (tmp135, g, a);
 99:                 meta    2  133          // 
100:               call_n  133    0          // 
101:           assignment  133    6          // tmp133 = g : TYPEOF(g);
102:           assignment  134    1          // tmp134 = 1: SMALLINT;
103:         substraction  135  133          // tmp135 = tmp133 - tmp134;
104:                 meta    2  135          // 
105:                 meta    2    1          // 
106:                 meta    2    2          // tmp133 = e (tmp135, a, b);
107:                 meta    2  133          // 
108:           assignment  132    6          // tmp132 = tmp133 : TYPEOF(tmp133);
109:               retval                    // return tmp132;
110:                  ret                    // ret;
111:           assignment  130    1          // tmp130 = 0: SMALLINT;
112:           assignment    4    6          // f = tmp130 : TYPEOF(tmp130);
113:           assignment  131    1          // tmp131 = 3: SMALLINT;
114:           assignment    5    6          // h = tmp131 : TYPEOF(tmp131);
115:             jmp_down    0               // goto 146;
116:               call_n  130    6          // 
117:           assignment  130    1          // tmp130 = 3: SMALLINT;
118:                 meta    2  130          // 
119:                 meta    2    5          // tmp130 = c (tmp130, h);
120:             addition    4    4          // f = f + tmp130;
121:           assignment  131    6          // tmp131 = f : TYPEOF(f);
122:               call_n  132    7          // 
123:           assignment  132    1          // tmp132 = 17: SMALLINT;
124:             addition  133  132          // tmp133 = tmp132 + h;
125:                 meta    2  133          // tmp132 = d (tmp133);
126:             addition    4    4          // f = f + tmp132;
127:           assignment  133    6          // tmp133 = f : TYPEOF(f);
128:               call_n  134    0          // 
129:           assignment  134    1          // tmp134 = 3: SMALLINT;
130:       multiplication  135  134          // tmp135 = tmp134 * h;
131:           assignment  136    1          // tmp136 = 3: SMALLINT;
132:             addition  137  135          // tmp137 = tmp135 + tmp136;
133:                 meta    2  137          // 
134:           assignment  134    1          // tmp134 = 2: SMALLINT;
135:       multiplication  135  134          // tmp135 = tmp134 * h;
136:           assignment  136    1          // tmp136 = 2: SMALLINT;
137:             addition  137  135          // tmp137 = tmp135 + tmp136;
138:                 meta    2  137          // 
139:           assignment  134    6          // tmp134 = h : TYPEOF(h);
140:           assignment  135    1          // tmp135 = 1: SMALLINT;
141:             addition  136  134          // tmp136 = tmp134 + tmp135;
142:                 meta    2  136          // tmp134 = e (tmp137, tmp137, tmp136);
143:             addition    2    2          // f = f + tmp134;
144:           assignment  135    6          // tmp135 = f : TYPEOF(f);
145:            post_incr  136               // tmp136 = h++;
146:           assignment  137    1          // tmp137 = 5: SMALLINT;
147: greater_or_equal_than  138  137          // tmp138 = tmp137 >= h;
148:       is_true_jmp_up  138    0          // if (tmp138) goto 116;
149:           assignment  130    3          // tmp130 = 57775: NUMBER;
150:      not_equal_value  131  130          // tmp131 = tmp130 != f;
151:    is_false_jmp_down  131    0          // if (tmp131 == false) goto 155;
152:           assignment  130    5          // tmp130 = 'ERROR: bad result: expected 57775 but got ': STRING;
153:             addition  131  130          // tmp131 = tmp130 + f;
154:          throw_value                    // throw tmp131;
155:                  ret                    // ret;
