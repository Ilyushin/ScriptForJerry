--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Code ---
source_position = 0
kind = FUNCTION
compiler = full-codegen
Instructions (size = 776)
0x312fe4439f40     0  55             push rbp                ;; debug: position 0
0x312fe4439f41     1  4889e5         REX.W movq rbp,rsp
0x312fe4439f44     4  56             push rsi
0x312fe4439f45     5  57             push rdi
0x312fe4439f46     6  41ff75a8       push [r13-0x58]
0x312fe4439f4a    10  57             push rdi
0x312fe4439f4b    11  49ba21aebe4f212a0000 REX.W movq r10,0x2a214fbeae21    ;; object: 0x2a214fbeae21 <FixedArray[14]>
0x312fe4439f55    21  4152           push r10
0x312fe4439f57    23  b802000000     movl rax,0x2
0x312fe4439f5c    28  48bbb0852b0100000000 REX.W movq rbx,0x12b85b0
0x312fe4439f66    38  e875ebfcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe4439f6b    43  488bf0         REX.W movq rsi,rax
0x312fe4439f6e    46  488945f8       REX.W movq [rbp-0x8],rax
0x312fe4439f72    50  49baa1aebe4f212a0000 REX.W movq r10,0x2a214fbeaea1    ;; object: 0x2a214fbeaea1 <FixedArray[6]>
0x312fe4439f7c    60  4152           push r10
0x312fe4439f7e    62  6a00           push 0x0
0x312fe4439f80    64  b802000000     movl rax,0x2
0x312fe4439f85    69  48bbf05d2b0100000000 REX.W movq rbx,0x12b5df0
0x312fe4439f8f    79  e84cebfcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe4439f94    84  493ba548090000 REX.W cmpq rsp,[r13+0x948]
0x312fe4439f9b    91  7305           jnc 98  (0x312fe4439fa2)
0x312fe4439f9d    93  e8decaffff     call StackCheck  (0x312fe4436a80)    ;; code: BUILTIN
0x312fe4439fa2    98  48b8c1adbe4f212a0000 REX.W movq rax,0x2a214fbeadc1    ;; debug: statement 1334
                                                             ;; debug: position 1350
                                                             ;; object: 0x2a214fbeadc1 <Number: 4.29497e+09>
0x312fe4439fac   108  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe4439fb6   118  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe4439fba   122  e84184ffff     call 0x312fe4432400     ;; code: STORE_IC, UNINITIALIZED
0x312fe4439fbf   127  488945e8       REX.W movq [rbp-0x18],rax
0x312fe4439fc3   131  48b80000000000000000 REX.W movq rax,(nil)    ;; debug: statement 1364
                                                             ;; debug: statement 1369
0x312fe4439fcd   141  bb04000000     movl rbx,0x4
0x312fe4439fd2   146  e869feffff     call 0x312fe4439e40     ;; code: STUB, StoreGlobalViaContextStub, minor: 0
0x312fe4439fd7   151  e9ce000000     jmp 362  (0x312fe443a0aa)
0x312fe4439fdc   156  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: statement 1401
                                                             ;; debug: position 1419
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe4439fe6   166  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe4439fea   170  48b80000000004000000 REX.W movq rax,0x400000000
0x312fe4439ff4   180  e867e5feff     call 0x312fe4428560     ;; code: contextual, LOAD_IC, DEFAULT
0x312fe4439ff9   185  50             push rax
0x312fe4439ffa   186  bb04000000     movl rbx,0x4            ;; debug: position 1437
0x312fe4439fff   191  e8dc06ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a004   196  5a             pop rdx                 ;; debug: position 1435
0x312fe443a005   197  488bc8         REX.W movq rcx,rax
0x312fe443a008   200  480bc2         REX.W orq rax,rdx
0x312fe443a00b   203  a801           test al,0x1
0x312fe443a00d   205  720c           jc 219  (0x312fe443a01b)
0x312fe443a00f   207  488bc1         REX.W movq rax,rcx
0x312fe443a012   210  e8e945feff     call 0x312fe441e600     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 83)
0x312fe443a017   215  a80a           test al,0xa
0x312fe443a019   217  eb06           jmp 225  (0x312fe443a021)
0x312fe443a01b   219  488bc2         REX.W movq rax,rdx
0x312fe443a01e   222  4823c1         REX.W andq rax,rcx
0x312fe443a021   225  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: position 1417
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443a02b   235  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443a02f   239  e8cc83ffff     call 0x312fe4432400     ;; code: STORE_IC, UNINITIALIZED
0x312fe443a034   244  488945e8       REX.W movq [rbp-0x18],rax
0x312fe443a038   248  bb04000000     movl rbx,0x4            ;; debug: statement 1393
                                                             ;; debug: position 1392
0x312fe443a03d   253  e89e06ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a042   258  a801           test al,0x1
0x312fe443a044   260  7314           jnc 282  (0x312fe443a05a)
0x312fe443a046   262  49ba0000000001000000 REX.W movq r10,0x100000000
0x312fe443a050   272  4903c2         REX.W addq rax,r10
0x312fe443a053   275  711e           jno 307  (0x312fe443a073)
0x312fe443a055   277  492bc2         REX.W subq rax,r10
0x312fe443a058   280  eb05           jmp 287  (0x312fe443a05f)
0x312fe443a05a   282  e8a18efeff     call 0x312fe4422f00     ;; code: STUB, ToNumberStub, minor: 0
0x312fe443a05f   287  488bd0         REX.W movq rdx,rax      ;; debug: position 1393
0x312fe443a062   290  48b80000000001000000 REX.W movq rax,0x100000000
0x312fe443a06c   300  e80fe5fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 61)
0x312fe443a071   305  a82d           test al,0x2d
0x312fe443a073   307  bb04000000     movl rbx,0x4
0x312fe443a078   312  e8c3fdffff     call 0x312fe4439e40     ;; code: STUB, StoreGlobalViaContextStub, minor: 0
0x312fe443a07d   317  48bb11aebe4f212a0000 REX.W movq rbx,0x2a214fbeae11    ;; object: 0x2a214fbeae11 Cell for 6144
0x312fe443a087   327  83430bff       addl [rbx+0xb],0xff
0x312fe443a08b   331  791d           jns 362  (0x312fe443a0aa)
0x312fe443a08d   333  e8aec8ffff     call InterruptCheck  (0x312fe4436940)    ;; code: BUILTIN
0x312fe443a092   338  48bb11aebe4f212a0000 REX.W movq rbx,0x2a214fbeae11    ;; object: 0x2a214fbeae11 Cell for 6144
0x312fe443a09c   348  49ba0000000000180000 REX.W movq r10,0x180000000000
0x312fe443a0a6   358  4c895307       REX.W movq [rbx+0x7],r10
0x312fe443a0aa   362  bb04000000     movl rbx,0x4            ;; debug: statement 1382
                                                             ;; debug: position 1380
0x312fe443a0af   367  e82c06ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a0b4   372  50             push rax
0x312fe443a0b5   373  48b800000000d1632be5 REX.W movq rax,0xe52b63d100000000
0x312fe443a0bf   383  49ba00000000114422e5 REX.W movq r10,0xe522441100000000
0x312fe443a0c9   393  4933c2         REX.W xorq rax,r10
0x312fe443a0cc   396  5a             pop rdx
0x312fe443a0cd   397  488bca         REX.W movq rcx,rdx
0x312fe443a0d0   400  480bc8         REX.W orq rcx,rax
0x312fe443a0d3   403  f6c101         testb rcx,0x1
0x312fe443a0d6   406  730e           jnc 422  (0x312fe443a0e6)
0x312fe443a0d8   408  483bd0         REX.W cmpq rdx,rax
0x312fe443a0db   411  0f8cfbfeffff   jl 156  (0x312fe4439fdc)
0x312fe443a0e1   417  e921000000     jmp 455  (0x312fe443a107)
0x312fe443a0e6   422  e8d527feff     call 0x312fe441c8c0     ;; code: COMPARE_IC, UNINITIALIZED (id = 50)
0x312fe443a0eb   427  a815           test al,0x15
0x312fe443a0ed   429  eb0f           jmp 446  (0x312fe443a0fe)
0x312fe443a0ef   431  493b45c0       REX.W cmpq rax,[r13-0x40]
0x312fe443a0f3   435  0f84e3feffff   jz 156  (0x312fe4439fdc)
0x312fe443a0f9   441  e909000000     jmp 455  (0x312fe443a107)
0x312fe443a0fe   446  4885c0         REX.W testq rax,rax
0x312fe443a101   449  0f8cd5feffff   jl 156  (0x312fe4439fdc)
0x312fe443a107   455  49ba21adbe4f212a0000 REX.W movq r10,0x2a214fbead21    ;; debug: statement 1441
                                                             ;; object: 0x2a214fbead21 <String[6]: result>
0x312fe443a111   465  4152           push r10
0x312fe443a113   467  6a00           push 0x0
0x312fe443a115   469  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: position 1454
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443a11f   479  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443a123   483  48b80000000004000000 REX.W movq rax,0x400000000
0x312fe443a12d   493  e82ee4feff     call 0x312fe4428560     ;; code: contextual, LOAD_IC, DEFAULT
0x312fe443a132   498  50             push rax
0x312fe443a133   499  b803000000     movl rax,0x3
0x312fe443a138   504  48bb90642b0100000000 REX.W movq rbx,0x12b6490
0x312fe443a142   514  e899e9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443a147   519  49ba41adbe4f212a0000 REX.W movq r10,0x2a214fbead41    ;; debug: statement 1472
                                                             ;; object: 0x2a214fbead41 <String[8]: expected>
0x312fe443a151   529  4152           push r10
0x312fe443a153   531  6a00           push 0x0
0x312fe443a155   533  6a00           push 0x0
0x312fe443a157   535  b803000000     movl rax,0x3
0x312fe443a15c   540  48bb90642b0100000000 REX.W movq rbx,0x12b6490
0x312fe443a166   550  e875e9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443a16b   555  bb05000000     movl rbx,0x5            ;; debug: statement 1490
                                                             ;; debug: position 1494
0x312fe443a170   560  e86b05ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a175   565  50             push rax
0x312fe443a176   566  bb06000000     movl rbx,0x6            ;; debug: position 1504
0x312fe443a17b   571  e86005ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a180   576  5a             pop rdx
0x312fe443a181   577  e8fa11ffff     call 0x312fe442b380     ;; code: COMPARE_IC, UNINITIALIZED (id = 129)
0x312fe443a186   582  90             nop
0x312fe443a187   583  eb0f           jmp 600  (0x312fe443a198)
0x312fe443a189   585  493b45c0       REX.W cmpq rax,[r13-0x40]
0x312fe443a18d   589  0f8464000000   jz 695  (0x312fe443a1f7)
0x312fe443a193   595  e909000000     jmp 609  (0x312fe443a1a1)
0x312fe443a198   600  4885c0         REX.W testq rax,rax
0x312fe443a19b   603  0f8456000000   jz 695  (0x312fe443a1f7)
0x312fe443a1a1   609  49ba61adbe4f212a0000 REX.W movq r10,0x2a214fbead61    ;; debug: statement 1518
                                                             ;; object: 0x2a214fbead61 <String[28]: ERROR: bad result: expected >
0x312fe443a1ab   619  4152           push r10
0x312fe443a1ad   621  bb06000000     movl rbx,0x6            ;; debug: position 1557
0x312fe443a1b2   626  e82905ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a1b7   631  5a             pop rdx                 ;; debug: position 1555
0x312fe443a1b8   632  e8c3e3fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 149)
0x312fe443a1bd   637  90             nop
0x312fe443a1be   638  50             push rax
0x312fe443a1bf   639  48b899adbe4f212a0000 REX.W movq rax,0x2a214fbead99    ;; object: 0x2a214fbead99 <String[9]:  but got >
0x312fe443a1c9   649  5a             pop rdx                 ;; debug: position 1566
0x312fe443a1ca   650  e8b1e3fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 145)
0x312fe443a1cf   655  90             nop
0x312fe443a1d0   656  50             push rax
0x312fe443a1d1   657  bb05000000     movl rbx,0x5            ;; debug: position 1582
0x312fe443a1d6   662  e80505ffff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443a1db   667  5a             pop rdx                 ;; debug: position 1580
0x312fe443a1dc   668  e89fe3fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 141)
0x312fe443a1e1   673  90             nop
0x312fe443a1e2   674  50             push rax
0x312fe443a1e3   675  b801000000     movl rax,0x1            ;; debug: position 1518
0x312fe443a1e8   680  48bb9038290100000000 REX.W movq rbx,0x1293890
0x312fe443a1f2   690  e8e9e8fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443a1f7   695  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: statement 1591
0x312fe443a1fb   699  48bb11aebe4f212a0000 REX.W movq rbx,0x2a214fbeae11    ;; object: 0x2a214fbeae11 Cell for 6144
0x312fe443a205   709  83430bfc       addl [rbx+0xb],0xfc
0x312fe443a209   713  791f           jns 746  (0x312fe443a22a)
0x312fe443a20b   715  50             push rax
0x312fe443a20c   716  e82fc7ffff     call InterruptCheck  (0x312fe4436940)    ;; code: BUILTIN
0x312fe443a211   721  58             pop rax
0x312fe443a212   722  48bb11aebe4f212a0000 REX.W movq rbx,0x2a214fbeae11    ;; object: 0x2a214fbeae11 Cell for 6144
0x312fe443a21c   732  49ba0000000000180000 REX.W movq r10,0x180000000000
0x312fe443a226   742  4c895307       REX.W movq [rbx+0x7],r10
0x312fe443a22a   746  c9             leave                   ;; debug: statement 1590
0x312fe443a22b   747  c20800         ret 0x8
0x312fe443a22e   750  498b45a8       REX.W movq rax,[r13-0x58]
0x312fe443a232   754  e9c4ffffff     jmp 699  (0x312fe443a1fb)
0x312fe443a237   759  90             nop

Deoptimization Output Data (deopt points = 0)

Back edges (size = 1)
ast_id  pc_offset  loop_depth
    32        338           1

0x2a214fbeaf99: [TypeFeedbackInfo]
 - ic_total_count: 11, ic_with_type_info_count: 0, ic_generic_count: 0

RelocInfo (size = 143)
0x312fe4439f40  position  (0)
0x312fe4439f4d  embedded object  (0x2a214fbeae21 <FixedArray[14]>)
0x312fe4439f67  code target (STUB)  (0x312fe4408ae0)
0x312fe4439f74  embedded object  (0x2a214fbeaea1 <FixedArray[6]>)
0x312fe4439f90  code target (STUB)  (0x312fe4408ae0)
0x312fe4439f9e  code target (BUILTIN)  (0x312fe4436a80)
0x312fe4439fa2  statement position  (1334)
0x312fe4439fa2  position  (1350)
0x312fe4439fa4  embedded object  (0x2a214fbeadc1 <Number: 4.29497e+09>)
0x312fe4439fae  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe4439fbb  code target (STORE_IC)  (0x312fe4432400)
0x312fe4439fc3  statement position  (1364)
0x312fe4439fc3  statement position  (1369)
0x312fe4439fd3  code target (STUB)  (0x312fe4439e40)
0x312fe4439fdc  statement position  (1401)
0x312fe4439fdc  position  (1419)
0x312fe4439fde  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe4439ff5  code target (LOAD_IC)  (0x312fe4428560)
0x312fe4439ffa  position  (1437)
0x312fe443a000  code target (STUB)  (0x312fe442a6e0)
0x312fe443a004  position  (1435)
0x312fe443a013  code target with id (BINARY_OP_IC)  (0x312fe441e600) (id=83)
0x312fe443a021  position  (1417)
0x312fe443a023  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443a030  code target (STORE_IC)  (0x312fe4432400)
0x312fe443a038  statement position  (1393)
0x312fe443a038  position  (1392)
0x312fe443a03e  code target (STUB)  (0x312fe442a6e0)
0x312fe443a05b  code target (STUB)  (0x312fe4422f00)
0x312fe443a05f  position  (1393)
0x312fe443a06d  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=61)
0x312fe443a079  code target (STUB)  (0x312fe4439e40)
0x312fe443a07f  embedded object  (0x2a214fbeae11 Cell for 6144)
0x312fe443a08e  code target (BUILTIN)  (0x312fe4436940)
0x312fe443a094  embedded object  (0x2a214fbeae11 Cell for 6144)
0x312fe443a0aa  statement position  (1382)
0x312fe443a0aa  position  (1380)
0x312fe443a0b0  code target (STUB)  (0x312fe442a6e0)
0x312fe443a0e7  code target with id (COMPARE_IC)  (0x312fe441c8c0) (id=50)
0x312fe443a107  statement position  (1441)
0x312fe443a109  embedded object  (0x2a214fbead21 <String[6]: result>)
0x312fe443a115  position  (1454)
0x312fe443a117  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443a12e  code target (LOAD_IC)  (0x312fe4428560)
0x312fe443a143  code target (STUB)  (0x312fe4408ae0)
0x312fe443a147  statement position  (1472)
0x312fe443a149  embedded object  (0x2a214fbead41 <String[8]: expected>)
0x312fe443a167  code target (STUB)  (0x312fe4408ae0)
0x312fe443a16b  statement position  (1490)
0x312fe443a16b  position  (1494)
0x312fe443a171  code target (STUB)  (0x312fe442a6e0)
0x312fe443a176  position  (1504)
0x312fe443a17c  code target (STUB)  (0x312fe442a6e0)
0x312fe443a182  code target with id (COMPARE_IC)  (0x312fe442b380) (id=129)
0x312fe443a1a1  statement position  (1518)
0x312fe443a1a3  embedded object  (0x2a214fbead61 <String[28]: ERROR: bad result: expected >)
0x312fe443a1ad  position  (1557)
0x312fe443a1b3  code target (STUB)  (0x312fe442a6e0)
0x312fe443a1b7  position  (1555)
0x312fe443a1b9  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=149)
0x312fe443a1c1  embedded object  (0x2a214fbead99 <String[9]:  but got >)
0x312fe443a1c9  position  (1566)
0x312fe443a1cb  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=145)
0x312fe443a1d1  position  (1582)
0x312fe443a1d7  code target (STUB)  (0x312fe442a6e0)
0x312fe443a1db  position  (1580)
0x312fe443a1dd  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=141)
0x312fe443a1e3  position  (1518)
0x312fe443a1f3  code target (STUB)  (0x312fe4408ae0)
0x312fe443a1f7  statement position  (1591)
0x312fe443a1fd  embedded object  (0x2a214fbeae11 Cell for 6144)
0x312fe443a20d  code target (BUILTIN)  (0x312fe4436940)
0x312fe443a214  embedded object  (0x2a214fbeae11 Cell for 6144)
0x312fe443a22a  statement position  (1590)

--- End code ---
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreGlobalStub
compiler = crankshaft
Instructions (size = 192)
0x312fe443ae20     0  48bb59b3be4f212a0000 REX.W movq rbx,0x2a214fbeb359    ;; object: 0x2a214fbeb359 WeakCell for 0x2a214fb04311 <Odd Oddball>
0x312fe443ae2a    10  488b5b07       REX.W movq rbx,[rbx+0x7]
0x312fe443ae2e    14  f6c301         testb rbx,0x1
0x312fe443ae31    17  0f8453000000   jz 106  (0x312fe443ae8a)
0x312fe443ae37    23  488b7b0f       REX.W movq rdi,[rbx+0xf]
0x312fe443ae3b    27  49bae941b04f212a0000 REX.W movq r10,0x2a214fb041e9    ;; object: 0x2a214fb041e9 <the hole>
0x312fe443ae45    37  493bfa         REX.W cmpq rdi,r10
0x312fe443ae48    40  0f8437000000   jz 101  (0x312fe443ae85)
0x312fe443ae4e    46  488bd0         REX.W movq rdx,rax
0x312fe443ae51    49  4889530f       REX.W movq [rbx+0xf],rdx
0x312fe443ae55    53  f6c201         testb rdx,0x1
0x312fe443ae58    56  0f8426000000   jz 100  (0x312fe443ae84)
0x312fe443ae5e    62  488d4b0f       REX.W leaq rcx,[rbx+0xf]
0x312fe443ae62    66  4881e20000f0ff REX.W andq rdx,0xfffffffffff00000
0x312fe443ae69    73  f6420804       testb [rdx+0x8],0x4
0x312fe443ae6d    77  7415           jz 100  (0x312fe443ae84)
0x312fe443ae6f    79  48c7c20000f0ff REX.W movq rdx,0xfff00000
0x312fe443ae76    86  4823d3         REX.W andq rdx,rbx
0x312fe443ae79    89  f6420808       testb [rdx+0x8],0x8
0x312fe443ae7d    93  7405           jz 100  (0x312fe443ae84)
0x312fe443ae7f    95  e8fcf4ffff     call 0x312fe443a380     ;; code: STUB, RecordWriteStub, minor: 8483
0x312fe443ae84   100  c3             ret
0x312fe443ae85   101  e90f000000     jmp 121  (0x312fe443ae99)
0x312fe443ae8a   106  49ba006020e42f310000 REX.W movq r10,0x312fe4206000
0x312fe443ae94   116  e80f000000     call 136  (0x312fe443aea8)
0x312fe443ae99   121  49ba0a6020e42f310000 REX.W movq r10,0x312fe420600a
0x312fe443aea3   131  e800000000     call 136  (0x312fe443aea8)
0x312fe443aea8   136  4883ec10       REX.W subq rsp,0x10
0x312fe443aeac   140  ff742410       push [rsp+0x10]
0x312fe443aeb0   144  4152           push r10
0x312fe443aeb2   146  4c8b55f8       REX.W movq r10,[rbp-0x8]
0x312fe443aeb6   150  4c89542418     REX.W movq [rsp+0x18],r10
0x312fe443aebb   155  48896c2420     REX.W movq [rsp+0x20],rbp
0x312fe443aec0   160  488d6c2420     REX.W leaq rbp,[rsp+0x20]
0x312fe443aec5   165  49ba0000000006000000 REX.W movq r10,0x600000000
0x312fe443aecf   175  4c89542410     REX.W movq [rsp+0x10],r10
0x312fe443aed4   180  c3             ret
0x312fe443aed5   181  0f1f00         nop


Safepoints (size = 8)

RelocInfo (size = 5)
0x312fe443ae22  embedded object  (0x2a214fbeb359 WeakCell for 0x2a214fb04311 <Odd Oddball>)
0x312fe443ae3d  embedded object  (0x2a214fb041e9 <the hole>)
0x312fe443ae80  code target (STUB)  (0x312fe443a380)

--- End code ---
--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Code ---
source_position = 0
kind = FUNCTION
compiler = full-codegen
Instructions (size = 776)
0x312fe443b100     0  55             push rbp                ;; debug: position 0
0x312fe443b101     1  4889e5         REX.W movq rbp,rsp
0x312fe443b104     4  56             push rsi
0x312fe443b105     5  57             push rdi
0x312fe443b106     6  41ff75a8       push [r13-0x58]
0x312fe443b10a    10  57             push rdi
0x312fe443b10b    11  49bac1b4be4f212a0000 REX.W movq r10,0x2a214fbeb4c1    ;; object: 0x2a214fbeb4c1 <FixedArray[14]>
0x312fe443b115    21  4152           push r10
0x312fe443b117    23  b802000000     movl rax,0x2
0x312fe443b11c    28  48bbb0852b0100000000 REX.W movq rbx,0x12b85b0
0x312fe443b126    38  e8b5d9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443b12b    43  488bf0         REX.W movq rsi,rax
0x312fe443b12e    46  488945f8       REX.W movq [rbp-0x8],rax
0x312fe443b132    50  49ba41b5be4f212a0000 REX.W movq r10,0x2a214fbeb541    ;; object: 0x2a214fbeb541 <FixedArray[6]>
0x312fe443b13c    60  4152           push r10
0x312fe443b13e    62  6a00           push 0x0
0x312fe443b140    64  b802000000     movl rax,0x2
0x312fe443b145    69  48bbf05d2b0100000000 REX.W movq rbx,0x12b5df0
0x312fe443b14f    79  e88cd9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443b154    84  493ba548090000 REX.W cmpq rsp,[r13+0x948]
0x312fe443b15b    91  7305           jnc 98  (0x312fe443b162)
0x312fe443b15d    93  e81eb9ffff     call StackCheck  (0x312fe4436a80)    ;; code: BUILTIN
0x312fe443b162    98  48b8a1b4be4f212a0000 REX.W movq rax,0x2a214fbeb4a1    ;; debug: statement 1334
                                                             ;; debug: position 1350
                                                             ;; object: 0x2a214fbeb4a1 <Number: 4.29497e+09>
0x312fe443b16c   108  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443b176   118  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443b17a   122  e88172ffff     call 0x312fe4432400     ;; code: STORE_IC, UNINITIALIZED
0x312fe443b17f   127  488945e8       REX.W movq [rbp-0x18],rax
0x312fe443b183   131  48b80000000000000000 REX.W movq rax,(nil)    ;; debug: statement 1364
                                                             ;; debug: statement 1369
0x312fe443b18d   141  bb04000000     movl rbx,0x4
0x312fe443b192   146  e8a9ecffff     call 0x312fe4439e40     ;; code: STUB, StoreGlobalViaContextStub, minor: 0
0x312fe443b197   151  e9ce000000     jmp 362  (0x312fe443b26a)
0x312fe443b19c   156  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: statement 1401
                                                             ;; debug: position 1419
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443b1a6   166  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443b1aa   170  48b80000000004000000 REX.W movq rax,0x400000000
0x312fe443b1b4   180  e8a7d3feff     call 0x312fe4428560     ;; code: contextual, LOAD_IC, DEFAULT
0x312fe443b1b9   185  50             push rax
0x312fe443b1ba   186  bb04000000     movl rbx,0x4            ;; debug: position 1437
0x312fe443b1bf   191  e81cf5feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b1c4   196  5a             pop rdx                 ;; debug: position 1435
0x312fe443b1c5   197  488bc8         REX.W movq rcx,rax
0x312fe443b1c8   200  480bc2         REX.W orq rax,rdx
0x312fe443b1cb   203  a801           test al,0x1
0x312fe443b1cd   205  720c           jc 219  (0x312fe443b1db)
0x312fe443b1cf   207  488bc1         REX.W movq rax,rcx
0x312fe443b1d2   210  e82934feff     call 0x312fe441e600     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 83)
0x312fe443b1d7   215  a80a           test al,0xa
0x312fe443b1d9   217  eb06           jmp 225  (0x312fe443b1e1)
0x312fe443b1db   219  488bc2         REX.W movq rax,rdx
0x312fe443b1de   222  4823c1         REX.W andq rax,rcx
0x312fe443b1e1   225  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: position 1417
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443b1eb   235  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443b1ef   239  e80c72ffff     call 0x312fe4432400     ;; code: STORE_IC, UNINITIALIZED
0x312fe443b1f4   244  488945e8       REX.W movq [rbp-0x18],rax
0x312fe443b1f8   248  bb04000000     movl rbx,0x4            ;; debug: statement 1393
                                                             ;; debug: position 1392
0x312fe443b1fd   253  e8def4feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b202   258  a801           test al,0x1
0x312fe443b204   260  7314           jnc 282  (0x312fe443b21a)
0x312fe443b206   262  49ba0000000001000000 REX.W movq r10,0x100000000
0x312fe443b210   272  4903c2         REX.W addq rax,r10
0x312fe443b213   275  711e           jno 307  (0x312fe443b233)
0x312fe443b215   277  492bc2         REX.W subq rax,r10
0x312fe443b218   280  eb05           jmp 287  (0x312fe443b21f)
0x312fe443b21a   282  e8e17cfeff     call 0x312fe4422f00     ;; code: STUB, ToNumberStub, minor: 0
0x312fe443b21f   287  488bd0         REX.W movq rdx,rax      ;; debug: position 1393
0x312fe443b222   290  48b80000000001000000 REX.W movq rax,0x100000000
0x312fe443b22c   300  e84fd3fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 61)
0x312fe443b231   305  a82d           test al,0x2d
0x312fe443b233   307  bb04000000     movl rbx,0x4
0x312fe443b238   312  e803ecffff     call 0x312fe4439e40     ;; code: STUB, StoreGlobalViaContextStub, minor: 0
0x312fe443b23d   317  48bbb1b4be4f212a0000 REX.W movq rbx,0x2a214fbeb4b1    ;; object: 0x2a214fbeb4b1 Cell for 6144
0x312fe443b247   327  83430bff       addl [rbx+0xb],0xff
0x312fe443b24b   331  791d           jns 362  (0x312fe443b26a)
0x312fe443b24d   333  e8eeb6ffff     call InterruptCheck  (0x312fe4436940)    ;; code: BUILTIN
0x312fe443b252   338  48bbb1b4be4f212a0000 REX.W movq rbx,0x2a214fbeb4b1    ;; object: 0x2a214fbeb4b1 Cell for 6144
0x312fe443b25c   348  49ba0000000000180000 REX.W movq r10,0x180000000000
0x312fe443b266   358  4c895307       REX.W movq [rbx+0x7],r10
0x312fe443b26a   362  bb04000000     movl rbx,0x4            ;; debug: statement 1382
                                                             ;; debug: position 1380
0x312fe443b26f   367  e86cf4feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b274   372  50             push rax
0x312fe443b275   373  48b80000000012fd58e4 REX.W movq rax,0xe458fd1200000000
0x312fe443b27f   383  49ba00000000d2da51e4 REX.W movq r10,0xe451dad200000000
0x312fe443b289   393  4933c2         REX.W xorq rax,r10
0x312fe443b28c   396  5a             pop rdx
0x312fe443b28d   397  488bca         REX.W movq rcx,rdx
0x312fe443b290   400  480bc8         REX.W orq rcx,rax
0x312fe443b293   403  f6c101         testb rcx,0x1
0x312fe443b296   406  730e           jnc 422  (0x312fe443b2a6)
0x312fe443b298   408  483bd0         REX.W cmpq rdx,rax
0x312fe443b29b   411  0f8cfbfeffff   jl 156  (0x312fe443b19c)
0x312fe443b2a1   417  e921000000     jmp 455  (0x312fe443b2c7)
0x312fe443b2a6   422  e81516feff     call 0x312fe441c8c0     ;; code: COMPARE_IC, UNINITIALIZED (id = 50)
0x312fe443b2ab   427  a815           test al,0x15
0x312fe443b2ad   429  eb0f           jmp 446  (0x312fe443b2be)
0x312fe443b2af   431  493b45c0       REX.W cmpq rax,[r13-0x40]
0x312fe443b2b3   435  0f84e3feffff   jz 156  (0x312fe443b19c)
0x312fe443b2b9   441  e909000000     jmp 455  (0x312fe443b2c7)
0x312fe443b2be   446  4885c0         REX.W testq rax,rax
0x312fe443b2c1   449  0f8cd5feffff   jl 156  (0x312fe443b19c)
0x312fe443b2c7   455  49ba21adbe4f212a0000 REX.W movq r10,0x2a214fbead21    ;; debug: statement 1441
                                                             ;; object: 0x2a214fbead21 <String[6]: result>
0x312fe443b2d1   465  4152           push r10
0x312fe443b2d3   467  6a00           push 0x0
0x312fe443b2d5   469  48b9f9acbe4f212a0000 REX.W movq rcx,0x2a214fbeacf9    ;; debug: position 1454
                                                             ;; object: 0x2a214fbeacf9 <String[15]: bitwiseAndValue>
0x312fe443b2df   479  488b5627       REX.W movq rdx,[rsi+0x27]
0x312fe443b2e3   483  48b80000000004000000 REX.W movq rax,0x400000000
0x312fe443b2ed   493  e86ed2feff     call 0x312fe4428560     ;; code: contextual, LOAD_IC, DEFAULT
0x312fe443b2f2   498  50             push rax
0x312fe443b2f3   499  b803000000     movl rax,0x3
0x312fe443b2f8   504  48bb90642b0100000000 REX.W movq rbx,0x12b6490
0x312fe443b302   514  e8d9d7fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443b307   519  49ba41adbe4f212a0000 REX.W movq r10,0x2a214fbead41    ;; debug: statement 1472
                                                             ;; object: 0x2a214fbead41 <String[8]: expected>
0x312fe443b311   529  4152           push r10
0x312fe443b313   531  6a00           push 0x0
0x312fe443b315   533  6a00           push 0x0
0x312fe443b317   535  b803000000     movl rax,0x3
0x312fe443b31c   540  48bb90642b0100000000 REX.W movq rbx,0x12b6490
0x312fe443b326   550  e8b5d7fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443b32b   555  bb05000000     movl rbx,0x5            ;; debug: statement 1490
                                                             ;; debug: position 1494
0x312fe443b330   560  e8abf3feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b335   565  50             push rax
0x312fe443b336   566  bb06000000     movl rbx,0x6            ;; debug: position 1504
0x312fe443b33b   571  e8a0f3feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b340   576  5a             pop rdx
0x312fe443b341   577  e83a00ffff     call 0x312fe442b380     ;; code: COMPARE_IC, UNINITIALIZED (id = 129)
0x312fe443b346   582  90             nop
0x312fe443b347   583  eb0f           jmp 600  (0x312fe443b358)
0x312fe443b349   585  493b45c0       REX.W cmpq rax,[r13-0x40]
0x312fe443b34d   589  0f8464000000   jz 695  (0x312fe443b3b7)
0x312fe443b353   595  e909000000     jmp 609  (0x312fe443b361)
0x312fe443b358   600  4885c0         REX.W testq rax,rax
0x312fe443b35b   603  0f8456000000   jz 695  (0x312fe443b3b7)
0x312fe443b361   609  49ba61adbe4f212a0000 REX.W movq r10,0x2a214fbead61    ;; debug: statement 1518
                                                             ;; object: 0x2a214fbead61 <String[28]: ERROR: bad result: expected >
0x312fe443b36b   619  4152           push r10
0x312fe443b36d   621  bb06000000     movl rbx,0x6            ;; debug: position 1557
0x312fe443b372   626  e869f3feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b377   631  5a             pop rdx                 ;; debug: position 1555
0x312fe443b378   632  e803d2fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 149)
0x312fe443b37d   637  90             nop
0x312fe443b37e   638  50             push rax
0x312fe443b37f   639  48b899adbe4f212a0000 REX.W movq rax,0x2a214fbead99    ;; object: 0x2a214fbead99 <String[9]:  but got >
0x312fe443b389   649  5a             pop rdx                 ;; debug: position 1566
0x312fe443b38a   650  e8f1d1fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 145)
0x312fe443b38f   655  90             nop
0x312fe443b390   656  50             push rax
0x312fe443b391   657  bb05000000     movl rbx,0x5            ;; debug: position 1582
0x312fe443b396   662  e845f3feff     call 0x312fe442a6e0     ;; code: STUB, LoadGlobalViaContextStub, minor: 0
0x312fe443b39b   667  5a             pop rdx                 ;; debug: position 1580
0x312fe443b39c   668  e8dfd1fdff     call 0x312fe4418580     ;; code: BINARY_OP_IC, UNINITIALIZED (id = 141)
0x312fe443b3a1   673  90             nop
0x312fe443b3a2   674  50             push rax
0x312fe443b3a3   675  b801000000     movl rax,0x1            ;; debug: position 1518
0x312fe443b3a8   680  48bb9038290100000000 REX.W movq rbx,0x1293890
0x312fe443b3b2   690  e829d7fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443b3b7   695  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: statement 1591
0x312fe443b3bb   699  48bbb1b4be4f212a0000 REX.W movq rbx,0x2a214fbeb4b1    ;; object: 0x2a214fbeb4b1 Cell for 6144
0x312fe443b3c5   709  83430bfc       addl [rbx+0xb],0xfc
0x312fe443b3c9   713  791f           jns 746  (0x312fe443b3ea)
0x312fe443b3cb   715  50             push rax
0x312fe443b3cc   716  e86fb5ffff     call InterruptCheck  (0x312fe4436940)    ;; code: BUILTIN
0x312fe443b3d1   721  58             pop rax
0x312fe443b3d2   722  48bbb1b4be4f212a0000 REX.W movq rbx,0x2a214fbeb4b1    ;; object: 0x2a214fbeb4b1 Cell for 6144
0x312fe443b3dc   732  49ba0000000000180000 REX.W movq r10,0x180000000000
0x312fe443b3e6   742  4c895307       REX.W movq [rbx+0x7],r10
0x312fe443b3ea   746  c9             leave                   ;; debug: statement 1590
0x312fe443b3eb   747  c20800         ret 0x8
0x312fe443b3ee   750  498b45a8       REX.W movq rax,[r13-0x58]
0x312fe443b3f2   754  e9c4ffffff     jmp 699  (0x312fe443b3bb)
0x312fe443b3f7   759  90             nop

Deoptimization Output Data (deopt points = 71)
ast id        pc  state
     1        50  NO_REGISTERS
     2        50  NO_REGISTERS
     3        84  NO_REGISTERS
    27       108  TOS_REG
    22       127  TOS_REG
    20       127  TOS_REG
    15       131  TOS_REG
    13       131  NO_REGISTERS
    35       131  NO_REGISTERS
    45       141  TOS_REG
    40       151  TOS_REG
    38       151  NO_REGISTERS
    36       151  NO_REGISTERS
    34       156  NO_REGISTERS
    86       156  NO_REGISTERS
    84       186  NO_REGISTERS
    89       186  NO_REGISTERS
    87       196  TOS_REG
    80       225  TOS_REG
    75       244  TOS_REG
    73       244  TOS_REG
    68       248  TOS_REG
    66       248  NO_REGISTERS
    33       248  NO_REGISTERS
    65       248  NO_REGISTERS
    63       258  TOS_REG
    60       287  TOS_REG
    59       317  TOS_REG
    57       317  NO_REGISTERS
    30       362  NO_REGISTERS
    32       362  NO_REGISTERS
    53       362  NO_REGISTERS
    51       373  NO_REGISTERS
    54       396  TOS_REG
    48       431  TOS_REG
    31       455  NO_REGISTERS
    90       455  NO_REGISTERS
    96       467  NO_REGISTERS
    99       469  NO_REGISTERS
   104       469  NO_REGISTERS
   102       499  NO_REGISTERS
    95       499  NO_REGISTERS
    93       519  NO_REGISTERS
    91       519  NO_REGISTERS
   105       519  NO_REGISTERS
   111       531  NO_REGISTERS
   114       533  NO_REGISTERS
   117       535  NO_REGISTERS
   110       535  NO_REGISTERS
   108       555  NO_REGISTERS
   106       555  NO_REGISTERS
   132       555  NO_REGISTERS
   130       566  NO_REGISTERS
   135       566  NO_REGISTERS
   133       576  TOS_REG
   127       585  TOS_REG
   121       609  NO_REGISTERS
   150       621  NO_REGISTERS
   155       621  NO_REGISTERS
   153       631  TOS_REG
   146       639  NO_REGISTERS
   156       649  TOS_REG
   142       657  NO_REGISTERS
   161       657  NO_REGISTERS
   159       667  TOS_REG
   138       675  NO_REGISTERS
   136       695  NO_REGISTERS
   122       695  NO_REGISTERS
   120       695  NO_REGISTERS
   164       695  NO_REGISTERS
   162       699  TOS_REG

Back edges (size = 1)
ast_id  pc_offset  loop_depth
    32        338           1

0x2a214fbebaa1: [TypeFeedbackInfo]
 - ic_total_count: 11, ic_with_type_info_count: 0, ic_generic_count: 0

RelocInfo (size = 143)
0x312fe443b100  position  (0)
0x312fe443b10d  embedded object  (0x2a214fbeb4c1 <FixedArray[14]>)
0x312fe443b127  code target (STUB)  (0x312fe4408ae0)
0x312fe443b134  embedded object  (0x2a214fbeb541 <FixedArray[6]>)
0x312fe443b150  code target (STUB)  (0x312fe4408ae0)
0x312fe443b15e  code target (BUILTIN)  (0x312fe4436a80)
0x312fe443b162  statement position  (1334)
0x312fe443b162  position  (1350)
0x312fe443b164  embedded object  (0x2a214fbeb4a1 <Number: 4.29497e+09>)
0x312fe443b16e  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443b17b  code target (STORE_IC)  (0x312fe4432400)
0x312fe443b183  statement position  (1364)
0x312fe443b183  statement position  (1369)
0x312fe443b193  code target (STUB)  (0x312fe4439e40)
0x312fe443b19c  statement position  (1401)
0x312fe443b19c  position  (1419)
0x312fe443b19e  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443b1b5  code target (LOAD_IC)  (0x312fe4428560)
0x312fe443b1ba  position  (1437)
0x312fe443b1c0  code target (STUB)  (0x312fe442a6e0)
0x312fe443b1c4  position  (1435)
0x312fe443b1d3  code target with id (BINARY_OP_IC)  (0x312fe441e600) (id=83)
0x312fe443b1e1  position  (1417)
0x312fe443b1e3  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443b1f0  code target (STORE_IC)  (0x312fe4432400)
0x312fe443b1f8  statement position  (1393)
0x312fe443b1f8  position  (1392)
0x312fe443b1fe  code target (STUB)  (0x312fe442a6e0)
0x312fe443b21b  code target (STUB)  (0x312fe4422f00)
0x312fe443b21f  position  (1393)
0x312fe443b22d  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=61)
0x312fe443b239  code target (STUB)  (0x312fe4439e40)
0x312fe443b23f  embedded object  (0x2a214fbeb4b1 Cell for 6144)
0x312fe443b24e  code target (BUILTIN)  (0x312fe4436940)
0x312fe443b254  embedded object  (0x2a214fbeb4b1 Cell for 6144)
0x312fe443b26a  statement position  (1382)
0x312fe443b26a  position  (1380)
0x312fe443b270  code target (STUB)  (0x312fe442a6e0)
0x312fe443b2a7  code target with id (COMPARE_IC)  (0x312fe441c8c0) (id=50)
0x312fe443b2c7  statement position  (1441)
0x312fe443b2c9  embedded object  (0x2a214fbead21 <String[6]: result>)
0x312fe443b2d5  position  (1454)
0x312fe443b2d7  embedded object  (0x2a214fbeacf9 <String[15]: bitwiseAndValue>)
0x312fe443b2ee  code target (LOAD_IC)  (0x312fe4428560)
0x312fe443b303  code target (STUB)  (0x312fe4408ae0)
0x312fe443b307  statement position  (1472)
0x312fe443b309  embedded object  (0x2a214fbead41 <String[8]: expected>)
0x312fe443b327  code target (STUB)  (0x312fe4408ae0)
0x312fe443b32b  statement position  (1490)
0x312fe443b32b  position  (1494)
0x312fe443b331  code target (STUB)  (0x312fe442a6e0)
0x312fe443b336  position  (1504)
0x312fe443b33c  code target (STUB)  (0x312fe442a6e0)
0x312fe443b342  code target with id (COMPARE_IC)  (0x312fe442b380) (id=129)
0x312fe443b361  statement position  (1518)
0x312fe443b363  embedded object  (0x2a214fbead61 <String[28]: ERROR: bad result: expected >)
0x312fe443b36d  position  (1557)
0x312fe443b373  code target (STUB)  (0x312fe442a6e0)
0x312fe443b377  position  (1555)
0x312fe443b379  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=149)
0x312fe443b381  embedded object  (0x2a214fbead99 <String[9]:  but got >)
0x312fe443b389  position  (1566)
0x312fe443b38b  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=145)
0x312fe443b391  position  (1582)
0x312fe443b397  code target (STUB)  (0x312fe442a6e0)
0x312fe443b39b  position  (1580)
0x312fe443b39d  code target with id (BINARY_OP_IC)  (0x312fe4418580) (id=141)
0x312fe443b3a3  position  (1518)
0x312fe443b3b3  code target (STUB)  (0x312fe4408ae0)
0x312fe443b3b7  statement position  (1591)
0x312fe443b3bd  embedded object  (0x2a214fbeb4b1 Cell for 6144)
0x312fe443b3cd  code target (BUILTIN)  (0x312fe4436940)
0x312fe443b3d4  embedded object  (0x2a214fbeb4b1 Cell for 6144)
0x312fe443b3ea  statement position  (1590)

--- End code ---
--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Optimized code ---
optimization_id = 0
source_position = 0
kind = OPTIMIZED_FUNCTION
stack_slots = 4
compiler = crankshaft
Instructions (size = 782)
0x312fe443bfc0     0  55             push rbp
0x312fe443bfc1     1  4889e5         REX.W movq rbp,rsp
0x312fe443bfc4     4  56             push rsi
0x312fe443bfc5     5  57             push rdi
0x312fe443bfc6     6  4883ec20       REX.W subq rsp,0x20
0x312fe443bfca    10  57             push rdi
0x312fe443bfcb    11  49bac1b4be4f212a0000 REX.W movq r10,0x2a214fbeb4c1    ;; object: 0x2a214fbeb4c1 <FixedArray[14]>
0x312fe443bfd5    21  4152           push r10
0x312fe443bfd7    23  b802000000     movl rax,0x2
0x312fe443bfdc    28  498d9d681b02fd REX.W leaq rbx,[r13-0x2fde498]
0x312fe443bfe3    35  e8f8cafcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443bfe8    40  488bf0         REX.W movq rsi,rax
0x312fe443bfeb    43  488945f8       REX.W movq [rbp-0x8],rax
0x312fe443bfef    47  488b45f8       REX.W movq rax,[rbp-0x8]
0x312fe443bff3    51  488945e0       REX.W movq [rbp-0x20],rax
0x312fe443bff7    55  488bf0         REX.W movq rsi,rax
0x312fe443bffa    58  6690           nop
0x312fe443bffc    60  49bac1babe4f212a0000 REX.W movq r10,0x2a214fbebac1    ;; object: 0x2a214fbebac1 <FixedArray[6]>
0x312fe443c006    70  4152           push r10
0x312fe443c008    72  6a00           push 0x0
0x312fe443c00a    74  b802000000     movl rax,0x2
0x312fe443c00f    79  498d9da8f301fd REX.W leaq rbx,[r13-0x2fe0c58]
0x312fe443c016    86  e8c5cafcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443c01b    91  488b75e0       REX.W movq rsi,[rbp-0x20]
0x312fe443c01f    95  660f1f840000000000 nop
0x312fe443c028   104  493ba548090000 REX.W cmpq rsp,[r13+0x948]
0x312fe443c02f   111  7305           jnc 118  (0x312fe443c036)
0x312fe443c031   113  e84aaaffff     call StackCheck  (0x312fe4436a80)    ;; code: BUILTIN
0x312fe443c036   118  49ba000000000000f041 REX.W movq r10,0x41f0000000000000
0x312fe443c040   128  66490f6eca     REX.W movq xmm1,r10
0x312fe443c045   133  48b899b2be4f212a0000 REX.W movq rax,0x2a214fbeb299    ;; object: 0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x312fe443c04f   143  48bba1b4be4f212a0000 REX.W movq rbx,0x2a214fbeb4a1    ;; object: 0x2a214fbeb4a1 <Number: 4.29497e+09>
0x312fe443c059   153  4889580f       REX.W movq [rax+0xf],rbx
0x312fe443c05d   157  f6c301         testb rbx,0x1
0x312fe443c060   160  0f8426000000   jz 204  (0x312fe443c08c)
0x312fe443c066   166  488d500f       REX.W leaq rdx,[rax+0xf]
0x312fe443c06a   170  4881e30000f0ff REX.W andq rbx,0xfffffffffff00000
0x312fe443c071   177  f6430804       testb [rbx+0x8],0x4
0x312fe443c075   181  7415           jz 204  (0x312fe443c08c)
0x312fe443c077   183  48c7c30000f0ff REX.W movq rbx,0xfff00000
0x312fe443c07e   190  4823d8         REX.W andq rbx,rax
0x312fe443c081   193  f6430808       testb [rbx+0x8],0x8
0x312fe443c085   197  7405           jz 204  (0x312fe443c08c)
0x312fe443c087   199  e8f4f3ffff     call 0x312fe443b480     ;; code: STUB, RecordWriteStub, minor: 8752
0x312fe443c08c   204  48b8d9b1be4f212a0000 REX.W movq rax,0x2a214fbeb1d9    ;; object: 0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_])
0x312fe443c096   214  4533d2         xorl r10,r10
0x312fe443c099   217  4c89500f       REX.W movq [rax+0xf],r10
0x312fe443c09d   221  e940000000     jmp 290  (0x312fe443c0e2)
0x312fe443c0a2   226  4883ec18       REX.W subq rsp,0x18
0x312fe443c0a6   230  488b75f8       REX.W movq rsi,[rbp-0x8]
0x312fe443c0aa   234  488b45e8       REX.W movq rax,[rbp-0x18]
0x312fe443c0ae   238  a801           test al,0x1
0x312fe443c0b0   240  7415           jz 263  (0x312fe443c0c7)
0x312fe443c0b2   242  4d8b5508       REX.W movq r10,[r13+0x8]
0x312fe443c0b6   246  4c3950ff       REX.W cmpq [rax-0x1],r10
0x312fe443c0ba   250  f20f104807     movsd xmm1,[rax+0x7]
0x312fe443c0bf   255  0f85b5010000   jnz 698  (0x312fe443c27a)
0x312fe443c0c5   261  eb0f           jmp 278  (0x312fe443c0d6)
0x312fe443c0c7   263  4c8bd0         REX.W movq r10,rax
0x312fe443c0ca   266  49c1ea20       REX.W shrq r10, 32
0x312fe443c0ce   270  0f57c9         xorps xmm1,xmm1
0x312fe443c0d1   273  f2410f2aca     cvtsi2sd xmm1,r10
0x312fe443c0d6   278  488b5d10       REX.W movq rbx,[rbp+0x10]
0x312fe443c0da   282  488bc6         REX.W movq rax,rsi
0x312fe443c0dd   285  e908000000     jmp 298  (0x312fe443c0ea)
0x312fe443c0e2   290  488b5d10       REX.W movq rbx,[rbp+0x10]
0x312fe443c0e6   294  488b45e0       REX.W movq rax,[rbp-0x20]
0x312fe443c0ea   298  48895dd8       REX.W movq [rbp-0x28],rbx
0x312fe443c0ee   302  488945e8       REX.W movq [rbp-0x18],rax
0x312fe443c0f2   306  f20f114dd0     movsd [rbp-0x30],xmm1    ;; debug: position 1382
0x312fe443c0f7   311  48bad9b1be4f212a0000 REX.W movq rdx,0x2a214fbeb1d9    ;; object: 0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_])
0x312fe443c101   321  8b5213         movl rdx,[rdx+0x13]
0x312fe443c104   324  81fac0270900   cmpl rdx,0x927c0
0x312fe443c10a   330  0f8d61000000   jge 433  (0x312fe443c171)
0x312fe443c110   336  493ba548090000 REX.W cmpq rsp,[r13+0x948]
0x312fe443c117   343  0f82b7000000   jc 532  (0x312fe443c1d4)
0x312fe443c11d   349  48b999b2be4f212a0000 REX.W movq rcx,0x2a214fbeb299    ;; object: 0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x312fe443c127   359  488b490f       REX.W movq rcx,[rcx+0xf]
0x312fe443c12b   363  f6c101         testb rcx,0x1           ;; debug: position 1435
0x312fe443c12e   366  0f85e5000000   jnz 601  (0x312fe443c219)
0x312fe443c134   372  48c1e920       REX.W shrq rcx, 32
0x312fe443c138   376  488bf1         REX.W movq rsi,rcx
0x312fe443c13b   379  23f2           andl rsi,rdx
0x312fe443c13d   381  8bfe           movl rdi,rsi
0x312fe443c13f   383  48c1e720       REX.W shlq rdi, 32
0x312fe443c143   387  48b999b2be4f212a0000 REX.W movq rcx,0x2a214fbeb299    ;; debug: position 1382
                                                             ;; object: 0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x312fe443c14d   397  4889790f       REX.W movq [rcx+0xf],rdi    ;; debug: position 1435
0x312fe443c151   401  83c201         addl rdx,0x1            ;; debug: position 1393
0x312fe443c154   404  8bca           movl rcx,rdx
0x312fe443c156   406  48c1e120       REX.W shlq rcx, 32
0x312fe443c15a   410  48bad9b1be4f212a0000 REX.W movq rdx,0x2a214fbeb1d9    ;; debug: position 1382
                                                             ;; object: 0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_])
0x312fe443c164   420  48894a0f       REX.W movq [rdx+0xf],rcx    ;; debug: position 1393
0x312fe443c168   424  0f57c9         xorps xmm1,xmm1         ;; debug: position 1382
0x312fe443c16b   427  f20f2ace       cvtsi2sd xmm1,rsi
0x312fe443c16f   431  eb81           jmp 306  (0x312fe443c0f2)    ;; debug: position 1393
0x312fe443c171   433  48b999b2be4f212a0000 REX.W movq rcx,0x2a214fbeb299    ;; debug: position 1382
                                                             ;; object: 0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x312fe443c17b   443  488b510f       REX.W movq rdx,[rcx+0xf]    ;; debug: position 1393
0x312fe443c17f   447  49ba21adbe4f212a0000 REX.W movq r10,0x2a214fbead21    ;; object: 0x2a214fbead21 <String[6]: result>
0x312fe443c189   457  4152           push r10
0x312fe443c18b   459  6a00           push 0x0
0x312fe443c18d   461  52             push rdx
0x312fe443c18e   462  488bf0         REX.W movq rsi,rax
0x312fe443c191   465  b803000000     movl rax,0x3
0x312fe443c196   470  498d9d48fa01fd REX.W leaq rbx,[r13-0x2fe05b8]
0x312fe443c19d   477  e83ec9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443c1a2   482  49ba41adbe4f212a0000 REX.W movq r10,0x2a214fbead41    ;; object: 0x2a214fbead41 <String[8]: expected>
0x312fe443c1ac   492  4152           push r10
0x312fe443c1ae   494  6a00           push 0x0
0x312fe443c1b0   496  6a00           push 0x0
0x312fe443c1b2   498  488b75e8       REX.W movq rsi,[rbp-0x18]
0x312fe443c1b6   502  b803000000     movl rax,0x3
0x312fe443c1bb   507  498d9d48fa01fd REX.W leaq rbx,[r13-0x2fe05b8]
0x312fe443c1c2   514  e819c9fcff     call 0x312fe4408ae0     ;; code: STUB, CEntryStub, minor: 0
0x312fe443c1c7   519  e8849eecff     call 0x312fe4306050     ;; debug: position 1501
                                                             ;; soft deoptimization bailout 8
0x312fe443c1cc   524  0f1f840000000000 nop
0x312fe443c1d4   532  50             push rax                ;; debug: position 1382
0x312fe443c1d5   533  51             push rcx
0x312fe443c1d6   534  52             push rdx
0x312fe443c1d7   535  53             push rbx
0x312fe443c1d8   536  56             push rsi
0x312fe443c1d9   537  57             push rdi
0x312fe443c1da   538  4150           push r8
0x312fe443c1dc   540  4151           push r9
0x312fe443c1de   542  4153           push r11
0x312fe443c1e0   544  4154           push r12
0x312fe443c1e2   546  4156           push r14
0x312fe443c1e4   548  4157           push r15
0x312fe443c1e6   550  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x312fe443c1eb   555  488b75f8       REX.W movq rsi,[rbp-0x8]
0x312fe443c1ef   559  33c0           xorl rax,rax
0x312fe443c1f1   561  498d9d88e5fffc REX.W leaq rbx,[r13-0x3001a78]
0x312fe443c1f8   568  e8a3a0fcff     call 0x312fe44062a0     ;; code: STUB, CEntryStub, minor: 1
0x312fe443c1fd   573  488d642420     REX.W leaq rsp,[rsp+0x20]
0x312fe443c202   578  415f           pop r15
0x312fe443c204   580  415e           pop r14
0x312fe443c206   582  415c           pop r12
0x312fe443c208   584  415b           pop r11
0x312fe443c20a   586  4159           pop r9
0x312fe443c20c   588  4158           pop r8
0x312fe443c20e   590  5f             pop rdi
0x312fe443c20f   591  5e             pop rsi
0x312fe443c210   592  5b             pop rbx
0x312fe443c211   593  5a             pop rdx
0x312fe443c212   594  59             pop rcx
0x312fe443c213   595  58             pop rax
0x312fe443c214   596  e904ffffff     jmp 349  (0x312fe443c11d)
0x312fe443c219   601  4d8b5508       REX.W movq r10,[r13+0x8]    ;; debug: position 1435
0x312fe443c21d   605  4c3951ff       REX.W cmpq [rcx-0x1],r10
0x312fe443c221   609  7529           jnz 652  (0x312fe443c24c)
0x312fe443c223   611  f20f104107     movsd xmm0,[rcx+0x7]
0x312fe443c228   616  f2480f2cc8     REX.W cvttsd2siq rcx,xmm0
0x312fe443c22d   621  4883f901       REX.W cmpq rcx,0x1
0x312fe443c231   625  7112           jno 645  (0x312fe443c245)
0x312fe443c233   627  4883ec08       REX.W subq rsp,0x8
0x312fe443c237   631  f20f110424     movsd [rsp],xmm0
0x312fe443c23c   636  e8bffcffff     call 0x312fe443bf00     ;; code: STUB, DoubleToIStub, minor: 135236
0x312fe443c241   641  4883c408       REX.W addq rsp,0x8
0x312fe443c245   645  8bc9           movl rcx,rcx
0x312fe443c247   647  e9ecfeffff     jmp 376  (0x312fe443c138)
0x312fe443c24c   652  493b4da8       REX.W cmpq rcx,[r13-0x58]
0x312fe443c250   656  7507           jnz 665  (0x312fe443c259)
0x312fe443c252   658  33c9           xorl rcx,rcx
0x312fe443c254   660  e9dffeffff     jmp 376  (0x312fe443c138)
0x312fe443c259   665  493b4dc0       REX.W cmpq rcx,[r13-0x40]
0x312fe443c25d   669  750a           jnz 681  (0x312fe443c269)
0x312fe443c25f   671  b901000000     movl rcx,0x1
0x312fe443c264   676  e9cffeffff     jmp 376  (0x312fe443c138)
0x312fe443c269   681  493b4dc8       REX.W cmpq rcx,[r13-0x38]
0x312fe443c26d   685  0f850c000000   jnz 703  (0x312fe443c27f)
0x312fe443c273   691  33c9           xorl rcx,rcx
0x312fe443c275   693  e9befeffff     jmp 376  (0x312fe443c138)
0x312fe443c27a   698  e8a99dccff     call 0x312fe4106028     ;; deoptimization bailout 4
0x312fe443c27f   703  e8d69dccff     call 0x312fe410605a     ;; deoptimization bailout 9

Inlined functions (count = 0)

Deoptimization Input Data (deopt points = 10)
 index  ast id    argc     pc
     0       1       0     47
     1       3       0     91
     2       3       0    118
     3      32       0     -1
     4      30       0     -1
     5      34       0    349
     6      93       0    482
     7     108       0    519
     8     108       0     -1
     9      34       0     -1

Safepoints (size = 74)
0x312fe443bfe8    40  0000 (sp -> fp)       0
0x312fe443c01b    91  0010 (sp -> fp)       1
0x312fe443c036   118  0010 (sp -> fp)       2
0x312fe443c1a2   482  0101 (sp -> fp)       6
0x312fe443c1c7   519  0101 (sp -> fp)       7
0x312fe443c1fd   573  0101 | rax | rbx (sp -> fp)       5

RelocInfo (size = 88)
0x312fe443bfcd  embedded object  (0x2a214fbeb4c1 <FixedArray[14]>)
0x312fe443bfe4  code target (STUB)  (0x312fe4408ae0)
0x312fe443bffe  embedded object  (0x2a214fbebac1 <FixedArray[6]>)
0x312fe443c017  code target (STUB)  (0x312fe4408ae0)
0x312fe443c032  code target (BUILTIN)  (0x312fe4436a80)
0x312fe443c047  embedded object  (0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x312fe443c051  embedded object  (0x2a214fbeb4a1 <Number: 4.29497e+09>)
0x312fe443c088  code target (STUB)  (0x312fe443b480)
0x312fe443c08e  embedded object  (0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_]))
0x312fe443c0f2  position  (1382)
0x312fe443c0f9  embedded object  (0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_]))
0x312fe443c11f  embedded object  (0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x312fe443c12b  position  (1435)
0x312fe443c143  position  (1382)
0x312fe443c145  embedded object  (0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x312fe443c14d  position  (1435)
0x312fe443c151  position  (1393)
0x312fe443c15a  position  (1382)
0x312fe443c15c  embedded object  (0x2a214fbeb1d9 PropertyCell for 18436 (data, dictionary_index: 165, attrs: [WE_]))
0x312fe443c164  position  (1393)
0x312fe443c168  position  (1382)
0x312fe443c16f  position  (1393)
0x312fe443c171  position  (1382)
0x312fe443c173  embedded object  (0x2a214fbeb299 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x312fe443c17b  position  (1393)
0x312fe443c181  embedded object  (0x2a214fbead21 <String[6]: result>)
0x312fe443c19e  code target (STUB)  (0x312fe4408ae0)
0x312fe443c1a4  embedded object  (0x2a214fbead41 <String[8]: expected>)
0x312fe443c1c3  code target (STUB)  (0x312fe4408ae0)
0x312fe443c1c7  position  (1501)
0x312fe443c1c8  runtime entry
0x312fe443c1d4  position  (1382)
0x312fe443c1f9  code target (STUB)  (0x312fe44062a0)
0x312fe443c219  position  (1435)
0x312fe443c23d  code target (STUB)  (0x312fe443bf00)
0x312fe443c27b  runtime entry  (deoptimization bailout 4)
0x312fe443c280  runtime entry  (deoptimization bailout 9)

--- End code ---
