--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Code ---
source_position = 0
kind = FUNCTION
compiler = full-codegen
Instructions (size = 888)
0x225c0f3a320     0  55             push rbp                 ;; debug: position 0
0x225c0f3a321     1  4889e5         REX.W movq rbp,rsp
0x225c0f3a324     4  56             push rsi
0x225c0f3a325     5  57             push rdi
0x225c0f3a326     6  41ff75a8       push [r13-0x58]
0x225c0f3a32a    10  49baf1d05e3e57070000 REX.W movq r10,0x7573e5ed0f1    ;; object: 0x7573e5ed0f1 <FixedArray[6]>
0x225c0f3a334    20  4152           push r10
0x225c0f3a336    22  6a00           push 0x0
0x225c0f3a338    24  b802000000     movl rax,0x2
0x225c0f3a33d    29  48bb201c2a0100000000 REX.W movq rbx,0x12a1c20
0x225c0f3a347    39  e814e8fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3a34c    44  493ba540090000 REX.W cmpq rsp,[r13+0x940]
0x225c0f3a353    51  7305           jnc 58  (0x225c0f3a35a)
0x225c0f3a355    53  e8e6c0ffff     call StackCheck  (0x225c0f36440)    ;; code: BUILTIN
0x225c0f3a35a    58  48b861d05e3e57070000 REX.W movq rax,0x7573e5ed061    ;; debug: statement 1334
                                                             ;; debug: position 1350
                                                             ;; object: 0x7573e5ed061 <Number: 4.29497e+09>
0x225c0f3a364    68  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3a36e    78  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a372    82  e8e97bffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3a377    87  488945e8       REX.W movq [rbp-0x18],rax
0x225c0f3a37b    91  48b80000000000000000 REX.W movq rax,(nil)    ;; debug: statement 1364
                                                             ;; debug: statement 1369
0x225c0f3a385   101  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3a38f   111  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a393   115  e8c87bffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3a398   120  e9fd000000     jmp 378  (0x225c0f3a49a)
0x225c0f3a39d   125  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: statement 1401
                                                             ;; debug: position 1419
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3a3a7   135  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a3ab   139  48b8000000000a000000 REX.W movq rax,0xa00000000
0x225c0f3a3b5   149  e846dbfeff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a3ba   154  50             push rax
0x225c0f3a3bb   155  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: position 1437
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3a3c5   165  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a3c9   169  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3a3d3   179  e828dbfeff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a3d8   184  5a             pop rdx                  ;; debug: position 1435
0x225c0f3a3d9   185  488bc8         REX.W movq rcx,rax
0x225c0f3a3dc   188  480bc2         REX.W orq rax,rdx
0x225c0f3a3df   191  a801           test al,0x1
0x225c0f3a3e1   193  720c           jc 207  (0x225c0f3a3ef)
0x225c0f3a3e3   195  488bc1         REX.W movq rax,rcx
0x225c0f3a3e6   198  e8353ffeff     call 0x225c0f1e320       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 83)
0x225c0f3a3eb   203  a80a           test al,0xa
0x225c0f3a3ed   205  eb06           jmp 213  (0x225c0f3a3f5)
0x225c0f3a3ef   207  488bc2         REX.W movq rax,rdx
0x225c0f3a3f2   210  4823c1         REX.W andq rax,rcx
0x225c0f3a3f5   213  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: position 1417
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3a3ff   223  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a403   227  e8587bffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3a408   232  488945e8       REX.W movq [rbp-0x18],rax
0x225c0f3a40c   236  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: statement 1393
                                                             ;; debug: position 1392
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3a416   246  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a41a   250  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3a424   260  e8d7dafeff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a429   265  a801           test al,0x1
0x225c0f3a42b   267  7314           jnc 289  (0x225c0f3a441)
0x225c0f3a42d   269  49ba0000000001000000 REX.W movq r10,0x100000000
0x225c0f3a437   279  4903c2         REX.W addq rax,r10
0x225c0f3a43a   282  711e           jno 314  (0x225c0f3a45a)
0x225c0f3a43c   284  492bc2         REX.W subq rax,r10
0x225c0f3a43f   287  eb05           jmp 294  (0x225c0f3a446)
0x225c0f3a441   289  e8da85feff     call 0x225c0f22a20       ;; code: STUB, ToNumberStub, minor: 0
0x225c0f3a446   294  488bd0         REX.W movq rdx,rax       ;; debug: position 1393
0x225c0f3a449   297  48b80000000001000000 REX.W movq rax,0x100000000
0x225c0f3a453   307  e848d6fdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 61)
0x225c0f3a458   312  a82d           test al,0x2d
0x225c0f3a45a   314  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3a464   324  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a468   328  e8f37affff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3a46d   333  48bbe1d05e3e57070000 REX.W movq rbx,0x7573e5ed0e1    ;; object: 0x7573e5ed0e1 Cell for 6144
0x225c0f3a477   343  83430bff       addl [rbx+0xb],0xff
0x225c0f3a47b   347  791d           jns 378  (0x225c0f3a49a)
0x225c0f3a47d   349  e87ebeffff     call InterruptCheck  (0x225c0f36300)    ;; code: BUILTIN
0x225c0f3a482   354  48bbe1d05e3e57070000 REX.W movq rbx,0x7573e5ed0e1    ;; object: 0x7573e5ed0e1 Cell for 6144
0x225c0f3a48c   364  49ba0000000000180000 REX.W movq r10,0x180000000000
0x225c0f3a496   374  4c895307       REX.W movq [rbx+0x7],r10
0x225c0f3a49a   378  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: statement 1382
                                                             ;; debug: position 1380
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3a4a4   388  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a4a8   392  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3a4b2   402  e849dafeff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a4b7   407  50             push rax
0x225c0f3a4b8   408  48b80000000041b6fa31 REX.W movq rax,0x31fab64100000000
0x225c0f3a4c2   418  49ba000000008191f331 REX.W movq r10,0x31f3918100000000
0x225c0f3a4cc   428  4933c2         REX.W xorq rax,r10
0x225c0f3a4cf   431  5a             pop rdx
0x225c0f3a4d0   432  488bca         REX.W movq rcx,rdx
0x225c0f3a4d3   435  480bc8         REX.W orq rcx,rax
0x225c0f3a4d6   438  f6c101         testb rcx,0x1
0x225c0f3a4d9   441  730e           jnc 457  (0x225c0f3a4e9)
0x225c0f3a4db   443  483bd0         REX.W cmpq rdx,rax
0x225c0f3a4de   446  0f8cb9feffff   jl 125  (0x225c0f3a39d)
0x225c0f3a4e4   452  e921000000     jmp 490  (0x225c0f3a50a)
0x225c0f3a4e9   457  e8b21bfeff     call 0x225c0f1c0a0       ;; code: COMPARE_IC, UNINITIALIZED (id = 50)
0x225c0f3a4ee   462  a815           test al,0x15
0x225c0f3a4f0   464  eb0f           jmp 481  (0x225c0f3a501)
0x225c0f3a4f2   466  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a4f6   470  0f84a1feffff   jz 125  (0x225c0f3a39d)
0x225c0f3a4fc   476  e909000000     jmp 490  (0x225c0f3a50a)
0x225c0f3a501   481  4885c0         REX.W testq rax,rax
0x225c0f3a504   484  0f8c93feffff   jl 125  (0x225c0f3a39d)
0x225c0f3a50a   490  49bac1cf5e3e57070000 REX.W movq r10,0x7573e5ecfc1    ;; debug: statement 1441
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3a514   500  4152           push r10
0x225c0f3a516   502  6a00           push 0x0
0x225c0f3a518   504  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: position 1454
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3a522   514  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a526   518  48b8000000000a000000 REX.W movq rax,0xa00000000
0x225c0f3a530   528  e8cbd9feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a535   533  50             push rax
0x225c0f3a536   534  b803000000     movl rax,0x3
0x225c0f3a53b   539  48bbc0222a0100000000 REX.W movq rbx,0x12a22c0
0x225c0f3a545   549  e816e6fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3a54a   554  49bae1cf5e3e57070000 REX.W movq r10,0x7573e5ecfe1    ;; debug: statement 1472
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3a554   564  4152           push r10
0x225c0f3a556   566  6a00           push 0x0
0x225c0f3a558   568  6a00           push 0x0
0x225c0f3a55a   570  b803000000     movl rax,0x3
0x225c0f3a55f   575  48bbc0222a0100000000 REX.W movq rbx,0x12a22c0
0x225c0f3a569   585  e8f2e5fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3a56e   590  48b9c1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfc1    ;; debug: statement 1490
                                                             ;; debug: position 1494
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3a578   600  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a57c   604  48b80000000006000000 REX.W movq rax,0x600000000
0x225c0f3a586   614  e875d9feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a58b   619  50             push rax
0x225c0f3a58c   620  48b9e1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfe1    ;; debug: position 1504
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3a596   630  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a59a   634  48b80000000008000000 REX.W movq rax,0x800000000
0x225c0f3a5a4   644  e857d9feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a5a9   649  5a             pop rdx
0x225c0f3a5aa   650  e81108ffff     call 0x225c0f2adc0       ;; code: COMPARE_IC, UNINITIALIZED (id = 129)
0x225c0f3a5af   655  90             nop
0x225c0f3a5b0   656  eb0f           jmp 673  (0x225c0f3a5c1)
0x225c0f3a5b2   658  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a5b6   662  0f848a000000   jz 806  (0x225c0f3a646)
0x225c0f3a5bc   668  e909000000     jmp 682  (0x225c0f3a5ca)
0x225c0f3a5c1   673  4885c0         REX.W testq rax,rax
0x225c0f3a5c4   676  0f847c000000   jz 806  (0x225c0f3a646)
0x225c0f3a5ca   682  49ba01d05e3e57070000 REX.W movq r10,0x7573e5ed001    ;; debug: statement 1518
                                                             ;; object: 0x7573e5ed001 <String[28]: ERROR: bad result: expected >
0x225c0f3a5d4   692  4152           push r10
0x225c0f3a5d6   694  48b9e1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfe1    ;; debug: position 1557
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3a5e0   704  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a5e4   708  48b80000000008000000 REX.W movq rax,0x800000000
0x225c0f3a5ee   718  e80dd9feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a5f3   723  5a             pop rdx                  ;; debug: position 1555
0x225c0f3a5f4   724  e8a7d4fdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 149)
0x225c0f3a5f9   729  90             nop
0x225c0f3a5fa   730  50             push rax
0x225c0f3a5fb   731  48b839d05e3e57070000 REX.W movq rax,0x7573e5ed039    ;; object: 0x7573e5ed039 <String[9]:  but got >
0x225c0f3a605   741  5a             pop rdx                  ;; debug: position 1566
0x225c0f3a606   742  e895d4fdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 145)
0x225c0f3a60b   747  90             nop
0x225c0f3a60c   748  50             push rax
0x225c0f3a60d   749  48b9c1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfc1    ;; debug: position 1582
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3a617   759  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3a61b   763  48b80000000006000000 REX.W movq rax,0x600000000
0x225c0f3a625   773  e8d6d8feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3a62a   778  5a             pop rdx                  ;; debug: position 1580
0x225c0f3a62b   779  e870d4fdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 141)
0x225c0f3a630   784  90             nop
0x225c0f3a631   785  50             push rax
0x225c0f3a632   786  b801000000     movl rax,0x1             ;; debug: position 1518
0x225c0f3a637   791  48bb1023280100000000 REX.W movq rbx,0x1282310
0x225c0f3a641   801  e81ae5fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3a646   806  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: statement 1591
0x225c0f3a64a   810  48bbe1d05e3e57070000 REX.W movq rbx,0x7573e5ed0e1    ;; object: 0x7573e5ed0e1 Cell for 6144
0x225c0f3a654   820  83430bfc       addl [rbx+0xb],0xfc
0x225c0f3a658   824  791f           jns 857  (0x225c0f3a679)
0x225c0f3a65a   826  50             push rax
0x225c0f3a65b   827  e8a0bcffff     call InterruptCheck  (0x225c0f36300)    ;; code: BUILTIN
0x225c0f3a660   832  58             pop rax
0x225c0f3a661   833  48bbe1d05e3e57070000 REX.W movq rbx,0x7573e5ed0e1    ;; object: 0x7573e5ed0e1 Cell for 6144
0x225c0f3a66b   843  49ba0000000000180000 REX.W movq r10,0x180000000000
0x225c0f3a675   853  4c895307       REX.W movq [rbx+0x7],r10
0x225c0f3a679   857  c9             leave                    ;; debug: statement 1590
0x225c0f3a67a   858  c20800         ret 0x8
0x225c0f3a67d   861  498b45a8       REX.W movq rax,[r13-0x58]
0x225c0f3a681   865  e9c4ffffff     jmp 810  (0x225c0f3a64a)
0x225c0f3a686   870  6690           nop

Deoptimization Output Data (deopt points = 0)

Back edges (size = 1)
ast_id  pc_offset  loop_depth
    32        354           1

0x7573e5ed1d9: [TypeFeedbackInfo]
 - ic_total_count: 20, ic_with_type_info_count: 0, ic_generic_count: 0

RelocInfo (size = 150)
0x225c0f3a320  position  (0)
0x225c0f3a32c  embedded object  (0x7573e5ed0f1 <FixedArray[6]>)
0x225c0f3a348  code target (STUB)  (0x225c0f08b60)
0x225c0f3a356  code target (BUILTIN)  (0x225c0f36440)
0x225c0f3a35a  statement position  (1334)
0x225c0f3a35a  position  (1350)
0x225c0f3a35c  embedded object  (0x7573e5ed061 <Number: 4.29497e+09>)
0x225c0f3a366  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3a373  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3a37b  statement position  (1364)
0x225c0f3a37b  statement position  (1369)
0x225c0f3a387  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3a394  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3a39d  statement position  (1401)
0x225c0f3a39d  position  (1419)
0x225c0f3a39f  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3a3b6  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a3bb  position  (1437)
0x225c0f3a3bd  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3a3d4  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a3d8  position  (1435)
0x225c0f3a3e7  code target with id (BINARY_OP_IC)  (0x225c0f1e320) (id=83)
0x225c0f3a3f5  position  (1417)
0x225c0f3a3f7  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3a404  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3a40c  statement position  (1393)
0x225c0f3a40c  position  (1392)
0x225c0f3a40e  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3a425  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a442  code target (STUB)  (0x225c0f22a20)
0x225c0f3a446  position  (1393)
0x225c0f3a454  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=61)
0x225c0f3a45c  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3a469  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3a46f  embedded object  (0x7573e5ed0e1 Cell for 6144)
0x225c0f3a47e  code target (BUILTIN)  (0x225c0f36300)
0x225c0f3a484  embedded object  (0x7573e5ed0e1 Cell for 6144)
0x225c0f3a49a  statement position  (1382)
0x225c0f3a49a  position  (1380)
0x225c0f3a49c  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3a4b3  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a4ea  code target with id (COMPARE_IC)  (0x225c0f1c0a0) (id=50)
0x225c0f3a50a  statement position  (1441)
0x225c0f3a50c  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3a518  position  (1454)
0x225c0f3a51a  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3a531  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a546  code target (STUB)  (0x225c0f08b60)
0x225c0f3a54a  statement position  (1472)
0x225c0f3a54c  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3a56a  code target (STUB)  (0x225c0f08b60)
0x225c0f3a56e  statement position  (1490)
0x225c0f3a56e  position  (1494)
0x225c0f3a570  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3a587  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a58c  position  (1504)
0x225c0f3a58e  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3a5a5  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a5ab  code target with id (COMPARE_IC)  (0x225c0f2adc0) (id=129)
0x225c0f3a5ca  statement position  (1518)
0x225c0f3a5cc  embedded object  (0x7573e5ed001 <String[28]: ERROR: bad result: expected >)
0x225c0f3a5d6  position  (1557)
0x225c0f3a5d8  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3a5ef  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a5f3  position  (1555)
0x225c0f3a5f5  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=149)
0x225c0f3a5fd  embedded object  (0x7573e5ed039 <String[9]:  but got >)
0x225c0f3a605  position  (1566)
0x225c0f3a607  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=145)
0x225c0f3a60d  position  (1582)
0x225c0f3a60f  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3a626  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3a62a  position  (1580)
0x225c0f3a62c  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=141)
0x225c0f3a632  position  (1518)
0x225c0f3a642  code target (STUB)  (0x225c0f08b60)
0x225c0f3a646  statement position  (1591)
0x225c0f3a64c  embedded object  (0x7573e5ed0e1 Cell for 6144)
0x225c0f3a65c  code target (BUILTIN)  (0x225c0f36300)
0x225c0f3a663  embedded object  (0x7573e5ed0e1 Cell for 6144)
0x225c0f3a679  statement position  (1590)

--- End code ---
--- Raw source ---
(h){
var i;
if((typeof(this)==='number')){
i=this;
if(!(typeof(h)==='number'))h=%non_number_to_number(h);
}else{
i=%non_number_to_number(this);
if(!(typeof(h)==='number'))h=%non_number_to_number(h);
if((!%_IsSmi(%IS_VAR(i))&&!(i==i)))return 0;
}
return %NumberAnd(i,h);
}


--- Code ---
source_position = 5696
kind = FUNCTION
name = BIT_AND
compiler = full-codegen
Instructions (size = 508)
0x225c0f3a7c0     0  55             push rbp                 ;; debug: position 5696
0x225c0f3a7c1     1  4889e5         REX.W movq rbp,rsp
0x225c0f3a7c4     4  56             push rsi
0x225c0f3a7c5     5  57             push rdi
0x225c0f3a7c6     6  41ff75a8       push [r13-0x58]
0x225c0f3a7ca    10  493ba540090000 REX.W cmpq rsp,[r13+0x940]
0x225c0f3a7d1    17  7305           jnc 24  (0x225c0f3a7d8)
0x225c0f3a7d3    19  e868bcffff     call StackCheck  (0x225c0f36440)    ;; code: BUILTIN
0x225c0f3a7d8    24  488b4518       REX.W movq rax,[rbp+0x18]    ;; debug: statement 5701
                                                             ;; debug: statement 5708
                                                             ;; debug: position 5719
0x225c0f3a7dc    28  eb0f           jmp 45  (0x225c0f3a7ed)
0x225c0f3a7de    30  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a7e2    34  0f841b000000   jz 67  (0x225c0f3a803)
0x225c0f3a7e8    40  e982000000     jmp 175  (0x225c0f3a86f)
0x225c0f3a7ed    45  a801           test al,0x1
0x225c0f3a7ef    47  0f840e000000   jz 67  (0x225c0f3a803)
0x225c0f3a7f5    53  488b40ff       REX.W movq rax,[rax-0x1]
0x225c0f3a7f9    57  493b4508       REX.W cmpq rax,[r13+0x8]
0x225c0f3a7fd    61  0f856c000000   jnz 175  (0x225c0f3a86f)
0x225c0f3a803    67  488b4518       REX.W movq rax,[rbp+0x18]    ;; debug: statement 5739
                                                             ;; debug: position 5741
0x225c0f3a807    71  488945e8       REX.W movq [rbp-0x18],rax    ;; debug: position 5740
0x225c0f3a80b    75  488b4510       REX.W movq rax,[rbp+0x10]    ;; debug: statement 5747
                                                             ;; debug: position 5759
0x225c0f3a80f    79  eb0f           jmp 96  (0x225c0f3a820)
0x225c0f3a811    81  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a815    85  0f844f000000   jz 170  (0x225c0f3a86a)
0x225c0f3a81b    91  e916000000     jmp 118  (0x225c0f3a836)
0x225c0f3a820    96  a801           test al,0x1
0x225c0f3a822    98  0f8442000000   jz 170  (0x225c0f3a86a)
0x225c0f3a828   104  488b40ff       REX.W movq rax,[rax-0x1]
0x225c0f3a82c   108  493b4508       REX.W cmpq rax,[r13+0x8]
0x225c0f3a830   112  0f8434000000   jz 170  (0x225c0f3a86a)
0x225c0f3a836   118  41ff75a8       push [r13-0x58]          ;; debug: statement 5774
                                                             ;; debug: position 5775
0x225c0f3a83a   122  488b4627       REX.W movq rax,[rsi+0x27]
0x225c0f3a83e   126  488b401f       REX.W movq rax,[rax+0x1f]
0x225c0f3a842   130  488b80d7020000 REX.W movq rax,[rax+0x2d7]
0x225c0f3a849   137  ff3424         push [rsp]
0x225c0f3a84c   140  4889442408     REX.W movq [rsp+0x8],rax
0x225c0f3a851   145  ff7510         push [rbp+0x10]          ;; debug: position 5798
0x225c0f3a854   148  488b7c2410     REX.W movq rdi,[rsp+0x10]    ;; debug: position 5776
0x225c0f3a859   153  e8c256ffff     call 0x225c0f2ff20       ;; code: STUB, CallFunctionStub, minor: 4
0x225c0f3a85e   158  488b75f8       REX.W movq rsi,[rbp-0x8]
0x225c0f3a862   162  4883c408       REX.W addq rsp,0x8
0x225c0f3a866   166  48894510       REX.W movq [rbp+0x10],rax    ;; debug: position 5775
0x225c0f3a86a   170  e91a010000     jmp 457  (0x225c0f3a989)
0x225c0f3a86f   175  41ff75a8       push [r13-0x58]          ;; debug: statement 5809
                                                             ;; debug: position 5810
0x225c0f3a873   179  488b4627       REX.W movq rax,[rsi+0x27]
0x225c0f3a877   183  488b401f       REX.W movq rax,[rax+0x1f]
0x225c0f3a87b   187  488b80d7020000 REX.W movq rax,[rax+0x2d7]
0x225c0f3a882   194  ff3424         push [rsp]
0x225c0f3a885   197  4889442408     REX.W movq [rsp+0x8],rax
0x225c0f3a88a   202  ff7518         push [rbp+0x18]          ;; debug: position 5833
0x225c0f3a88d   205  488b7c2410     REX.W movq rdi,[rsp+0x10]    ;; debug: position 5811
0x225c0f3a892   210  e88956ffff     call 0x225c0f2ff20       ;; code: STUB, CallFunctionStub, minor: 4
0x225c0f3a897   215  488b75f8       REX.W movq rsi,[rbp-0x8]
0x225c0f3a89b   219  4883c408       REX.W addq rsp,0x8
0x225c0f3a89f   223  488945e8       REX.W movq [rbp-0x18],rax    ;; debug: position 5810
0x225c0f3a8a3   227  488b4510       REX.W movq rax,[rbp+0x10]    ;; debug: statement 5840
                                                             ;; debug: position 5852
0x225c0f3a8a7   231  eb0f           jmp 248  (0x225c0f3a8b8)
0x225c0f3a8a9   233  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a8ad   237  0f844f000000   jz 322  (0x225c0f3a902)
0x225c0f3a8b3   243  e916000000     jmp 270  (0x225c0f3a8ce)
0x225c0f3a8b8   248  a801           test al,0x1
0x225c0f3a8ba   250  0f8442000000   jz 322  (0x225c0f3a902)
0x225c0f3a8c0   256  488b40ff       REX.W movq rax,[rax-0x1]
0x225c0f3a8c4   260  493b4508       REX.W cmpq rax,[r13+0x8]
0x225c0f3a8c8   264  0f8434000000   jz 322  (0x225c0f3a902)
0x225c0f3a8ce   270  41ff75a8       push [r13-0x58]          ;; debug: statement 5867
                                                             ;; debug: position 5868
0x225c0f3a8d2   274  488b4627       REX.W movq rax,[rsi+0x27]
0x225c0f3a8d6   278  488b401f       REX.W movq rax,[rax+0x1f]
0x225c0f3a8da   282  488b80d7020000 REX.W movq rax,[rax+0x2d7]
0x225c0f3a8e1   289  ff3424         push [rsp]
0x225c0f3a8e4   292  4889442408     REX.W movq [rsp+0x8],rax
0x225c0f3a8e9   297  ff7510         push [rbp+0x10]          ;; debug: position 5891
0x225c0f3a8ec   300  488b7c2410     REX.W movq rdi,[rsp+0x10]    ;; debug: position 5869
0x225c0f3a8f1   305  e82a56ffff     call 0x225c0f2ff20       ;; code: STUB, CallFunctionStub, minor: 4
0x225c0f3a8f6   310  488b75f8       REX.W movq rsi,[rbp-0x8]
0x225c0f3a8fa   314  4883c408       REX.W addq rsp,0x8
0x225c0f3a8fe   318  48894510       REX.W movq [rbp+0x10],rax    ;; debug: position 5868
0x225c0f3a902   322  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: statement 5895
                                                             ;; debug: position 5916
0x225c0f3a906   326  eb0f           jmp 343  (0x225c0f3a917)
0x225c0f3a908   328  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a90c   332  0f8477000000   jz 457  (0x225c0f3a989)
0x225c0f3a912   338  e90d000000     jmp 356  (0x225c0f3a924)
0x225c0f3a917   343  a801           test al,0x1
0x225c0f3a919   345  0f846a000000   jz 457  (0x225c0f3a989)
0x225c0f3a91f   351  e900000000     jmp 356  (0x225c0f3a924)
0x225c0f3a924   356  ff75e8         push [rbp-0x18]          ;; debug: position 5923
0x225c0f3a927   359  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: position 5926
0x225c0f3a92b   363  5a             pop rdx
0x225c0f3a92c   364  e88f04ffff     call 0x225c0f2adc0       ;; code: COMPARE_IC, UNINITIALIZED (id = 144)
0x225c0f3a931   369  90             nop
0x225c0f3a932   370  eb0f           jmp 387  (0x225c0f3a943)
0x225c0f3a934   372  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3a938   376  0f844b000000   jz 457  (0x225c0f3a989)
0x225c0f3a93e   382  e909000000     jmp 396  (0x225c0f3a94c)
0x225c0f3a943   387  4885c0         REX.W testq rax,rax
0x225c0f3a946   390  0f843d000000   jz 457  (0x225c0f3a989)
0x225c0f3a94c   396  48b80000000000000000 REX.W movq rax,(nil)    ;; debug: statement 5930
0x225c0f3a956   406  48bbc9d45e3e57070000 REX.W movq rbx,0x7573e5ed4c9    ;; object: 0x7573e5ed4c9 Cell for 6144
0x225c0f3a960   416  83430bfe       addl [rbx+0xb],0xfe
0x225c0f3a964   420  791f           jns 453  (0x225c0f3a985)
0x225c0f3a966   422  50             push rax
0x225c0f3a967   423  e894b9ffff     call InterruptCheck  (0x225c0f36300)    ;; code: BUILTIN
0x225c0f3a96c   428  58             pop rax
0x225c0f3a96d   429  48bbc9d45e3e57070000 REX.W movq rbx,0x7573e5ed4c9    ;; object: 0x7573e5ed4c9 Cell for 6144
0x225c0f3a977   439  49ba0000000000180000 REX.W movq r10,0x180000000000
0x225c0f3a981   449  4c895307       REX.W movq [rbx+0x7],r10
0x225c0f3a985   453  c9             leave                    ;; debug: statement 5966
0x225c0f3a986   454  c21000         ret 0x10
0x225c0f3a989   457  ff75e8         push [rbp-0x18]          ;; debug: statement 5942
                                                             ;; debug: position 5960
0x225c0f3a98c   460  ff7510         push [rbp+0x10]          ;; debug: position 5962
0x225c0f3a98f   463  b802000000     movl rax,0x2
0x225c0f3a994   468  48bbe033290100000000 REX.W movq rbx,0x12933e0
0x225c0f3a99e   478  e8bde1fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3a9a3   483  e9aeffffff     jmp 406  (0x225c0f3a956)
0x225c0f3a9a8   488  498b45a8       REX.W movq rax,[r13-0x58]
0x225c0f3a9ac   492  e9a5ffffff     jmp 406  (0x225c0f3a956)
0x225c0f3a9b1   497  0f1f8000000000 nop

Deoptimization Output Data (deopt points = 0)

Back edges (size = 0)
ast_id  pc_offset  loop_depth

0x7573e5ed549: [TypeFeedbackInfo]
 - ic_total_count: 1, ic_with_type_info_count: 0, ic_generic_count: 0

RelocInfo (size = 96)
0x225c0f3a7c0  position  (5696)
0x225c0f3a7d4  code target (BUILTIN)  (0x225c0f36440)
0x225c0f3a7d8  statement position  (5701)
0x225c0f3a7d8  statement position  (5708)
0x225c0f3a7d8  position  (5719)
0x225c0f3a803  statement position  (5739)
0x225c0f3a803  position  (5741)
0x225c0f3a807  position  (5740)
0x225c0f3a80b  statement position  (5747)
0x225c0f3a80b  position  (5759)
0x225c0f3a836  statement position  (5774)
0x225c0f3a836  position  (5775)
0x225c0f3a851  position  (5798)
0x225c0f3a854  position  (5776)
0x225c0f3a85a  code target (STUB)  (0x225c0f2ff20)
0x225c0f3a866  position  (5775)
0x225c0f3a86f  statement position  (5809)
0x225c0f3a86f  position  (5810)
0x225c0f3a88a  position  (5833)
0x225c0f3a88d  position  (5811)
0x225c0f3a893  code target (STUB)  (0x225c0f2ff20)
0x225c0f3a89f  position  (5810)
0x225c0f3a8a3  statement position  (5840)
0x225c0f3a8a3  position  (5852)
0x225c0f3a8ce  statement position  (5867)
0x225c0f3a8ce  position  (5868)
0x225c0f3a8e9  position  (5891)
0x225c0f3a8ec  position  (5869)
0x225c0f3a8f2  code target (STUB)  (0x225c0f2ff20)
0x225c0f3a8fe  position  (5868)
0x225c0f3a902  statement position  (5895)
0x225c0f3a902  position  (5916)
0x225c0f3a924  position  (5923)
0x225c0f3a927  position  (5926)
0x225c0f3a92d  code target with id (COMPARE_IC)  (0x225c0f2adc0) (id=144)
0x225c0f3a94c  statement position  (5930)
0x225c0f3a958  embedded object  (0x7573e5ed4c9 Cell for 6144)
0x225c0f3a968  code target (BUILTIN)  (0x225c0f36300)
0x225c0f3a96f  embedded object  (0x7573e5ed4c9 Cell for 6144)
0x225c0f3a985  statement position  (5966)
0x225c0f3a989  statement position  (5942)
0x225c0f3a989  position  (5960)
0x225c0f3a98c  position  (5962)
0x225c0f3a99f  code target (STUB)  (0x225c0f08b60)

--- End code ---
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreGlobalStub
compiler = crankshaft
Instructions (size = 192)
0x225c0f3b580     0  48bb11d65e3e57070000 REX.W movq rbx,0x7573e5ed611    ;; object: 0x7573e5ed611 WeakCell for 0x7573e504311 <Odd Oddball>
0x225c0f3b58a    10  488b5b07       REX.W movq rbx,[rbx+0x7]
0x225c0f3b58e    14  f6c301         testb rbx,0x1
0x225c0f3b591    17  0f8453000000   jz 106  (0x225c0f3b5ea)
0x225c0f3b597    23  488b7b0f       REX.W movq rdi,[rbx+0xf]
0x225c0f3b59b    27  49bae941503e57070000 REX.W movq r10,0x7573e5041e9    ;; object: 0x7573e5041e9 <the hole>
0x225c0f3b5a5    37  493bfa         REX.W cmpq rdi,r10
0x225c0f3b5a8    40  0f8437000000   jz 101  (0x225c0f3b5e5)
0x225c0f3b5ae    46  488bd0         REX.W movq rdx,rax
0x225c0f3b5b1    49  4889530f       REX.W movq [rbx+0xf],rdx
0x225c0f3b5b5    53  f6c201         testb rdx,0x1
0x225c0f3b5b8    56  0f8426000000   jz 100  (0x225c0f3b5e4)
0x225c0f3b5be    62  488d4b0f       REX.W leaq rcx,[rbx+0xf]
0x225c0f3b5c2    66  4881e20000f0ff REX.W andq rdx,0xfffffffffff00000
0x225c0f3b5c9    73  f6420804       testb [rdx+0x8],0x4
0x225c0f3b5cd    77  7415           jz 100  (0x225c0f3b5e4)
0x225c0f3b5cf    79  48c7c20000f0ff REX.W movq rdx,0xfff00000
0x225c0f3b5d6    86  4823d3         REX.W andq rdx,rbx
0x225c0f3b5d9    89  f6420808       testb [rdx+0x8],0x8
0x225c0f3b5dd    93  7405           jz 100  (0x225c0f3b5e4)
0x225c0f3b5df    95  e8fcf4ffff     call 0x225c0f3aae0       ;; code: STUB, RecordWriteStub, minor: 8483
0x225c0f3b5e4   100  c3             ret
0x225c0f3b5e5   101  e90f000000     jmp 121  (0x225c0f3b5f9)
0x225c0f3b5ea   106  49ba0060d0c025020000 REX.W movq r10,0x225c0d06000
0x225c0f3b5f4   116  e80f000000     call 136  (0x225c0f3b608)
0x225c0f3b5f9   121  49ba0a60d0c025020000 REX.W movq r10,0x225c0d0600a
0x225c0f3b603   131  e800000000     call 136  (0x225c0f3b608)
0x225c0f3b608   136  4883ec10       REX.W subq rsp,0x10
0x225c0f3b60c   140  ff742410       push [rsp+0x10]
0x225c0f3b610   144  4152           push r10
0x225c0f3b612   146  4c8b55f8       REX.W movq r10,[rbp-0x8]
0x225c0f3b616   150  4c89542418     REX.W movq [rsp+0x18],r10
0x225c0f3b61b   155  48896c2420     REX.W movq [rsp+0x20],rbp
0x225c0f3b620   160  488d6c2420     REX.W leaq rbp,[rsp+0x20]
0x225c0f3b625   165  49ba0000000006000000 REX.W movq r10,0x600000000
0x225c0f3b62f   175  4c89542410     REX.W movq [rsp+0x10],r10
0x225c0f3b634   180  c3             ret
0x225c0f3b635   181  0f1f00         nop


Safepoints (size = 8)

RelocInfo (size = 5)
0x225c0f3b582  embedded object  (0x7573e5ed611 WeakCell for 0x7573e504311 <Odd Oddball>)
0x225c0f3b59d  embedded object  (0x7573e5041e9 <the hole>)
0x225c0f3b5e0  code target (STUB)  (0x225c0f3aae0)

--- End code ---
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreGlobalStub
compiler = crankshaft
Instructions (size = 168)
0x225c0f3b860     0  48bb71d75e3e57070000 REX.W movq rbx,0x7573e5ed771    ;; object: 0x7573e5ed771 WeakCell for 0x7573e504311 <Odd Oddball>
0x225c0f3b86a    10  488b5b07       REX.W movq rbx,[rbx+0x7]
0x225c0f3b86e    14  f6c301         testb rbx,0x1
0x225c0f3b871    17  0f842e000000   jz 69  (0x225c0f3b8a5)
0x225c0f3b877    23  488b7b0f       REX.W movq rdi,[rbx+0xf]
0x225c0f3b87b    27  49bae941503e57070000 REX.W movq r10,0x7573e5041e9    ;; object: 0x7573e5041e9 <the hole>
0x225c0f3b885    37  493bfa         REX.W cmpq rdi,r10
0x225c0f3b888    40  0f8412000000   jz 64  (0x225c0f3b8a0)
0x225c0f3b88e    46  488bf8         REX.W movq rdi,rax
0x225c0f3b891    49  40f6c701       testb rdi,0x1
0x225c0f3b895    53  0f8519000000   jnz 84  (0x225c0f3b8b4)
0x225c0f3b89b    59  48897b0f       REX.W movq [rbx+0xf],rdi
0x225c0f3b89f    63  c3             ret
0x225c0f3b8a0    64  e91e000000     jmp 99  (0x225c0f3b8c3)
0x225c0f3b8a5    69  49ba0060d0c025020000 REX.W movq r10,0x225c0d06000
0x225c0f3b8af    79  e81e000000     call 114  (0x225c0f3b8d2)
0x225c0f3b8b4    84  49ba0a60d0c025020000 REX.W movq r10,0x225c0d0600a
0x225c0f3b8be    94  e80f000000     call 114  (0x225c0f3b8d2)
0x225c0f3b8c3    99  49ba1460d0c025020000 REX.W movq r10,0x225c0d06014
0x225c0f3b8cd   109  e800000000     call 114  (0x225c0f3b8d2)
0x225c0f3b8d2   114  4883ec10       REX.W subq rsp,0x10
0x225c0f3b8d6   118  ff742410       push [rsp+0x10]
0x225c0f3b8da   122  4152           push r10
0x225c0f3b8dc   124  4c8b55f8       REX.W movq r10,[rbp-0x8]
0x225c0f3b8e0   128  4c89542418     REX.W movq [rsp+0x18],r10
0x225c0f3b8e5   133  48896c2420     REX.W movq [rsp+0x20],rbp
0x225c0f3b8ea   138  488d6c2420     REX.W leaq rbp,[rsp+0x20]
0x225c0f3b8ef   143  49ba0000000006000000 REX.W movq r10,0x600000000
0x225c0f3b8f9   153  4c89542410     REX.W movq [rsp+0x10],r10
0x225c0f3b8fe   158  c3             ret
0x225c0f3b8ff   159  90             nop


Safepoints (size = 8)

RelocInfo (size = 2)
0x225c0f3b862  embedded object  (0x7573e5ed771 WeakCell for 0x7573e504311 <Odd Oddball>)
0x225c0f3b87d  embedded object  (0x7573e5041e9 <the hole>)

--- End code ---
--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Code ---
source_position = 0
kind = FUNCTION
compiler = full-codegen
Instructions (size = 888)
0x225c0f3bb40     0  55             push rbp                 ;; debug: position 0
0x225c0f3bb41     1  4889e5         REX.W movq rbp,rsp
0x225c0f3bb44     4  56             push rsi
0x225c0f3bb45     5  57             push rdi
0x225c0f3bb46     6  41ff75a8       push [r13-0x58]
0x225c0f3bb4a    10  49bac1d85e3e57070000 REX.W movq r10,0x7573e5ed8c1    ;; object: 0x7573e5ed8c1 <FixedArray[6]>
0x225c0f3bb54    20  4152           push r10
0x225c0f3bb56    22  6a00           push 0x0
0x225c0f3bb58    24  b802000000     movl rax,0x2
0x225c0f3bb5d    29  48bb201c2a0100000000 REX.W movq rbx,0x12a1c20
0x225c0f3bb67    39  e8f4cffcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3bb6c    44  493ba540090000 REX.W cmpq rsp,[r13+0x940]
0x225c0f3bb73    51  7305           jnc 58  (0x225c0f3bb7a)
0x225c0f3bb75    53  e8c6a8ffff     call StackCheck  (0x225c0f36440)    ;; code: BUILTIN
0x225c0f3bb7a    58  48b8a1d85e3e57070000 REX.W movq rax,0x7573e5ed8a1    ;; debug: statement 1334
                                                             ;; debug: position 1350
                                                             ;; object: 0x7573e5ed8a1 <Number: 4.29497e+09>
0x225c0f3bb84    68  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3bb8e    78  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bb92    82  e8c963ffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3bb97    87  488945e8       REX.W movq [rbp-0x18],rax
0x225c0f3bb9b    91  48b80000000000000000 REX.W movq rax,(nil)    ;; debug: statement 1364
                                                             ;; debug: statement 1369
0x225c0f3bba5   101  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3bbaf   111  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bbb3   115  e8a863ffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3bbb8   120  e9fd000000     jmp 378  (0x225c0f3bcba)
0x225c0f3bbbd   125  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: statement 1401
                                                             ;; debug: position 1419
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3bbc7   135  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bbcb   139  48b8000000000a000000 REX.W movq rax,0xa00000000
0x225c0f3bbd5   149  e826c3feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bbda   154  50             push rax
0x225c0f3bbdb   155  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: position 1437
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3bbe5   165  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bbe9   169  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3bbf3   179  e808c3feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bbf8   184  5a             pop rdx                  ;; debug: position 1435
0x225c0f3bbf9   185  488bc8         REX.W movq rcx,rax
0x225c0f3bbfc   188  480bc2         REX.W orq rax,rdx
0x225c0f3bbff   191  a801           test al,0x1
0x225c0f3bc01   193  720c           jc 207  (0x225c0f3bc0f)
0x225c0f3bc03   195  488bc1         REX.W movq rax,rcx
0x225c0f3bc06   198  e81527feff     call 0x225c0f1e320       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 83)
0x225c0f3bc0b   203  a80a           test al,0xa
0x225c0f3bc0d   205  eb06           jmp 213  (0x225c0f3bc15)
0x225c0f3bc0f   207  488bc2         REX.W movq rax,rdx
0x225c0f3bc12   210  4823c1         REX.W andq rax,rcx
0x225c0f3bc15   213  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: position 1417
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3bc1f   223  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bc23   227  e83863ffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3bc28   232  488945e8       REX.W movq [rbp-0x18],rax
0x225c0f3bc2c   236  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: statement 1393
                                                             ;; debug: position 1392
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3bc36   246  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bc3a   250  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3bc44   260  e8b7c2feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bc49   265  a801           test al,0x1
0x225c0f3bc4b   267  7314           jnc 289  (0x225c0f3bc61)
0x225c0f3bc4d   269  49ba0000000001000000 REX.W movq r10,0x100000000
0x225c0f3bc57   279  4903c2         REX.W addq rax,r10
0x225c0f3bc5a   282  711e           jno 314  (0x225c0f3bc7a)
0x225c0f3bc5c   284  492bc2         REX.W subq rax,r10
0x225c0f3bc5f   287  eb05           jmp 294  (0x225c0f3bc66)
0x225c0f3bc61   289  e8ba6dfeff     call 0x225c0f22a20       ;; code: STUB, ToNumberStub, minor: 0
0x225c0f3bc66   294  488bd0         REX.W movq rdx,rax       ;; debug: position 1393
0x225c0f3bc69   297  48b80000000001000000 REX.W movq rax,0x100000000
0x225c0f3bc73   307  e828befdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 61)
0x225c0f3bc78   312  a82d           test al,0x2d
0x225c0f3bc7a   314  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3bc84   324  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bc88   328  e8d362ffff     call 0x225c0f31f60       ;; code: STORE_IC, UNINITIALIZED
0x225c0f3bc8d   333  48bbb1d85e3e57070000 REX.W movq rbx,0x7573e5ed8b1    ;; object: 0x7573e5ed8b1 Cell for 6144
0x225c0f3bc97   343  83430bff       addl [rbx+0xb],0xff
0x225c0f3bc9b   347  791d           jns 378  (0x225c0f3bcba)
0x225c0f3bc9d   349  e85ea6ffff     call InterruptCheck  (0x225c0f36300)    ;; code: BUILTIN
0x225c0f3bca2   354  48bbb1d85e3e57070000 REX.W movq rbx,0x7573e5ed8b1    ;; object: 0x7573e5ed8b1 Cell for 6144
0x225c0f3bcac   364  49ba0000000000180000 REX.W movq r10,0x180000000000
0x225c0f3bcb6   374  4c895307       REX.W movq [rbx+0x7],r10
0x225c0f3bcba   378  48b999b8543e57070000 REX.W movq rcx,0x7573e54b899    ;; debug: statement 1382
                                                             ;; debug: position 1380
                                                             ;; object: 0x7573e54b899 <String[1]: i>
0x225c0f3bcc4   388  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bcc8   392  48b80000000004000000 REX.W movq rax,0x400000000
0x225c0f3bcd2   402  e829c2feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bcd7   407  50             push rax
0x225c0f3bcd8   408  48b80000000066c175aa REX.W movq rax,0xaa75c16600000000
0x225c0f3bce2   418  49ba00000000a6e67caa REX.W movq r10,0xaa7ce6a600000000
0x225c0f3bcec   428  4933c2         REX.W xorq rax,r10
0x225c0f3bcef   431  5a             pop rdx
0x225c0f3bcf0   432  488bca         REX.W movq rcx,rdx
0x225c0f3bcf3   435  480bc8         REX.W orq rcx,rax
0x225c0f3bcf6   438  f6c101         testb rcx,0x1
0x225c0f3bcf9   441  730e           jnc 457  (0x225c0f3bd09)
0x225c0f3bcfb   443  483bd0         REX.W cmpq rdx,rax
0x225c0f3bcfe   446  0f8cb9feffff   jl 125  (0x225c0f3bbbd)
0x225c0f3bd04   452  e921000000     jmp 490  (0x225c0f3bd2a)
0x225c0f3bd09   457  e89203feff     call 0x225c0f1c0a0       ;; code: COMPARE_IC, UNINITIALIZED (id = 50)
0x225c0f3bd0e   462  a815           test al,0x15
0x225c0f3bd10   464  eb0f           jmp 481  (0x225c0f3bd21)
0x225c0f3bd12   466  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3bd16   470  0f84a1feffff   jz 125  (0x225c0f3bbbd)
0x225c0f3bd1c   476  e909000000     jmp 490  (0x225c0f3bd2a)
0x225c0f3bd21   481  4885c0         REX.W testq rax,rax
0x225c0f3bd24   484  0f8c93feffff   jl 125  (0x225c0f3bbbd)
0x225c0f3bd2a   490  49bac1cf5e3e57070000 REX.W movq r10,0x7573e5ecfc1    ;; debug: statement 1441
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3bd34   500  4152           push r10
0x225c0f3bd36   502  6a00           push 0x0
0x225c0f3bd38   504  48b999cf5e3e57070000 REX.W movq rcx,0x7573e5ecf99    ;; debug: position 1454
                                                             ;; object: 0x7573e5ecf99 <String[15]: bitwiseAndValue>
0x225c0f3bd42   514  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bd46   518  48b8000000000a000000 REX.W movq rax,0xa00000000
0x225c0f3bd50   528  e8abc1feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bd55   533  50             push rax
0x225c0f3bd56   534  b803000000     movl rax,0x3
0x225c0f3bd5b   539  48bbc0222a0100000000 REX.W movq rbx,0x12a22c0
0x225c0f3bd65   549  e8f6cdfcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3bd6a   554  49bae1cf5e3e57070000 REX.W movq r10,0x7573e5ecfe1    ;; debug: statement 1472
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3bd74   564  4152           push r10
0x225c0f3bd76   566  6a00           push 0x0
0x225c0f3bd78   568  6a00           push 0x0
0x225c0f3bd7a   570  b803000000     movl rax,0x3
0x225c0f3bd7f   575  48bbc0222a0100000000 REX.W movq rbx,0x12a22c0
0x225c0f3bd89   585  e8d2cdfcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3bd8e   590  48b9c1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfc1    ;; debug: statement 1490
                                                             ;; debug: position 1494
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3bd98   600  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bd9c   604  48b80000000006000000 REX.W movq rax,0x600000000
0x225c0f3bda6   614  e855c1feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bdab   619  50             push rax
0x225c0f3bdac   620  48b9e1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfe1    ;; debug: position 1504
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3bdb6   630  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3bdba   634  48b80000000008000000 REX.W movq rax,0x800000000
0x225c0f3bdc4   644  e837c1feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3bdc9   649  5a             pop rdx
0x225c0f3bdca   650  e8f1effeff     call 0x225c0f2adc0       ;; code: COMPARE_IC, UNINITIALIZED (id = 129)
0x225c0f3bdcf   655  90             nop
0x225c0f3bdd0   656  eb0f           jmp 673  (0x225c0f3bde1)
0x225c0f3bdd2   658  493b45c0       REX.W cmpq rax,[r13-0x40]
0x225c0f3bdd6   662  0f848a000000   jz 806  (0x225c0f3be66)
0x225c0f3bddc   668  e909000000     jmp 682  (0x225c0f3bdea)
0x225c0f3bde1   673  4885c0         REX.W testq rax,rax
0x225c0f3bde4   676  0f847c000000   jz 806  (0x225c0f3be66)
0x225c0f3bdea   682  49ba01d05e3e57070000 REX.W movq r10,0x7573e5ed001    ;; debug: statement 1518
                                                             ;; object: 0x7573e5ed001 <String[28]: ERROR: bad result: expected >
0x225c0f3bdf4   692  4152           push r10
0x225c0f3bdf6   694  48b9e1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfe1    ;; debug: position 1557
                                                             ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3be00   704  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3be04   708  48b80000000008000000 REX.W movq rax,0x800000000
0x225c0f3be0e   718  e8edc0feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3be13   723  5a             pop rdx                  ;; debug: position 1555
0x225c0f3be14   724  e887bcfdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 149)
0x225c0f3be19   729  90             nop
0x225c0f3be1a   730  50             push rax
0x225c0f3be1b   731  48b839d05e3e57070000 REX.W movq rax,0x7573e5ed039    ;; object: 0x7573e5ed039 <String[9]:  but got >
0x225c0f3be25   741  5a             pop rdx                  ;; debug: position 1566
0x225c0f3be26   742  e875bcfdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 145)
0x225c0f3be2b   747  90             nop
0x225c0f3be2c   748  50             push rax
0x225c0f3be2d   749  48b9c1cf5e3e57070000 REX.W movq rcx,0x7573e5ecfc1    ;; debug: position 1582
                                                             ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3be37   759  488b5627       REX.W movq rdx,[rsi+0x27]
0x225c0f3be3b   763  48b80000000006000000 REX.W movq rax,0x600000000
0x225c0f3be45   773  e8b6c0feff     call 0x225c0f27f00       ;; code: contextual, LOAD_IC, DEFAULT
0x225c0f3be4a   778  5a             pop rdx                  ;; debug: position 1580
0x225c0f3be4b   779  e850bcfdff     call 0x225c0f17aa0       ;; code: BINARY_OP_IC, UNINITIALIZED (id = 141)
0x225c0f3be50   784  90             nop
0x225c0f3be51   785  50             push rax
0x225c0f3be52   786  b801000000     movl rax,0x1             ;; debug: position 1518
0x225c0f3be57   791  48bb1023280100000000 REX.W movq rbx,0x1282310
0x225c0f3be61   801  e8faccfcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3be66   806  488b45e8       REX.W movq rax,[rbp-0x18]    ;; debug: statement 1591
0x225c0f3be6a   810  48bbb1d85e3e57070000 REX.W movq rbx,0x7573e5ed8b1    ;; object: 0x7573e5ed8b1 Cell for 6144
0x225c0f3be74   820  83430bfc       addl [rbx+0xb],0xfc
0x225c0f3be78   824  791f           jns 857  (0x225c0f3be99)
0x225c0f3be7a   826  50             push rax
0x225c0f3be7b   827  e880a4ffff     call InterruptCheck  (0x225c0f36300)    ;; code: BUILTIN
0x225c0f3be80   832  58             pop rax
0x225c0f3be81   833  48bbb1d85e3e57070000 REX.W movq rbx,0x7573e5ed8b1    ;; object: 0x7573e5ed8b1 Cell for 6144
0x225c0f3be8b   843  49ba0000000000180000 REX.W movq r10,0x180000000000
0x225c0f3be95   853  4c895307       REX.W movq [rbx+0x7],r10
0x225c0f3be99   857  c9             leave                    ;; debug: statement 1590
0x225c0f3be9a   858  c20800         ret 0x8
0x225c0f3be9d   861  498b45a8       REX.W movq rax,[r13-0x58]
0x225c0f3bea1   865  e9c4ffffff     jmp 810  (0x225c0f3be6a)
0x225c0f3bea6   870  6690           nop

Deoptimization Output Data (deopt points = 71)
ast id        pc  state
     1        10  NO_REGISTERS
     2        10  NO_REGISTERS
     3        44  NO_REGISTERS
    27        68  TOS_REG
    22        87  TOS_REG
    20        87  TOS_REG
    15        91  TOS_REG
    13        91  NO_REGISTERS
    35        91  NO_REGISTERS
    45       101  TOS_REG
    40       120  TOS_REG
    38       120  NO_REGISTERS
    36       120  NO_REGISTERS
    34       125  NO_REGISTERS
    86       125  NO_REGISTERS
    84       155  NO_REGISTERS
    89       155  NO_REGISTERS
    87       184  TOS_REG
    80       213  TOS_REG
    75       232  TOS_REG
    73       232  TOS_REG
    68       236  TOS_REG
    66       236  NO_REGISTERS
    33       236  NO_REGISTERS
    65       236  NO_REGISTERS
    63       265  TOS_REG
    60       294  TOS_REG
    59       333  TOS_REG
    57       333  NO_REGISTERS
    30       378  NO_REGISTERS
    32       378  NO_REGISTERS
    53       378  NO_REGISTERS
    51       408  NO_REGISTERS
    54       431  TOS_REG
    48       466  TOS_REG
    31       490  NO_REGISTERS
    90       490  NO_REGISTERS
    96       502  NO_REGISTERS
    99       504  NO_REGISTERS
   104       504  NO_REGISTERS
   102       534  NO_REGISTERS
    95       534  NO_REGISTERS
    93       554  NO_REGISTERS
    91       554  NO_REGISTERS
   105       554  NO_REGISTERS
   111       566  NO_REGISTERS
   114       568  NO_REGISTERS
   117       570  NO_REGISTERS
   110       570  NO_REGISTERS
   108       590  NO_REGISTERS
   106       590  NO_REGISTERS
   132       590  NO_REGISTERS
   130       620  NO_REGISTERS
   135       620  NO_REGISTERS
   133       649  TOS_REG
   127       658  TOS_REG
   121       682  NO_REGISTERS
   150       694  NO_REGISTERS
   155       694  NO_REGISTERS
   153       723  TOS_REG
   146       731  NO_REGISTERS
   156       741  TOS_REG
   142       749  NO_REGISTERS
   161       749  NO_REGISTERS
   159       778  TOS_REG
   138       786  NO_REGISTERS
   136       806  NO_REGISTERS
   122       806  NO_REGISTERS
   120       806  NO_REGISTERS
   164       806  NO_REGISTERS
   162       810  TOS_REG

Back edges (size = 1)
ast_id  pc_offset  loop_depth
    32        354           1

0x7573e5ede29: [TypeFeedbackInfo]
 - ic_total_count: 20, ic_with_type_info_count: 0, ic_generic_count: 0

RelocInfo (size = 150)
0x225c0f3bb40  position  (0)
0x225c0f3bb4c  embedded object  (0x7573e5ed8c1 <FixedArray[6]>)
0x225c0f3bb68  code target (STUB)  (0x225c0f08b60)
0x225c0f3bb76  code target (BUILTIN)  (0x225c0f36440)
0x225c0f3bb7a  statement position  (1334)
0x225c0f3bb7a  position  (1350)
0x225c0f3bb7c  embedded object  (0x7573e5ed8a1 <Number: 4.29497e+09>)
0x225c0f3bb86  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3bb93  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3bb9b  statement position  (1364)
0x225c0f3bb9b  statement position  (1369)
0x225c0f3bba7  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3bbb4  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3bbbd  statement position  (1401)
0x225c0f3bbbd  position  (1419)
0x225c0f3bbbf  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3bbd6  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bbdb  position  (1437)
0x225c0f3bbdd  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3bbf4  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bbf8  position  (1435)
0x225c0f3bc07  code target with id (BINARY_OP_IC)  (0x225c0f1e320) (id=83)
0x225c0f3bc15  position  (1417)
0x225c0f3bc17  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3bc24  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3bc2c  statement position  (1393)
0x225c0f3bc2c  position  (1392)
0x225c0f3bc2e  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3bc45  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bc62  code target (STUB)  (0x225c0f22a20)
0x225c0f3bc66  position  (1393)
0x225c0f3bc74  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=61)
0x225c0f3bc7c  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3bc89  code target (STORE_IC)  (0x225c0f31f60)
0x225c0f3bc8f  embedded object  (0x7573e5ed8b1 Cell for 6144)
0x225c0f3bc9e  code target (BUILTIN)  (0x225c0f36300)
0x225c0f3bca4  embedded object  (0x7573e5ed8b1 Cell for 6144)
0x225c0f3bcba  statement position  (1382)
0x225c0f3bcba  position  (1380)
0x225c0f3bcbc  embedded object  (0x7573e54b899 <String[1]: i>)
0x225c0f3bcd3  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bd0a  code target with id (COMPARE_IC)  (0x225c0f1c0a0) (id=50)
0x225c0f3bd2a  statement position  (1441)
0x225c0f3bd2c  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3bd38  position  (1454)
0x225c0f3bd3a  embedded object  (0x7573e5ecf99 <String[15]: bitwiseAndValue>)
0x225c0f3bd51  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bd66  code target (STUB)  (0x225c0f08b60)
0x225c0f3bd6a  statement position  (1472)
0x225c0f3bd6c  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3bd8a  code target (STUB)  (0x225c0f08b60)
0x225c0f3bd8e  statement position  (1490)
0x225c0f3bd8e  position  (1494)
0x225c0f3bd90  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3bda7  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bdac  position  (1504)
0x225c0f3bdae  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3bdc5  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3bdcb  code target with id (COMPARE_IC)  (0x225c0f2adc0) (id=129)
0x225c0f3bdea  statement position  (1518)
0x225c0f3bdec  embedded object  (0x7573e5ed001 <String[28]: ERROR: bad result: expected >)
0x225c0f3bdf6  position  (1557)
0x225c0f3bdf8  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3be0f  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3be13  position  (1555)
0x225c0f3be15  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=149)
0x225c0f3be1d  embedded object  (0x7573e5ed039 <String[9]:  but got >)
0x225c0f3be25  position  (1566)
0x225c0f3be27  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=145)
0x225c0f3be2d  position  (1582)
0x225c0f3be2f  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3be46  code target (LOAD_IC)  (0x225c0f27f00)
0x225c0f3be4a  position  (1580)
0x225c0f3be4c  code target with id (BINARY_OP_IC)  (0x225c0f17aa0) (id=141)
0x225c0f3be52  position  (1518)
0x225c0f3be62  code target (STUB)  (0x225c0f08b60)
0x225c0f3be66  statement position  (1591)
0x225c0f3be6c  embedded object  (0x7573e5ed8b1 Cell for 6144)
0x225c0f3be7c  code target (BUILTIN)  (0x225c0f36300)
0x225c0f3be83  embedded object  (0x7573e5ed8b1 Cell for 6144)
0x225c0f3be99  statement position  (1590)

--- End code ---
--- Raw source ---
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

bitwiseAndValue = 4294967296;
for (var i = 0; i < 600000; i++)
    bitwiseAndValue = bitwiseAndValue & i;

var result = bitwiseAndValue;

var expected = 0;
if (result != expected)
    throw "ERROR: bad result: expected " + expected + " but got " + result;



--- Optimized code ---
optimization_id = 0
source_position = 0
kind = OPTIMIZED_FUNCTION
stack_slots = 4
compiler = crankshaft
Instructions (size = 735)
0x225c0f3ca60     0  55             push rbp
0x225c0f3ca61     1  4889e5         REX.W movq rbp,rsp
0x225c0f3ca64     4  56             push rsi
0x225c0f3ca65     5  57             push rdi
0x225c0f3ca66     6  4883ec20       REX.W subq rsp,0x20
0x225c0f3ca6a    10  488b45f8       REX.W movq rax,[rbp-0x8]
0x225c0f3ca6e    14  488945e0       REX.W movq [rbp-0x20],rax
0x225c0f3ca72    18  488bf0         REX.W movq rsi,rax
0x225c0f3ca75    21  6690           nop
0x225c0f3ca77    23  49ba49de5e3e57070000 REX.W movq r10,0x7573e5ede49    ;; object: 0x7573e5ede49 <FixedArray[6]>
0x225c0f3ca81    33  4152           push r10
0x225c0f3ca83    35  6a00           push 0x0
0x225c0f3ca85    37  b802000000     movl rax,0x2
0x225c0f3ca8a    42  498d9d282534fd REX.W leaq rbx,[r13-0x2cbdad8]
0x225c0f3ca91    49  e8cac0fcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3ca96    54  488b75e0       REX.W movq rsi,[rbp-0x20]
0x225c0f3ca9a    58  660f1f840000000000 nop
0x225c0f3caa3    67  493ba540090000 REX.W cmpq rsp,[r13+0x940]
0x225c0f3caaa    74  7305           jnc 81  (0x225c0f3cab1)
0x225c0f3caac    76  e88f99ffff     call StackCheck  (0x225c0f36440)    ;; code: BUILTIN
0x225c0f3cab1    81  49ba000000000000f041 REX.W movq r10,0x41f0000000000000
0x225c0f3cabb    91  66490f6eca     REX.W movq xmm1,r10
0x225c0f3cac0    96  48b821d45e3e57070000 REX.W movq rax,0x7573e5ed421    ;; object: 0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x225c0f3caca   106  48bba1d85e3e57070000 REX.W movq rbx,0x7573e5ed8a1    ;; object: 0x7573e5ed8a1 <Number: 4.29497e+09>
0x225c0f3cad4   116  4889580f       REX.W movq [rax+0xf],rbx
0x225c0f3cad8   120  f6c301         testb rbx,0x1
0x225c0f3cadb   123  0f8426000000   jz 167  (0x225c0f3cb07)
0x225c0f3cae1   129  488d500f       REX.W leaq rdx,[rax+0xf]
0x225c0f3cae5   133  4881e30000f0ff REX.W andq rbx,0xfffffffffff00000
0x225c0f3caec   140  f6430804       testb [rbx+0x8],0x4
0x225c0f3caf0   144  7415           jz 167  (0x225c0f3cb07)
0x225c0f3caf2   146  48c7c30000f0ff REX.W movq rbx,0xfff00000
0x225c0f3caf9   153  4823d8         REX.W andq rbx,rax
0x225c0f3cafc   156  f6430808       testb [rbx+0x8],0x8
0x225c0f3cb00   160  7405           jz 167  (0x225c0f3cb07)
0x225c0f3cb02   162  e819f4ffff     call 0x225c0f3bf20       ;; code: STUB, RecordWriteStub, minor: 8752
0x225c0f3cb07   167  48b861d35e3e57070000 REX.W movq rax,0x7573e5ed361    ;; object: 0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_])
0x225c0f3cb11   177  4533d2         xorl r10,r10
0x225c0f3cb14   180  4c89500f       REX.W movq [rax+0xf],r10
0x225c0f3cb18   184  e940000000     jmp 253  (0x225c0f3cb5d)
0x225c0f3cb1d   189  4883ec18       REX.W subq rsp,0x18
0x225c0f3cb21   193  488b75f8       REX.W movq rsi,[rbp-0x8]
0x225c0f3cb25   197  488b45e8       REX.W movq rax,[rbp-0x18]
0x225c0f3cb29   201  a801           test al,0x1
0x225c0f3cb2b   203  7415           jz 226  (0x225c0f3cb42)
0x225c0f3cb2d   205  4d8b5508       REX.W movq r10,[r13+0x8]
0x225c0f3cb31   209  4c3950ff       REX.W cmpq [rax-0x1],r10
0x225c0f3cb35   213  f20f104807     movsd xmm1,[rax+0x7]
0x225c0f3cb3a   218  0f85b5010000   jnz 661  (0x225c0f3ccf5)
0x225c0f3cb40   224  eb0f           jmp 241  (0x225c0f3cb51)
0x225c0f3cb42   226  4c8bd0         REX.W movq r10,rax
0x225c0f3cb45   229  49c1ea20       REX.W shrq r10, 32
0x225c0f3cb49   233  0f57c9         xorps xmm1,xmm1
0x225c0f3cb4c   236  f2410f2aca     cvtsi2sd xmm1,r10
0x225c0f3cb51   241  488b5d10       REX.W movq rbx,[rbp+0x10]
0x225c0f3cb55   245  488bc6         REX.W movq rax,rsi
0x225c0f3cb58   248  e908000000     jmp 261  (0x225c0f3cb65)
0x225c0f3cb5d   253  488b5d10       REX.W movq rbx,[rbp+0x10]
0x225c0f3cb61   257  488b45e0       REX.W movq rax,[rbp-0x20]
0x225c0f3cb65   261  48895dd8       REX.W movq [rbp-0x28],rbx
0x225c0f3cb69   265  488945e8       REX.W movq [rbp-0x18],rax
0x225c0f3cb6d   269  f20f114dd0     movsd [rbp-0x30],xmm1    ;; debug: position 1382
0x225c0f3cb72   274  48ba61d35e3e57070000 REX.W movq rdx,0x7573e5ed361    ;; object: 0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_])
0x225c0f3cb7c   284  8b5213         movl rdx,[rdx+0x13]
0x225c0f3cb7f   287  81fac0270900   cmpl rdx,0x927c0
0x225c0f3cb85   293  0f8d61000000   jge 396  (0x225c0f3cbec)
0x225c0f3cb8b   299  493ba540090000 REX.W cmpq rsp,[r13+0x940]
0x225c0f3cb92   306  0f82b7000000   jc 495  (0x225c0f3cc4f)
0x225c0f3cb98   312  48b921d45e3e57070000 REX.W movq rcx,0x7573e5ed421    ;; object: 0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x225c0f3cba2   322  488b490f       REX.W movq rcx,[rcx+0xf]
0x225c0f3cba6   326  f6c101         testb rcx,0x1            ;; debug: position 1435
0x225c0f3cba9   329  0f85e5000000   jnz 564  (0x225c0f3cc94)
0x225c0f3cbaf   335  48c1e920       REX.W shrq rcx, 32
0x225c0f3cbb3   339  488bf1         REX.W movq rsi,rcx
0x225c0f3cbb6   342  23f2           andl rsi,rdx
0x225c0f3cbb8   344  8bfe           movl rdi,rsi
0x225c0f3cbba   346  48c1e720       REX.W shlq rdi, 32
0x225c0f3cbbe   350  48b921d45e3e57070000 REX.W movq rcx,0x7573e5ed421    ;; debug: position 1382
                                                             ;; object: 0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x225c0f3cbc8   360  4889790f       REX.W movq [rcx+0xf],rdi    ;; debug: position 1435
0x225c0f3cbcc   364  83c201         addl rdx,0x1             ;; debug: position 1393
0x225c0f3cbcf   367  8bca           movl rcx,rdx
0x225c0f3cbd1   369  48c1e120       REX.W shlq rcx, 32
0x225c0f3cbd5   373  48ba61d35e3e57070000 REX.W movq rdx,0x7573e5ed361    ;; debug: position 1382
                                                             ;; object: 0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_])
0x225c0f3cbdf   383  48894a0f       REX.W movq [rdx+0xf],rcx    ;; debug: position 1393
0x225c0f3cbe3   387  0f57c9         xorps xmm1,xmm1          ;; debug: position 1382
0x225c0f3cbe6   390  f20f2ace       cvtsi2sd xmm1,rsi
0x225c0f3cbea   394  eb81           jmp 269  (0x225c0f3cb6d)    ;; debug: position 1393
0x225c0f3cbec   396  48b921d45e3e57070000 REX.W movq rcx,0x7573e5ed421    ;; debug: position 1382
                                                             ;; object: 0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC])
0x225c0f3cbf6   406  488b510f       REX.W movq rdx,[rcx+0xf]    ;; debug: position 1393
0x225c0f3cbfa   410  49bac1cf5e3e57070000 REX.W movq r10,0x7573e5ecfc1    ;; object: 0x7573e5ecfc1 <String[6]: result>
0x225c0f3cc04   420  4152           push r10
0x225c0f3cc06   422  6a00           push 0x0
0x225c0f3cc08   424  52             push rdx
0x225c0f3cc09   425  488bf0         REX.W movq rsi,rax
0x225c0f3cc0c   428  b803000000     movl rax,0x3
0x225c0f3cc11   433  498d9dc82b34fd REX.W leaq rbx,[r13-0x2cbd438]
0x225c0f3cc18   440  e843bffcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3cc1d   445  49bae1cf5e3e57070000 REX.W movq r10,0x7573e5ecfe1    ;; object: 0x7573e5ecfe1 <String[8]: expected>
0x225c0f3cc27   455  4152           push r10
0x225c0f3cc29   457  6a00           push 0x0
0x225c0f3cc2b   459  6a00           push 0x0
0x225c0f3cc2d   461  488b75e8       REX.W movq rsi,[rbp-0x18]
0x225c0f3cc31   465  b803000000     movl rax,0x3
0x225c0f3cc36   470  498d9dc82b34fd REX.W leaq rbx,[r13-0x2cbd438]
0x225c0f3cc3d   477  e81ebffcff     call 0x225c0f08b60       ;; code: STUB, CEntryStub, minor: 0
0x225c0f3cc42   482  e80994ecff     call 0x225c0e06050       ;; debug: position 1501
                                                             ;; soft deoptimization bailout 8
0x225c0f3cc47   487  0f1f840000000000 nop
0x225c0f3cc4f   495  50             push rax                 ;; debug: position 1382
0x225c0f3cc50   496  51             push rcx
0x225c0f3cc51   497  52             push rdx
0x225c0f3cc52   498  53             push rbx
0x225c0f3cc53   499  56             push rsi
0x225c0f3cc54   500  57             push rdi
0x225c0f3cc55   501  4150           push r8
0x225c0f3cc57   503  4151           push r9
0x225c0f3cc59   505  4153           push r11
0x225c0f3cc5b   507  4154           push r12
0x225c0f3cc5d   509  4156           push r14
0x225c0f3cc5f   511  4157           push r15
0x225c0f3cc61   513  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x225c0f3cc66   518  488b75f8       REX.W movq rsi,[rbp-0x8]
0x225c0f3cc6a   522  33c0           xorl rax,rax
0x225c0f3cc6c   524  498d9d084232fd REX.W leaq rbx,[r13-0x2cdbdf8]
0x225c0f3cc73   531  e82896fcff     call 0x225c0f062a0       ;; code: STUB, CEntryStub, minor: 1
0x225c0f3cc78   536  488d642420     REX.W leaq rsp,[rsp+0x20]
0x225c0f3cc7d   541  415f           pop r15
0x225c0f3cc7f   543  415e           pop r14
0x225c0f3cc81   545  415c           pop r12
0x225c0f3cc83   547  415b           pop r11
0x225c0f3cc85   549  4159           pop r9
0x225c0f3cc87   551  4158           pop r8
0x225c0f3cc89   553  5f             pop rdi
0x225c0f3cc8a   554  5e             pop rsi
0x225c0f3cc8b   555  5b             pop rbx
0x225c0f3cc8c   556  5a             pop rdx
0x225c0f3cc8d   557  59             pop rcx
0x225c0f3cc8e   558  58             pop rax
0x225c0f3cc8f   559  e904ffffff     jmp 312  (0x225c0f3cb98)
0x225c0f3cc94   564  4d8b5508       REX.W movq r10,[r13+0x8]    ;; debug: position 1435
0x225c0f3cc98   568  4c3951ff       REX.W cmpq [rcx-0x1],r10
0x225c0f3cc9c   572  7529           jnz 615  (0x225c0f3ccc7)
0x225c0f3cc9e   574  f20f104107     movsd xmm0,[rcx+0x7]
0x225c0f3cca3   579  f2480f2cc8     REX.W cvttsd2siq rcx,xmm0
0x225c0f3cca8   584  4883f901       REX.W cmpq rcx,0x1
0x225c0f3ccac   588  7112           jno 608  (0x225c0f3ccc0)
0x225c0f3ccae   590  4883ec08       REX.W subq rsp,0x8
0x225c0f3ccb2   594  f20f110424     movsd [rsp],xmm0
0x225c0f3ccb7   599  e8e4fcffff     call 0x225c0f3c9a0       ;; code: STUB, DoubleToIStub, minor: 135236
0x225c0f3ccbc   604  4883c408       REX.W addq rsp,0x8
0x225c0f3ccc0   608  8bc9           movl rcx,rcx
0x225c0f3ccc2   610  e9ecfeffff     jmp 339  (0x225c0f3cbb3)
0x225c0f3ccc7   615  493b4da8       REX.W cmpq rcx,[r13-0x58]
0x225c0f3cccb   619  7507           jnz 628  (0x225c0f3ccd4)
0x225c0f3cccd   621  33c9           xorl rcx,rcx
0x225c0f3cccf   623  e9dffeffff     jmp 339  (0x225c0f3cbb3)
0x225c0f3ccd4   628  493b4dc0       REX.W cmpq rcx,[r13-0x40]
0x225c0f3ccd8   632  750a           jnz 644  (0x225c0f3cce4)
0x225c0f3ccda   634  b901000000     movl rcx,0x1
0x225c0f3ccdf   639  e9cffeffff     jmp 339  (0x225c0f3cbb3)
0x225c0f3cce4   644  493b4dc8       REX.W cmpq rcx,[r13-0x38]
0x225c0f3cce8   648  0f850c000000   jnz 666  (0x225c0f3ccfa)
0x225c0f3ccee   654  33c9           xorl rcx,rcx
0x225c0f3ccf0   656  e9befeffff     jmp 339  (0x225c0f3cbb3)
0x225c0f3ccf5   661  e82e93ccff     call 0x225c0c06028       ;; deoptimization bailout 4
0x225c0f3ccfa   666  e85b93ccff     call 0x225c0c0605a       ;; deoptimization bailout 9
0x225c0f3ccff   671  90             nop

Inlined functions (count = 0)

Deoptimization Input Data (deopt points = 10)
 index  ast id    argc     pc
     0       1       0     10
     1       3       0     54
     2       3       0     81
     3      32       0     -1
     4      30       0     -1
     5      34       0    312
     6      93       0    445
     7     108       0    482
     8     108       0     -1
     9      34       0     -1

Safepoints (size = 63)
0x225c0f3ca96    54  0010 (sp -> fp)       1
0x225c0f3cab1    81  0010 (sp -> fp)       2
0x225c0f3cc1d   445  0101 (sp -> fp)       6
0x225c0f3cc42   482  0101 (sp -> fp)       7
0x225c0f3cc78   536  0101 | rax | rbx (sp -> fp)       5

RelocInfo (size = 86)
0x225c0f3ca79  embedded object  (0x7573e5ede49 <FixedArray[6]>)
0x225c0f3ca92  code target (STUB)  (0x225c0f08b60)
0x225c0f3caad  code target (BUILTIN)  (0x225c0f36440)
0x225c0f3cac2  embedded object  (0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x225c0f3cacc  embedded object  (0x7573e5ed8a1 <Number: 4.29497e+09>)
0x225c0f3cb03  code target (STUB)  (0x225c0f3bf20)
0x225c0f3cb09  embedded object  (0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_]))
0x225c0f3cb6d  position  (1382)
0x225c0f3cb74  embedded object  (0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_]))
0x225c0f3cb9a  embedded object  (0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x225c0f3cba6  position  (1435)
0x225c0f3cbbe  position  (1382)
0x225c0f3cbc0  embedded object  (0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x225c0f3cbc8  position  (1435)
0x225c0f3cbcc  position  (1393)
0x225c0f3cbd5  position  (1382)
0x225c0f3cbd7  embedded object  (0x7573e5ed361 PropertyCell for 24581 (data, dictionary_index: 165, attrs: [WE_]))
0x225c0f3cbdf  position  (1393)
0x225c0f3cbe3  position  (1382)
0x225c0f3cbea  position  (1393)
0x225c0f3cbec  position  (1382)
0x225c0f3cbee  embedded object  (0x7573e5ed421 PropertyCell for 0 (data, dictionary_index: 174, attrs: [WEC]))
0x225c0f3cbf6  position  (1393)
0x225c0f3cbfc  embedded object  (0x7573e5ecfc1 <String[6]: result>)
0x225c0f3cc19  code target (STUB)  (0x225c0f08b60)
0x225c0f3cc1f  embedded object  (0x7573e5ecfe1 <String[8]: expected>)
0x225c0f3cc3e  code target (STUB)  (0x225c0f08b60)
0x225c0f3cc42  position  (1501)
0x225c0f3cc43  runtime entry
0x225c0f3cc4f  position  (1382)
0x225c0f3cc74  code target (STUB)  (0x225c0f062a0)
0x225c0f3cc94  position  (1435)
0x225c0f3ccb8  code target (STUB)  (0x225c0f3c9a0)
0x225c0f3ccf6  runtime entry  (deoptimization bailout 4)
0x225c0f3ccfb  runtime entry  (deoptimization bailout 9)

--- End code ---
